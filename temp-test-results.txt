============================= test session starts ==============================
platform linux -- Python 3.11.12, pytest-8.3.5, pluggy-1.5.0 -- /opt/hostedtoolcache/Python/3.11.12/x64/bin/python
cachedir: .pytest_cache
rootdir: /home/runner/work/workbench-agent/workbench-agent
configfile: pyproject.toml
collecting ... collected 194 items

tests/handlers/test_download_reports_handler.py::test_handle_download_reports_scan_sync ERROR [  0%]
tests/handlers/test_download_reports_handler.py::test_handle_download_reports_project_async ERROR [  1%]
tests/handlers/test_download_reports_handler.py::test_handle_download_reports_multiple_one_fails ERROR [  1%]
tests/handlers/test_download_reports_handler.py::test_handle_download_reports_scan_global_resolve ERROR [  2%]
tests/handlers/test_download_reports_handler.py::test_handle_download_reports_scan_global_resolve_project_fail ERROR [  2%]
tests/handlers/test_download_reports_handler.py::test_handle_download_reports_invalid_scope ERROR [  3%]
tests/handlers/test_download_reports_handler.py::test_handle_download_reports_invalid_type ERROR [  3%]
tests/handlers/test_download_reports_handler.py::test_handle_download_reports_project_resolve_fails ERROR [  4%]
tests/handlers/test_download_reports_handler.py::test_handle_download_reports_scan_resolve_fails ERROR [  4%]
tests/handlers/test_evaluate_gates_handler.py::test_handle_evaluate_gates_pass ERROR [  5%]
tests/handlers/test_evaluate_gates_handler.py::test_handle_evaluate_gates_pass_needs_wait ERROR [  5%]
tests/handlers/test_evaluate_gates_handler.py::test_handle_evaluate_gates_fail_pending ERROR [  6%]
tests/handlers/test_evaluate_gates_handler.py::test_handle_evaluate_gates_fail_policy ERROR [  6%]
tests/handlers/test_evaluate_gates_handler.py::test_handle_evaluate_gates_pass_with_pending_fail_on_policy ERROR [  7%]
tests/handlers/test_evaluate_gates_handler.py::test_handle_evaluate_gates_pass_with_policy_fail_on_pending ERROR [  7%]
tests/handlers/test_evaluate_gates_handler.py::test_handle_evaluate_gates_fail_scan_wait ERROR [  8%]
tests/handlers/test_evaluate_gates_handler.py::test_handle_evaluate_gates_fail_scan_failed_status ERROR [  8%]
tests/handlers/test_evaluate_gates_handler.py::test_handle_evaluate_gates_fail_api_error_pending ERROR [  9%]
tests/handlers/test_evaluate_gates_handler.py::test_handle_evaluate_gates_pass_api_error_pending_fail_on_none ERROR [  9%]
tests/handlers/test_evaluate_gates_handler.py::test_handle_evaluate_gates_project_resolve_fails ERROR [ 10%]
tests/handlers/test_evaluate_gates_handler.py::test_handle_evaluate_gates_scan_resolve_fails ERROR [ 10%]
tests/handlers/test_import_da_handler.py::test_handle_import_da_success ERROR [ 11%]
tests/handlers/test_import_da_handler.py::test_handle_import_da_start_da_fails ERROR [ 11%]
tests/handlers/test_import_da_handler.py::test_handle_import_da_upload_fails_filesystem ERROR [ 12%]
tests/handlers/test_import_da_handler.py::test_handle_import_da_upload_fails_network ERROR [ 12%]
tests/handlers/test_import_da_handler.py::test_handle_import_da_project_not_found ERROR [ 13%]
tests/handlers/test_import_da_handler.py::test_handle_import_da_scan_not_found ERROR [ 13%]
tests/handlers/test_import_da_handler.py::test_handle_import_da_compatibility_error ERROR [ 14%]
tests/handlers/test_import_da_handler.py::test_handle_import_da_wait_process_error ERROR [ 14%]
tests/handlers/test_import_da_handler.py::test_handle_import_da_wait_timeout_error ERROR [ 15%]
tests/handlers/test_import_da_handler.py::test_handle_import_da_fetch_api_error ERROR [ 15%]
tests/handlers/test_import_da_handler.py::test_handle_import_da_unexpected_error ERROR [ 16%]
tests/handlers/test_scan_git_handler.py::test_handle_scan_git_success_branch ERROR [ 17%]
tests/handlers/test_scan_git_handler.py::test_handle_scan_git_success_tag ERROR [ 17%]
tests/handlers/test_scan_git_handler.py::test_handle_scan_git_download_start_fails ERROR [ 18%]
tests/handlers/test_scan_git_handler.py::test_handle_scan_git_download_wait_fails ERROR [ 18%]
tests/handlers/test_scan_git_handler.py::test_handle_scan_git_project_not_found ERROR [ 19%]
tests/handlers/test_scan_git_handler.py::test_handle_scan_git_scan_not_found ERROR [ 19%]
tests/handlers/test_scan_git_handler.py::test_handle_scan_git_compatibility_error ERROR [ 20%]
tests/handlers/test_scan_git_handler.py::test_handle_scan_git_api_error_in_exec ERROR [ 20%]
tests/handlers/test_scan_git_handler.py::test_handle_scan_git_network_error ERROR [ 21%]
tests/handlers/test_scan_git_handler.py::test_handle_scan_git_process_error ERROR [ 21%]
tests/handlers/test_scan_git_handler.py::test_handle_scan_git_process_timeout_error ERROR [ 22%]
tests/handlers/test_scan_git_handler.py::test_handle_scan_git_unexpected_error ERROR [ 22%]
tests/handlers/test_scan_handler.py::test_handle_scan_success ERROR      [ 23%]
tests/handlers/test_scan_handler.py::test_handle_scan_success_no_extract_wait ERROR [ 23%]
tests/handlers/test_scan_handler.py::test_handle_scan_upload_fails ERROR [ 24%]
tests/handlers/test_scan_handler.py::test_handle_scan_project_not_found ERROR [ 24%]
tests/handlers/test_scan_handler.py::test_handle_scan_scan_not_found ERROR [ 25%]
tests/handlers/test_scan_handler.py::test_handle_scan_api_error ERROR    [ 25%]
tests/handlers/test_scan_handler.py::test_handle_scan_network_error ERROR [ 26%]
tests/handlers/test_scan_handler.py::test_handle_scan_process_error ERROR [ 26%]
tests/handlers/test_scan_handler.py::test_handle_scan_process_timeout ERROR [ 27%]
tests/handlers/test_scan_handler.py::test_handle_scan_unexpected_error ERROR [ 27%]
tests/handlers/test_show_results_handler.py::test_handle_show_results_success ERROR [ 28%]
tests/handlers/test_show_results_handler.py::test_handle_show_results_project_resolve_fails ERROR [ 28%]
tests/handlers/test_show_results_handler.py::test_handle_show_results_scan_resolve_fails ERROR [ 29%]
tests/integration/test_integration.py::test_scan_success_flow ERROR      [ 29%]
tests/integration/test_integration.py::test_scan_fail_during_scan ERROR  [ 30%]
tests/integration/test_integration.py::test_evaluate_gates_pass_flow ERROR [ 30%]
tests/integration/test_integration.py::test_evaluate_gates_fail_pending_flow ERROR [ 31%]
tests/integration/test_integration.py::test_download_report_sync_flow ERROR [ 31%]
tests/test_cli.py::test_parse_scan_command FAILED                        [ 32%]
tests/test_cli.py::test_parse_download_reports_scan_scope PASSED         [ 32%]
tests/test_cli.py::test_parse_download_reports_project_scope PASSED      [ 33%]
tests/test_cli.py::test_parse_scan_git_branch PASSED                     [ 34%]
tests/test_cli.py::test_parse_scan_git_tag PASSED                        [ 34%]
tests/test_cli.py::test_parse_import_da PASSED                           [ 35%]
tests/test_cli.py::test_parse_evaluate_gates FAILED                      [ 35%]
tests/test_cli.py::test_parse_flags_and_log_level FAILED                 [ 36%]
tests/test_cli.py::test_parse_validation_id_reuse_missing_source FAILED  [ 36%]
tests/test_cli.py::test_parse_validation_download_missing_project FAILED [ 37%]
tests/test_cli.py::test_parse_validation_download_missing_scan FAILED    [ 37%]
tests/test_cli.py::test_parse_validation_show_results_missing_show_flag FAILED [ 38%]
tests/test_cli.py::test_parse_validation_scan_git_branch_and_tag FAILED  [ 38%]
tests/test_cli.py::test_parse_validation_scan_git_missing_ref FAILED     [ 39%]
tests/test_cli.py::test_parse_validation_scan_non_existent_path FAILED   [ 39%]
tests/test_cli.py::test_parse_validation_missing_credentials FAILED      [ 40%]
tests/test_cli.py::test_parse_credentials_from_env_vars FAILED           [ 40%]
tests/test_cli.py::test_parse_args_no_command FAILED                     [ 41%]
tests/test_cli.py::test_parse_args_scan_no_path FAILED                   [ 41%]
tests/test_cli.py::test_parse_args_scan_git_no_url FAILED                [ 42%]
tests/test_cli.py::test_parse_args_import_da_no_path FAILED              [ 42%]
tests/test_cli.py::test_parse_args_unknown_command PASSED                [ 43%]
tests/test_cli.py::test_main_success FAILED                              [ 43%]
tests/test_cli.py::test_main_validation_error FAILED                     [ 44%]
tests/test_cli.py::test_main_configuration_error FAILED                  [ 44%]
tests/test_cli.py::test_main_authentication_error FAILED                 [ 45%]
tests/test_cli.py::test_main_project_not_found FAILED                    [ 45%]
tests/test_cli.py::test_main_scan_not_found FAILED                       [ 46%]
tests/test_cli.py::test_main_api_error FAILED                            [ 46%]
tests/test_cli.py::test_main_network_error FAILED                        [ 47%]
tests/test_cli.py::test_main_process_error FAILED                        [ 47%]
tests/test_cli.py::test_main_process_timeout FAILED                      [ 48%]
tests/test_cli.py::test_main_file_system_error FAILED                    [ 48%]
tests/test_cli.py::test_main_compatibility_error FAILED                  [ 49%]
tests/test_cli.py::test_main_unexpected_error FAILED                     [ 50%]
tests/test_cli.py::test_main_evaluate_gates_fail_returns_1 FAILED        [ 50%]
tests/test_utils.py::test_resolve_project_success ERROR                  [ 51%]
tests/test_utils.py::test_resolve_project_not_found_no_create ERROR      [ 51%]
tests/test_utils.py::test_resolve_project_found_create_no_error ERROR    [ 52%]
tests/test_utils.py::test_resolve_project_create_success ERROR           [ 52%]
tests/test_utils.py::test_resolve_project_create_race_condition ERROR    [ 53%]
tests/test_utils.py::test_resolve_project_api_error_list ERROR           [ 53%]
tests/test_utils.py::test_resolve_project_network_error_list ERROR       [ 54%]
tests/test_utils.py::test_resolve_project_api_error_create ERROR         [ 54%]
tests/test_utils.py::test_resolve_scan_success_project_scope ERROR       [ 55%]
tests/test_utils.py::test_resolve_scan_success_global_scope ERROR        [ 55%]
tests/test_utils.py::test_resolve_scan_not_found_project_scope ERROR     [ 56%]
tests/test_utils.py::test_resolve_scan_not_found_global_scope ERROR      [ 56%]
tests/test_utils.py::test_resolve_scan_found_create_no_error ERROR       [ 57%]
tests/test_utils.py::test_resolve_scan_api_error_project_scope ERROR     [ 57%]
tests/test_utils.py::test_resolve_scan_network_error_project_scope ERROR [ 58%]
tests/test_utils.py::test_execute_standard_scan_flow_success ERROR       [ 58%]
tests/test_utils.py::test_execute_standard_scan_flow_id_reuse_project ERROR [ 59%]
tests/test_utils.py::test_execute_standard_scan_flow_id_reuse_scan_local ERROR [ 59%]
tests/test_utils.py::test_execute_standard_scan_flow_id_reuse_scan_global ERROR [ 60%]
tests/test_utils.py::test_execute_standard_scan_flow_id_reuse_scan_fails ERROR [ 60%]
tests/test_utils.py::test_execute_standard_scan_flow_with_da ERROR       [ 61%]
tests/test_utils.py::test_execute_standard_scan_flow_start_api_error ERROR [ 61%]
tests/test_utils.py::test_execute_standard_scan_flow_wait_network_error ERROR [ 62%]
tests/test_utils.py::test_execute_standard_scan_flow_wait_process_error ERROR [ 62%]
tests/test_utils.py::test_execute_standard_scan_flow_wait_process_timeout ERROR [ 63%]
tests/test_utils.py::test_save_report_content_success ERROR              [ 63%]
tests/test_utils.py::test_save_report_content_binary ERROR               [ 64%]
tests/test_utils.py::test_save_report_content_dict ERROR                 [ 64%]
tests/test_utils.py::test_save_report_content_file_system_error ERROR    [ 65%]
tests/test_utils.py::test_format_duration[0-0 seconds] PASSED            [ 65%]
tests/test_utils.py::test_format_duration[1-1 second] PASSED             [ 66%]
tests/test_utils.py::test_format_duration[59-59 seconds] PASSED          [ 67%]
tests/test_utils.py::test_format_duration[60-1 minutes] PASSED           [ 67%]
tests/test_utils.py::test_format_duration[61-1 minutes, 1 seconds] PASSED [ 68%]
tests/test_utils.py::test_format_duration[119-1 minutes, 59 seconds] PASSED [ 68%]
tests/test_utils.py::test_format_duration[120-2 minutes] PASSED          [ 69%]
tests/test_utils.py::test_format_duration[121-2 minutes, 1 seconds] PASSED [ 69%]
tests/test_utils.py::test_format_duration[3600-60 minutes] PASSED        [ 70%]
tests/test_utils.py::test_format_duration[3661-61 minutes, 1 seconds] PASSED [ 70%]
tests/test_utils.py::test_format_duration[7322.5-122 minutes, 3 seconds] FAILED [ 71%]
tests/test_utils.py::test_format_duration[None-N/A] PASSED               [ 71%]
tests/test_utils.py::test_format_duration[abc-Invalid Duration] PASSED   [ 72%]
tests/test_utils.py::test_save_results_to_file_success FAILED            [ 72%]
tests/test_utils.py::test_save_results_to_file_makedirs_error PASSED     [ 73%]
tests/test_utils.py::test_save_results_to_file_write_error PASSED        [ 73%]
tests/test_utils.py::test_resolve_scan_project_scope_create_success ERROR [ 74%]
tests/test_utils.py::test_resolve_scan_project_scope_not_found_no_create ERROR [ 74%]
tests/test_utils.py::test_resolve_scan_global_scope_create_error ERROR   [ 75%]
tests/test_utils.py::test_resolve_scan_triggers_compatibility_check ERROR [ 75%]
tests/test_utils.py::test_ensure_scan_compatibility_git_branch_mismatch ERROR [ 76%]
tests/test_utils.py::test_ensure_scan_compatibility_git_tag_vs_branch ERROR [ 76%]
tests/test_utils.py::test_ensure_scan_compatibility_git_branch_vs_tag ERROR [ 77%]
tests/test_utils.py::test_ensure_scan_compatibility_git_tag_mismatch ERROR [ 77%]
tests/test_utils.py::test_ensure_scan_compatibility_git_url_mismatch ERROR [ 78%]
tests/test_utils.py::test_ensure_scan_compatibility_scan_vs_git ERROR    [ 78%]
tests/test_utils.py::test_ensure_scan_compatibility_git_vs_scan ERROR    [ 79%]
tests/test_utils.py::test_ensure_scan_compatibility_no_conflict_scan ERROR [ 79%]
tests/test_utils.py::test_ensure_scan_compatibility_no_conflict_git ERROR [ 80%]
tests/test_utils.py::test_ensure_scan_compatibility_no_conflict_import_da ERROR [ 80%]
tests/test_workbench.py::test_workbench_init_url_fix PASSED              [ 81%]
tests/test_workbench.py::test_workbench_init_url_correct PASSED          [ 81%]
tests/test_workbench.py::test_send_request_success ERROR                 [ 82%]
tests/test_workbench.py::test_send_request_api_error ERROR               [ 82%]
tests/test_workbench.py::test_send_request_network_error ERROR           [ 83%]
tests/test_workbench.py::test_send_request_timeout ERROR                 [ 84%]
tests/test_workbench.py::test_send_request_invalid_json_status ERROR     [ 84%]
tests/test_workbench.py::test_send_request_sync_response ERROR           [ 85%]
tests/test_workbench.py::test_send_request_http_error ERROR              [ 85%]
tests/test_workbench.py::test_send_request_json_decode_error ERROR       [ 86%]
tests/test_workbench.py::test_is_status_check_supported_yes ERROR        [ 86%]
tests/test_workbench.py::test_is_status_check_supported_no_invalid_type ERROR [ 87%]
tests/test_workbench.py::test_is_status_check_supported_api_error ERROR  [ 87%]
tests/test_workbench.py::test_is_status_check_supported_network_error ERROR [ 88%]
tests/test_workbench.py::test_wait_for_process_success ERROR             [ 88%]
tests/test_workbench.py::test_wait_for_process_timeout ERROR             [ 89%]
tests/test_workbench.py::test_wait_for_process_failure ERROR             [ 89%]
tests/test_workbench.py::test_wait_for_process_check_fails_retries ERROR [ 90%]
tests/test_workbench.py::test_wait_for_process_accessor_fails ERROR      [ 90%]
tests/test_workbench.py::test_upload_files_file_success ERROR            [ 91%]
tests/test_workbench.py::test_upload_files_dir_success ERROR             [ 91%]
tests/test_workbench.py::test_upload_files_chunked_success ERROR         [ 92%]
tests/test_workbench.py::test_upload_files_da_import ERROR               [ 92%]
tests/test_workbench.py::test_upload_files_path_not_found FAILED         [ 93%]
tests/test_workbench.py::test_upload_files_network_error ERROR           [ 93%]
tests/test_workbench.py::test_get_pending_files_success ERROR            [ 94%]
tests/test_workbench.py::test_get_pending_files_empty ERROR              [ 94%]
tests/test_workbench.py::test_get_pending_files_api_error ERROR          [ 95%]
tests/test_workbench.py::test_get_scan_identified_components_success ERROR [ 95%]
tests/test_workbench.py::test_get_scan_identified_components_fail ERROR  [ 96%]
tests/test_workbench.py::test_get_dependency_analysis_results_success ERROR [ 96%]
tests/test_workbench.py::test_get_dependency_analysis_results_not_run ERROR [ 97%]
tests/test_workbench.py::test_get_dependency_analysis_results_other_error ERROR [ 97%]
tests/test_workbench.py::test_create_project_success ERROR               [ 98%]
tests/test_workbench.py::test_create_project_already_exists ERROR        [ 98%]
tests/test_workbench.py::test_create_webapp_scan_success ERROR           [ 99%]
tests/test_workbench.py::test_create_webapp_scan_already_exists ERROR    [100%]

==================================== ERRORS ====================================
___________ ERROR at setup of test_handle_download_reports_scan_sync ___________
file /home/runner/work/workbench-agent/workbench-agent/tests/handlers/test_download_reports_handler.py, line 21
  @patch('workbench_agent.handlers._resolve_project')
  @patch('workbench_agent.handlers._resolve_scan')
  @patch('os.makedirs')
  @patch('workbench_agent.handlers.Workbench.generate_report')
  @patch('workbench_agent.handlers._save_report_content')
  def test_handle_download_reports_scan_sync(mock_save, mock_gen_report, mock_makedirs, mock_resolve_scan, mock_resolve_proj, mock_workbench, mock_params):
file /home/runner/work/workbench-agent/workbench-agent/tests/handlers/conftest.py, line 11
  @pytest.fixture
  def mock_workbench(mocker):
E       fixture 'mocker' not found
>       available fixtures: cache, capfd, capfdbinary, caplog, capsys, capsysbinary, doctest_namespace, mock_params, mock_workbench, monkeypatch, pytestconfig, record_property, record_testsuite_property, record_xml_attribute, recwarn, tmp_path, tmp_path_factory, tmpdir, tmpdir_factory
>       use 'pytest --fixtures [testpath]' for help on them.

/home/runner/work/workbench-agent/workbench-agent/tests/handlers/conftest.py:11
_________ ERROR at setup of test_handle_download_reports_project_async _________
file /home/runner/work/workbench-agent/workbench-agent/tests/handlers/test_download_reports_handler.py, line 44
  @patch('workbench_agent.handlers._resolve_project')
  @patch('workbench_agent.handlers._resolve_scan')
  @patch('os.makedirs')
  @patch('workbench_agent.handlers.Workbench.generate_report')
  @patch('workbench_agent.handlers.Workbench._wait_for_process') # Mock the generic waiter
  @patch('workbench_agent.handlers.Workbench.download_report')
  @patch('workbench_agent.handlers._save_report_content')
  def test_handle_download_reports_project_async(mock_save, mock_download, mock_wait, mock_gen_report, mock_makedirs, mock_resolve_scan, mock_resolve_proj, mock_workbench, mock_params):
file /home/runner/work/workbench-agent/workbench-agent/tests/handlers/conftest.py, line 11
  @pytest.fixture
  def mock_workbench(mocker):
E       fixture 'mocker' not found
>       available fixtures: cache, capfd, capfdbinary, caplog, capsys, capsysbinary, doctest_namespace, mock_params, mock_workbench, monkeypatch, pytestconfig, record_property, record_testsuite_property, record_xml_attribute, recwarn, tmp_path, tmp_path_factory, tmpdir, tmpdir_factory
>       use 'pytest --fixtures [testpath]' for help on them.

/home/runner/work/workbench-agent/workbench-agent/tests/handlers/conftest.py:11
______ ERROR at setup of test_handle_download_reports_multiple_one_fails _______
file /home/runner/work/workbench-agent/workbench-agent/tests/handlers/test_download_reports_handler.py, line 79
  @patch('workbench_agent.handlers._resolve_project')
  @patch('workbench_agent.handlers._resolve_scan')
  @patch('os.makedirs')
  @patch('workbench_agent.handlers.Workbench.generate_report')
  @patch('workbench_agent.handlers.Workbench._wait_for_process')
  @patch('workbench_agent.handlers.Workbench.download_report')
  @patch('workbench_agent.handlers._save_report_content')
  def test_handle_download_reports_multiple_one_fails(mock_save, mock_download, mock_wait, mock_gen_report, mock_makedirs, mock_resolve_scan, mock_resolve_proj, mock_workbench, mock_params):
file /home/runner/work/workbench-agent/workbench-agent/tests/handlers/conftest.py, line 11
  @pytest.fixture
  def mock_workbench(mocker):
E       fixture 'mocker' not found
>       available fixtures: cache, capfd, capfdbinary, caplog, capsys, capsysbinary, doctest_namespace, mock_params, mock_workbench, monkeypatch, pytestconfig, record_property, record_testsuite_property, record_xml_attribute, recwarn, tmp_path, tmp_path_factory, tmpdir, tmpdir_factory
>       use 'pytest --fixtures [testpath]' for help on them.

/home/runner/work/workbench-agent/workbench-agent/tests/handlers/conftest.py:11
______ ERROR at setup of test_handle_download_reports_scan_global_resolve ______
file /home/runner/work/workbench-agent/workbench-agent/tests/handlers/test_download_reports_handler.py, line 121
  @patch('workbench_agent.handlers._resolve_project') # Still need to patch this even if not called directly
  @patch('workbench_agent.handlers._resolve_scan')
  @patch('workbench_agent.handlers.Workbench.list_scans') # Mock the list_scans used for project lookup
  @patch('os.makedirs')
  @patch('workbench_agent.handlers.Workbench.generate_report')
  @patch('workbench_agent.handlers._save_report_content')
  def test_handle_download_reports_scan_global_resolve(mock_save, mock_gen_report, mock_makedirs, mock_list_scans_lookup, mock_resolve_scan, mock_resolve_proj, mock_workbench, mock_params):
file /home/runner/work/workbench-agent/workbench-agent/tests/handlers/conftest.py, line 11
  @pytest.fixture
  def mock_workbench(mocker):
E       fixture 'mocker' not found
>       available fixtures: cache, capfd, capfdbinary, caplog, capsys, capsysbinary, doctest_namespace, mock_params, mock_workbench, monkeypatch, pytestconfig, record_property, record_testsuite_property, record_xml_attribute, recwarn, tmp_path, tmp_path_factory, tmpdir, tmpdir_factory
>       use 'pytest --fixtures [testpath]' for help on them.

/home/runner/work/workbench-agent/workbench-agent/tests/handlers/conftest.py:11
_ ERROR at setup of test_handle_download_reports_scan_global_resolve_project_fail _
file /home/runner/work/workbench-agent/workbench-agent/tests/handlers/test_download_reports_handler.py, line 153
  @patch('workbench_agent.handlers._resolve_project')
  @patch('workbench_agent.handlers._resolve_scan')
  @patch('workbench_agent.handlers.Workbench.list_scans', return_value=[]) # Mock list_scans used for project lookup
  def test_handle_download_reports_scan_global_resolve_project_fail(mock_list_scans_lookup, mock_resolve_scan, mock_resolve_proj, mock_workbench, mock_params):
file /home/runner/work/workbench-agent/workbench-agent/tests/handlers/conftest.py, line 11
  @pytest.fixture
  def mock_workbench(mocker):
E       fixture 'mocker' not found
>       available fixtures: cache, capfd, capfdbinary, caplog, capsys, capsysbinary, doctest_namespace, mock_params, mock_workbench, monkeypatch, pytestconfig, record_property, record_testsuite_property, record_xml_attribute, recwarn, tmp_path, tmp_path_factory, tmpdir, tmpdir_factory
>       use 'pytest --fixtures [testpath]' for help on them.

/home/runner/work/workbench-agent/workbench-agent/tests/handlers/conftest.py:11
_________ ERROR at setup of test_handle_download_reports_invalid_scope _________
file /home/runner/work/workbench-agent/workbench-agent/tests/handlers/test_download_reports_handler.py, line 168
  @patch('workbench_agent.handlers._resolve_project')
  @patch('workbench_agent.handlers._resolve_scan')
  def test_handle_download_reports_invalid_scope(mock_resolve_scan, mock_resolve_proj, mock_workbench, mock_params):
file /home/runner/work/workbench-agent/workbench-agent/tests/handlers/conftest.py, line 11
  @pytest.fixture
  def mock_workbench(mocker):
E       fixture 'mocker' not found
>       available fixtures: cache, capfd, capfdbinary, caplog, capsys, capsysbinary, doctest_namespace, mock_params, mock_workbench, monkeypatch, pytestconfig, record_property, record_testsuite_property, record_xml_attribute, recwarn, tmp_path, tmp_path_factory, tmpdir, tmpdir_factory
>       use 'pytest --fixtures [testpath]' for help on them.

/home/runner/work/workbench-agent/workbench-agent/tests/handlers/conftest.py:11
_________ ERROR at setup of test_handle_download_reports_invalid_type __________
file /home/runner/work/workbench-agent/workbench-agent/tests/handlers/test_download_reports_handler.py, line 181
  @patch('workbench_agent.handlers._resolve_project')
  @patch('workbench_agent.handlers._resolve_scan')
  def test_handle_download_reports_invalid_type(mock_resolve_scan, mock_resolve_proj, mock_workbench, mock_params):
file /home/runner/work/workbench-agent/workbench-agent/tests/handlers/conftest.py, line 11
  @pytest.fixture
  def mock_workbench(mocker):
E       fixture 'mocker' not found
>       available fixtures: cache, capfd, capfdbinary, caplog, capsys, capsysbinary, doctest_namespace, mock_params, mock_workbench, monkeypatch, pytestconfig, record_property, record_testsuite_property, record_xml_attribute, recwarn, tmp_path, tmp_path_factory, tmpdir, tmpdir_factory
>       use 'pytest --fixtures [testpath]' for help on them.

/home/runner/work/workbench-agent/workbench-agent/tests/handlers/conftest.py:11
_____ ERROR at setup of test_handle_download_reports_project_resolve_fails _____
file /home/runner/work/workbench-agent/workbench-agent/tests/handlers/test_download_reports_handler.py, line 199
  @patch('workbench_agent.handlers._resolve_project', side_effect=ProjectNotFoundError("Proj Not Found"))
  @patch('workbench_agent.handlers._resolve_scan')
  def test_handle_download_reports_project_resolve_fails(mock_resolve_scan, mock_resolve_proj, mock_workbench, mock_params):
file /home/runner/work/workbench-agent/workbench-agent/tests/handlers/conftest.py, line 11
  @pytest.fixture
  def mock_workbench(mocker):
E       fixture 'mocker' not found
>       available fixtures: cache, capfd, capfdbinary, caplog, capsys, capsysbinary, doctest_namespace, mock_params, mock_workbench, monkeypatch, pytestconfig, record_property, record_testsuite_property, record_xml_attribute, recwarn, tmp_path, tmp_path_factory, tmpdir, tmpdir_factory
>       use 'pytest --fixtures [testpath]' for help on them.

/home/runner/work/workbench-agent/workbench-agent/tests/handlers/conftest.py:11
______ ERROR at setup of test_handle_download_reports_scan_resolve_fails _______
file /home/runner/work/workbench-agent/workbench-agent/tests/handlers/test_download_reports_handler.py, line 208
  @patch('workbench_agent.handlers._resolve_project')
  @patch('workbench_agent.handlers._resolve_scan', side_effect=ScanNotFoundError("Scan Not Found"))
  def test_handle_download_reports_scan_resolve_fails(mock_resolve_scan, mock_resolve_proj, mock_workbench, mock_params):
file /home/runner/work/workbench-agent/workbench-agent/tests/handlers/conftest.py, line 11
  @pytest.fixture
  def mock_workbench(mocker):
E       fixture 'mocker' not found
>       available fixtures: cache, capfd, capfdbinary, caplog, capsys, capsysbinary, doctest_namespace, mock_params, mock_workbench, monkeypatch, pytestconfig, record_property, record_testsuite_property, record_xml_attribute, recwarn, tmp_path, tmp_path_factory, tmpdir, tmpdir_factory
>       use 'pytest --fixtures [testpath]' for help on them.

/home/runner/work/workbench-agent/workbench-agent/tests/handlers/conftest.py:11
______________ ERROR at setup of test_handle_evaluate_gates_pass _______________
file /home/runner/work/workbench-agent/workbench-agent/tests/handlers/test_evaluate_gates_handler.py, line 20
  @patch('workbench_agent.handlers._resolve_project')
  @patch('workbench_agent.handlers._resolve_scan')
  @patch('workbench_agent.handlers.Workbench.get_scan_status') # Added
  @patch('workbench_agent.handlers.Workbench.wait_for_scan_to_finish')
  @patch('workbench_agent.handlers.Workbench.get_pending_files')
  @patch('workbench_agent.handlers.Workbench.get_policy_violations') # Corrected function name
  def test_handle_evaluate_gates_pass(mock_get_policy, mock_get_pending, mock_wait, mock_get_status, mock_resolve_scan, mock_resolve_proj, mock_workbench, mock_params):
file /home/runner/work/workbench-agent/workbench-agent/tests/handlers/conftest.py, line 11
  @pytest.fixture
  def mock_workbench(mocker):
E       fixture 'mocker' not found
>       available fixtures: cache, capfd, capfdbinary, caplog, capsys, capsysbinary, doctest_namespace, mock_params, mock_workbench, monkeypatch, pytestconfig, record_property, record_testsuite_property, record_xml_attribute, recwarn, tmp_path, tmp_path_factory, tmpdir, tmpdir_factory
>       use 'pytest --fixtures [testpath]' for help on them.

/home/runner/work/workbench-agent/workbench-agent/tests/handlers/conftest.py:11
_________ ERROR at setup of test_handle_evaluate_gates_pass_needs_wait _________
file /home/runner/work/workbench-agent/workbench-agent/tests/handlers/test_evaluate_gates_handler.py, line 46
  @patch('workbench_agent.handlers._resolve_project')
  @patch('workbench_agent.handlers._resolve_scan')
  @patch('workbench_agent.handlers.Workbench.get_scan_status') # Added
  @patch('workbench_agent.handlers.Workbench.wait_for_scan_to_finish')
  @patch('workbench_agent.handlers.Workbench.get_pending_files')
  @patch('workbench_agent.handlers.Workbench.get_policy_violations') # Corrected
  def test_handle_evaluate_gates_pass_needs_wait(mock_get_policy, mock_get_pending, mock_wait, mock_get_status, mock_resolve_scan, mock_resolve_proj, mock_workbench, mock_params):
file /home/runner/work/workbench-agent/workbench-agent/tests/handlers/conftest.py, line 11
  @pytest.fixture
  def mock_workbench(mocker):
E       fixture 'mocker' not found
>       available fixtures: cache, capfd, capfdbinary, caplog, capsys, capsysbinary, doctest_namespace, mock_params, mock_workbench, monkeypatch, pytestconfig, record_property, record_testsuite_property, record_xml_attribute, recwarn, tmp_path, tmp_path_factory, tmpdir, tmpdir_factory
>       use 'pytest --fixtures [testpath]' for help on them.

/home/runner/work/workbench-agent/workbench-agent/tests/handlers/conftest.py:11
__________ ERROR at setup of test_handle_evaluate_gates_fail_pending ___________
file /home/runner/work/workbench-agent/workbench-agent/tests/handlers/test_evaluate_gates_handler.py, line 75
  @patch('workbench_agent.handlers._resolve_project')
  @patch('workbench_agent.handlers._resolve_scan')
  @patch('workbench_agent.handlers.Workbench.get_scan_status') # Added
  @patch('workbench_agent.handlers.Workbench.wait_for_scan_to_finish')
  @patch('workbench_agent.handlers.Workbench.get_pending_files')
  @patch('workbench_agent.handlers.Workbench.get_policy_violations') # Corrected
  def test_handle_evaluate_gates_fail_pending(mock_get_policy, mock_get_pending, mock_wait, mock_get_status, mock_resolve_scan, mock_resolve_proj, mock_workbench, mock_params):
file /home/runner/work/workbench-agent/workbench-agent/tests/handlers/conftest.py, line 11
  @pytest.fixture
  def mock_workbench(mocker):
E       fixture 'mocker' not found
>       available fixtures: cache, capfd, capfdbinary, caplog, capsys, capsysbinary, doctest_namespace, mock_params, mock_workbench, monkeypatch, pytestconfig, record_property, record_testsuite_property, record_xml_attribute, recwarn, tmp_path, tmp_path_factory, tmpdir, tmpdir_factory
>       use 'pytest --fixtures [testpath]' for help on them.

/home/runner/work/workbench-agent/workbench-agent/tests/handlers/conftest.py:11
___________ ERROR at setup of test_handle_evaluate_gates_fail_policy ___________
file /home/runner/work/workbench-agent/workbench-agent/tests/handlers/test_evaluate_gates_handler.py, line 100
  @patch('workbench_agent.handlers._resolve_project')
  @patch('workbench_agent.handlers._resolve_scan')
  @patch('workbench_agent.handlers.Workbench.get_scan_status') # Added
  @patch('workbench_agent.handlers.Workbench.wait_for_scan_to_finish')
  @patch('workbench_agent.handlers.Workbench.get_pending_files')
  @patch('workbench_agent.handlers.Workbench.get_policy_violations') # Corrected
  def test_handle_evaluate_gates_fail_policy(mock_get_policy, mock_get_pending, mock_wait, mock_get_status, mock_resolve_scan, mock_resolve_proj, mock_workbench, mock_params):
file /home/runner/work/workbench-agent/workbench-agent/tests/handlers/conftest.py, line 11
  @pytest.fixture
  def mock_workbench(mocker):
E       fixture 'mocker' not found
>       available fixtures: cache, capfd, capfdbinary, caplog, capsys, capsysbinary, doctest_namespace, mock_params, mock_workbench, monkeypatch, pytestconfig, record_property, record_testsuite_property, record_xml_attribute, recwarn, tmp_path, tmp_path_factory, tmpdir, tmpdir_factory
>       use 'pytest --fixtures [testpath]' for help on them.

/home/runner/work/workbench-agent/workbench-agent/tests/handlers/conftest.py:11
_ ERROR at setup of test_handle_evaluate_gates_pass_with_pending_fail_on_policy _
file /home/runner/work/workbench-agent/workbench-agent/tests/handlers/test_evaluate_gates_handler.py, line 125
  @patch('workbench_agent.handlers._resolve_project')
  @patch('workbench_agent.handlers._resolve_scan')
  @patch('workbench_agent.handlers.Workbench.get_scan_status') # Added
  @patch('workbench_agent.handlers.Workbench.wait_for_scan_to_finish')
  @patch('workbench_agent.handlers.Workbench.get_pending_files')
  @patch('workbench_agent.handlers.Workbench.get_policy_violations') # Corrected
  def test_handle_evaluate_gates_pass_with_pending_fail_on_policy(mock_get_policy, mock_get_pending, mock_wait, mock_get_status, mock_resolve_scan, mock_resolve_proj, mock_workbench, mock_params):
file /home/runner/work/workbench-agent/workbench-agent/tests/handlers/conftest.py, line 11
  @pytest.fixture
  def mock_workbench(mocker):
E       fixture 'mocker' not found
>       available fixtures: cache, capfd, capfdbinary, caplog, capsys, capsysbinary, doctest_namespace, mock_params, mock_workbench, monkeypatch, pytestconfig, record_property, record_testsuite_property, record_xml_attribute, recwarn, tmp_path, tmp_path_factory, tmpdir, tmpdir_factory
>       use 'pytest --fixtures [testpath]' for help on them.

/home/runner/work/workbench-agent/workbench-agent/tests/handlers/conftest.py:11
_ ERROR at setup of test_handle_evaluate_gates_pass_with_policy_fail_on_pending _
file /home/runner/work/workbench-agent/workbench-agent/tests/handlers/test_evaluate_gates_handler.py, line 144
  @patch('workbench_agent.handlers._resolve_project')
  @patch('workbench_agent.handlers._resolve_scan')
  @patch('workbench_agent.handlers.Workbench.get_scan_status') # Added
  @patch('workbench_agent.handlers.Workbench.wait_for_scan_to_finish')
  @patch('workbench_agent.handlers.Workbench.get_pending_files')
  @patch('workbench_agent.handlers.Workbench.get_policy_violations') # Corrected
  def test_handle_evaluate_gates_pass_with_policy_fail_on_pending(mock_get_policy, mock_get_pending, mock_wait, mock_get_status, mock_resolve_scan, mock_resolve_proj, mock_workbench, mock_params):
file /home/runner/work/workbench-agent/workbench-agent/tests/handlers/conftest.py, line 11
  @pytest.fixture
  def mock_workbench(mocker):
E       fixture 'mocker' not found
>       available fixtures: cache, capfd, capfdbinary, caplog, capsys, capsysbinary, doctest_namespace, mock_params, mock_workbench, monkeypatch, pytestconfig, record_property, record_testsuite_property, record_xml_attribute, recwarn, tmp_path, tmp_path_factory, tmpdir, tmpdir_factory
>       use 'pytest --fixtures [testpath]' for help on them.

/home/runner/work/workbench-agent/workbench-agent/tests/handlers/conftest.py:11
_________ ERROR at setup of test_handle_evaluate_gates_fail_scan_wait __________
file /home/runner/work/workbench-agent/workbench-agent/tests/handlers/test_evaluate_gates_handler.py, line 163
  @patch('workbench_agent.handlers._resolve_project')
  @patch('workbench_agent.handlers._resolve_scan')
  @patch('workbench_agent.handlers.Workbench.get_scan_status') # Added
  @patch('workbench_agent.handlers.Workbench.wait_for_scan_to_finish', side_effect=ProcessTimeoutError("Scan Timed Out"))
  @patch('workbench_agent.handlers.Workbench.get_pending_files')
  @patch('workbench_agent.handlers.Workbench.get_policy_violations') # Corrected
  def test_handle_evaluate_gates_fail_scan_wait(mock_get_policy, mock_get_pending, mock_wait, mock_get_status, mock_resolve_scan, mock_resolve_proj, mock_workbench, mock_params):
file /home/runner/work/workbench-agent/workbench-agent/tests/handlers/conftest.py, line 11
  @pytest.fixture
  def mock_workbench(mocker):
E       fixture 'mocker' not found
>       available fixtures: cache, capfd, capfdbinary, caplog, capsys, capsysbinary, doctest_namespace, mock_params, mock_workbench, monkeypatch, pytestconfig, record_property, record_testsuite_property, record_xml_attribute, recwarn, tmp_path, tmp_path_factory, tmpdir, tmpdir_factory
>       use 'pytest --fixtures [testpath]' for help on them.

/home/runner/work/workbench-agent/workbench-agent/tests/handlers/conftest.py:11
_____ ERROR at setup of test_handle_evaluate_gates_fail_scan_failed_status _____
file /home/runner/work/workbench-agent/workbench-agent/tests/handlers/test_evaluate_gates_handler.py, line 187
  @patch('workbench_agent.handlers._resolve_project')
  @patch('workbench_agent.handlers._resolve_scan')
  @patch('workbench_agent.handlers.Workbench.get_scan_status', return_value={"progress_state": "FAILED"}) # Added
  @patch('workbench_agent.handlers.Workbench.wait_for_scan_to_finish')
  @patch('workbench_agent.handlers.Workbench.get_pending_files')
  @patch('workbench_agent.handlers.Workbench.get_policy_violations') # Corrected
  def test_handle_evaluate_gates_fail_scan_failed_status(mock_get_policy, mock_get_pending, mock_wait, mock_get_status, mock_resolve_scan, mock_resolve_proj, mock_workbench, mock_params):
file /home/runner/work/workbench-agent/workbench-agent/tests/handlers/conftest.py, line 11
  @pytest.fixture
  def mock_workbench(mocker):
E       fixture 'mocker' not found
>       available fixtures: cache, capfd, capfdbinary, caplog, capsys, capsysbinary, doctest_namespace, mock_params, mock_workbench, monkeypatch, pytestconfig, record_property, record_testsuite_property, record_xml_attribute, recwarn, tmp_path, tmp_path_factory, tmpdir, tmpdir_factory
>       use 'pytest --fixtures [testpath]' for help on them.

/home/runner/work/workbench-agent/workbench-agent/tests/handlers/conftest.py:11
_____ ERROR at setup of test_handle_evaluate_gates_fail_api_error_pending ______
file /home/runner/work/workbench-agent/workbench-agent/tests/handlers/test_evaluate_gates_handler.py, line 209
  @patch('workbench_agent.handlers._resolve_project')
  @patch('workbench_agent.handlers._resolve_scan')
  @patch('workbench_agent.handlers.Workbench.get_scan_status') # Added
  @patch('workbench_agent.handlers.Workbench.wait_for_scan_to_finish')
  @patch('workbench_agent.handlers.Workbench.get_pending_files', side_effect=ApiError("Pending check failed"))
  @patch('workbench_agent.handlers.Workbench.get_policy_violations') # Corrected
  def test_handle_evaluate_gates_fail_api_error_pending(mock_get_policy, mock_get_pending, mock_wait, mock_get_status, mock_resolve_scan, mock_resolve_proj, mock_workbench, mock_params):
file /home/runner/work/workbench-agent/workbench-agent/tests/handlers/conftest.py, line 11
  @pytest.fixture
  def mock_workbench(mocker):
E       fixture 'mocker' not found
>       available fixtures: cache, capfd, capfdbinary, caplog, capsys, capsysbinary, doctest_namespace, mock_params, mock_workbench, monkeypatch, pytestconfig, record_property, record_testsuite_property, record_xml_attribute, recwarn, tmp_path, tmp_path_factory, tmpdir, tmpdir_factory
>       use 'pytest --fixtures [testpath]' for help on them.

/home/runner/work/workbench-agent/workbench-agent/tests/handlers/conftest.py:11
_ ERROR at setup of test_handle_evaluate_gates_pass_api_error_pending_fail_on_none _
file /home/runner/work/workbench-agent/workbench-agent/tests/handlers/test_evaluate_gates_handler.py, line 228
  @patch('workbench_agent.handlers._resolve_project')
  @patch('workbench_agent.handlers._resolve_scan')
  @patch('workbench_agent.handlers.Workbench.get_scan_status') # Added
  @patch('workbench_agent.handlers.Workbench.wait_for_scan_to_finish')
  @patch('workbench_agent.handlers.Workbench.get_pending_files', side_effect=ApiError("Pending check failed"))
  @patch('workbench_agent.handlers.Workbench.get_policy_violations') # Corrected
  def test_handle_evaluate_gates_pass_api_error_pending_fail_on_none(mock_get_policy, mock_get_pending, mock_wait, mock_get_status, mock_resolve_scan, mock_resolve_proj, mock_workbench, mock_params):
file /home/runner/work/workbench-agent/workbench-agent/tests/handlers/conftest.py, line 11
  @pytest.fixture
  def mock_workbench(mocker):
E       fixture 'mocker' not found
>       available fixtures: cache, capfd, capfdbinary, caplog, capsys, capsysbinary, doctest_namespace, mock_params, mock_workbench, monkeypatch, pytestconfig, record_property, record_testsuite_property, record_xml_attribute, recwarn, tmp_path, tmp_path_factory, tmpdir, tmpdir_factory
>       use 'pytest --fixtures [testpath]' for help on them.

/home/runner/work/workbench-agent/workbench-agent/tests/handlers/conftest.py:11
______ ERROR at setup of test_handle_evaluate_gates_project_resolve_fails ______
file /home/runner/work/workbench-agent/workbench-agent/tests/handlers/test_evaluate_gates_handler.py, line 249
  @patch('workbench_agent.handlers._resolve_project', side_effect=ProjectNotFoundError("Proj Not Found"))
  @patch('workbench_agent.handlers._resolve_scan')
  def test_handle_evaluate_gates_project_resolve_fails(mock_resolve_scan, mock_resolve_proj, mock_workbench, mock_params):
file /home/runner/work/workbench-agent/workbench-agent/tests/handlers/conftest.py, line 11
  @pytest.fixture
  def mock_workbench(mocker):
E       fixture 'mocker' not found
>       available fixtures: cache, capfd, capfdbinary, caplog, capsys, capsysbinary, doctest_namespace, mock_params, mock_workbench, monkeypatch, pytestconfig, record_property, record_testsuite_property, record_xml_attribute, recwarn, tmp_path, tmp_path_factory, tmpdir, tmpdir_factory
>       use 'pytest --fixtures [testpath]' for help on them.

/home/runner/work/workbench-agent/workbench-agent/tests/handlers/conftest.py:11
_______ ERROR at setup of test_handle_evaluate_gates_scan_resolve_fails ________
file /home/runner/work/workbench-agent/workbench-agent/tests/handlers/test_evaluate_gates_handler.py, line 258
  @patch('workbench_agent.handlers._resolve_project')
  @patch('workbench_agent.handlers._resolve_scan', side_effect=ScanNotFoundError("Scan Not Found"))
  def test_handle_evaluate_gates_scan_resolve_fails(mock_resolve_scan, mock_resolve_proj, mock_workbench, mock_params):
file /home/runner/work/workbench-agent/workbench-agent/tests/handlers/conftest.py, line 11
  @pytest.fixture
  def mock_workbench(mocker):
E       fixture 'mocker' not found
>       available fixtures: cache, capfd, capfdbinary, caplog, capsys, capsysbinary, doctest_namespace, mock_params, mock_workbench, monkeypatch, pytestconfig, record_property, record_testsuite_property, record_xml_attribute, recwarn, tmp_path, tmp_path_factory, tmpdir, tmpdir_factory
>       use 'pytest --fixtures [testpath]' for help on them.

/home/runner/work/workbench-agent/workbench-agent/tests/handlers/conftest.py:11
_______________ ERROR at setup of test_handle_import_da_success ________________
file /home/runner/work/workbench-agent/workbench-agent/tests/handlers/test_import_da_handler.py, line 22
  @patch('workbench_agent.handlers._resolve_project')
  @patch('workbench_agent.handlers._resolve_scan')
  @patch('workbench_agent.handlers.Workbench.upload_files')
  @patch('workbench_agent.handlers.Workbench.start_dependency_analysis') # Added
  @patch('workbench_agent.handlers.Workbench.wait_for_scan_to_finish')
  @patch('workbench_agent.handlers._print_operation_summary') # Added
  @patch('workbench_agent.handlers._fetch_display_save_results') # Corrected function name
  def test_handle_import_da_success(mock_fetch, mock_print_summary, mock_wait, mock_start_da, mock_upload, mock_resolve_scan, mock_resolve_proj, mock_workbench, mock_params):
file /home/runner/work/workbench-agent/workbench-agent/tests/handlers/conftest.py, line 11
  @pytest.fixture
  def mock_workbench(mocker):
E       fixture 'mocker' not found
>       available fixtures: cache, capfd, capfdbinary, caplog, capsys, capsysbinary, doctest_namespace, mock_params, mock_workbench, monkeypatch, pytestconfig, record_property, record_testsuite_property, record_xml_attribute, recwarn, tmp_path, tmp_path_factory, tmpdir, tmpdir_factory
>       use 'pytest --fixtures [testpath]' for help on them.

/home/runner/work/workbench-agent/workbench-agent/tests/handlers/conftest.py:11
____________ ERROR at setup of test_handle_import_da_start_da_fails ____________
file /home/runner/work/workbench-agent/workbench-agent/tests/handlers/test_import_da_handler.py, line 45
  @patch('workbench_agent.handlers._resolve_project')
  @patch('workbench_agent.handlers._resolve_scan')
  @patch('workbench_agent.handlers.Workbench.upload_files')
  @patch('workbench_agent.handlers.Workbench.start_dependency_analysis', side_effect=ApiError("Failed to start DA")) # Added
  @patch('workbench_agent.handlers.Workbench.wait_for_scan_to_finish')
  @patch('workbench_agent.handlers._print_operation_summary') # Added
  @patch('workbench_agent.handlers._fetch_display_save_results') # Corrected
  def test_handle_import_da_start_da_fails(mock_fetch, mock_print_summary, mock_wait, mock_start_da, mock_upload, mock_resolve_scan, mock_resolve_proj, mock_workbench, mock_params):
file /home/runner/work/workbench-agent/workbench-agent/tests/handlers/conftest.py, line 11
  @pytest.fixture
  def mock_workbench(mocker):
E       fixture 'mocker' not found
>       available fixtures: cache, capfd, capfdbinary, caplog, capsys, capsysbinary, doctest_namespace, mock_params, mock_workbench, monkeypatch, pytestconfig, record_property, record_testsuite_property, record_xml_attribute, recwarn, tmp_path, tmp_path_factory, tmpdir, tmpdir_factory
>       use 'pytest --fixtures [testpath]' for help on them.

/home/runner/work/workbench-agent/workbench-agent/tests/handlers/conftest.py:11
_______ ERROR at setup of test_handle_import_da_upload_fails_filesystem ________
file /home/runner/work/workbench-agent/workbench-agent/tests/handlers/test_import_da_handler.py, line 69
  @patch('workbench_agent.handlers._resolve_project')
  @patch('workbench_agent.handlers._resolve_scan')
  @patch('workbench_agent.handlers.Workbench.upload_files', side_effect=FileSystemError("Cannot read results file"))
  @patch('workbench_agent.handlers.Workbench.start_dependency_analysis')
  @patch('workbench_agent.handlers.Workbench.wait_for_scan_to_finish')
  @patch('workbench_agent.handlers._fetch_display_save_results') # Corrected
  def test_handle_import_da_upload_fails_filesystem(mock_fetch, mock_wait, mock_start_da, mock_upload, mock_resolve_scan, mock_resolve_proj, mock_workbench, mock_params):
file /home/runner/work/workbench-agent/workbench-agent/tests/handlers/conftest.py, line 11
  @pytest.fixture
  def mock_workbench(mocker):
E       fixture 'mocker' not found
>       available fixtures: cache, capfd, capfdbinary, caplog, capsys, capsysbinary, doctest_namespace, mock_params, mock_workbench, monkeypatch, pytestconfig, record_property, record_testsuite_property, record_xml_attribute, recwarn, tmp_path, tmp_path_factory, tmpdir, tmpdir_factory
>       use 'pytest --fixtures [testpath]' for help on them.

/home/runner/work/workbench-agent/workbench-agent/tests/handlers/conftest.py:11
_________ ERROR at setup of test_handle_import_da_upload_fails_network _________
file /home/runner/work/workbench-agent/workbench-agent/tests/handlers/test_import_da_handler.py, line 89
  @patch('workbench_agent.handlers._resolve_project')
  @patch('workbench_agent.handlers._resolve_scan')
  @patch('workbench_agent.handlers.Workbench.upload_files', side_effect=NetworkError("Upload connection failed"))
  @patch('workbench_agent.handlers.Workbench.start_dependency_analysis')
  @patch('workbench_agent.handlers.Workbench.wait_for_scan_to_finish')
  @patch('workbench_agent.handlers._fetch_display_save_results') # Corrected
  def test_handle_import_da_upload_fails_network(mock_fetch, mock_wait, mock_start_da, mock_upload, mock_resolve_scan, mock_resolve_proj, mock_workbench, mock_params):
file /home/runner/work/workbench-agent/workbench-agent/tests/handlers/conftest.py, line 11
  @pytest.fixture
  def mock_workbench(mocker):
E       fixture 'mocker' not found
>       available fixtures: cache, capfd, capfdbinary, caplog, capsys, capsysbinary, doctest_namespace, mock_params, mock_workbench, monkeypatch, pytestconfig, record_property, record_testsuite_property, record_xml_attribute, recwarn, tmp_path, tmp_path_factory, tmpdir, tmpdir_factory
>       use 'pytest --fixtures [testpath]' for help on them.

/home/runner/work/workbench-agent/workbench-agent/tests/handlers/conftest.py:11
__________ ERROR at setup of test_handle_import_da_project_not_found ___________
file /home/runner/work/workbench-agent/workbench-agent/tests/handlers/test_import_da_handler.py, line 106
  @patch('workbench_agent.handlers._resolve_project', side_effect=ProjectNotFoundError("DA project not found"))
  @patch('workbench_agent.handlers._resolve_scan')
  @patch('workbench_agent.handlers.Workbench.upload_files')
  def test_handle_import_da_project_not_found(mock_upload, mock_resolve_scan, mock_resolve_proj, mock_workbench, mock_params):
file /home/runner/work/workbench-agent/workbench-agent/tests/handlers/conftest.py, line 11
  @pytest.fixture
  def mock_workbench(mocker):
E       fixture 'mocker' not found
>       available fixtures: cache, capfd, capfdbinary, caplog, capsys, capsysbinary, doctest_namespace, mock_params, mock_workbench, monkeypatch, pytestconfig, record_property, record_testsuite_property, record_xml_attribute, recwarn, tmp_path, tmp_path_factory, tmpdir, tmpdir_factory
>       use 'pytest --fixtures [testpath]' for help on them.

/home/runner/work/workbench-agent/workbench-agent/tests/handlers/conftest.py:11
____________ ERROR at setup of test_handle_import_da_scan_not_found ____________
file /home/runner/work/workbench-agent/workbench-agent/tests/handlers/test_import_da_handler.py, line 118
  @patch('workbench_agent.handlers._resolve_project')
  @patch('workbench_agent.handlers._resolve_scan', side_effect=ScanNotFoundError("DA scan not found"))
  @patch('workbench_agent.handlers.Workbench.upload_files')
  def test_handle_import_da_scan_not_found(mock_upload, mock_resolve_scan, mock_resolve_proj, mock_workbench, mock_params):
file /home/runner/work/workbench-agent/workbench-agent/tests/handlers/conftest.py, line 11
  @pytest.fixture
  def mock_workbench(mocker):
E       fixture 'mocker' not found
>       available fixtures: cache, capfd, capfdbinary, caplog, capsys, capsysbinary, doctest_namespace, mock_params, mock_workbench, monkeypatch, pytestconfig, record_property, record_testsuite_property, record_xml_attribute, recwarn, tmp_path, tmp_path_factory, tmpdir, tmpdir_factory
>       use 'pytest --fixtures [testpath]' for help on them.

/home/runner/work/workbench-agent/workbench-agent/tests/handlers/conftest.py:11
_________ ERROR at setup of test_handle_import_da_compatibility_error __________
file /home/runner/work/workbench-agent/workbench-agent/tests/handlers/test_import_da_handler.py, line 131
  @patch('workbench_agent.handlers._resolve_project')
  @patch('workbench_agent.handlers._resolve_scan', side_effect=CompatibilityError("Scan exists but is not DA"))
  @patch('workbench_agent.handlers.Workbench.upload_files')
  def test_handle_import_da_compatibility_error(mock_upload, mock_resolve_scan, mock_resolve_proj, mock_workbench, mock_params):
file /home/runner/work/workbench-agent/workbench-agent/tests/handlers/conftest.py, line 11
  @pytest.fixture
  def mock_workbench(mocker):
E       fixture 'mocker' not found
>       available fixtures: cache, capfd, capfdbinary, caplog, capsys, capsysbinary, doctest_namespace, mock_params, mock_workbench, monkeypatch, pytestconfig, record_property, record_testsuite_property, record_xml_attribute, recwarn, tmp_path, tmp_path_factory, tmpdir, tmpdir_factory
>       use 'pytest --fixtures [testpath]' for help on them.

/home/runner/work/workbench-agent/workbench-agent/tests/handlers/conftest.py:11
__________ ERROR at setup of test_handle_import_da_wait_process_error __________
file /home/runner/work/workbench-agent/workbench-agent/tests/handlers/test_import_da_handler.py, line 144
  @patch('workbench_agent.handlers._resolve_project')
  @patch('workbench_agent.handlers._resolve_scan')
  @patch('workbench_agent.handlers.Workbench.upload_files')
  @patch('workbench_agent.handlers.Workbench.start_dependency_analysis')
  @patch('workbench_agent.handlers.Workbench.wait_for_scan_to_finish', side_effect=ProcessError("Scan failed during processing"))
  @patch('workbench_agent.handlers._fetch_display_save_results') # Corrected
  def test_handle_import_da_wait_process_error(mock_fetch, mock_wait, mock_start_da, mock_upload, mock_resolve_scan, mock_resolve_proj, mock_workbench, mock_params):
file /home/runner/work/workbench-agent/workbench-agent/tests/handlers/conftest.py, line 11
  @pytest.fixture
  def mock_workbench(mocker):
E       fixture 'mocker' not found
>       available fixtures: cache, capfd, capfdbinary, caplog, capsys, capsysbinary, doctest_namespace, mock_params, mock_workbench, monkeypatch, pytestconfig, record_property, record_testsuite_property, record_xml_attribute, recwarn, tmp_path, tmp_path_factory, tmpdir, tmpdir_factory
>       use 'pytest --fixtures [testpath]' for help on them.

/home/runner/work/workbench-agent/workbench-agent/tests/handlers/conftest.py:11
__________ ERROR at setup of test_handle_import_da_wait_timeout_error __________
file /home/runner/work/workbench-agent/workbench-agent/tests/handlers/test_import_da_handler.py, line 164
  @patch('workbench_agent.handlers._resolve_project')
  @patch('workbench_agent.handlers._resolve_scan')
  @patch('workbench_agent.handlers.Workbench.upload_files')
  @patch('workbench_agent.handlers.Workbench.start_dependency_analysis')
  @patch('workbench_agent.handlers.Workbench.wait_for_scan_to_finish', side_effect=ProcessTimeoutError("Scan timed out"))
  @patch('workbench_agent.handlers._fetch_display_save_results') # Corrected
  def test_handle_import_da_wait_timeout_error(mock_fetch, mock_wait, mock_start_da, mock_upload, mock_resolve_scan, mock_resolve_proj, mock_workbench, mock_params):
file /home/runner/work/workbench-agent/workbench-agent/tests/handlers/conftest.py, line 11
  @pytest.fixture
  def mock_workbench(mocker):
E       fixture 'mocker' not found
>       available fixtures: cache, capfd, capfdbinary, caplog, capsys, capsysbinary, doctest_namespace, mock_params, mock_workbench, monkeypatch, pytestconfig, record_property, record_testsuite_property, record_xml_attribute, recwarn, tmp_path, tmp_path_factory, tmpdir, tmpdir_factory
>       use 'pytest --fixtures [testpath]' for help on them.

/home/runner/work/workbench-agent/workbench-agent/tests/handlers/conftest.py:11
___________ ERROR at setup of test_handle_import_da_fetch_api_error ____________
file /home/runner/work/workbench-agent/workbench-agent/tests/handlers/test_import_da_handler.py, line 181
  @patch('workbench_agent.handlers._resolve_project')
  @patch('workbench_agent.handlers._resolve_scan')
  @patch('workbench_agent.handlers.Workbench.upload_files')
  @patch('workbench_agent.handlers.Workbench.start_dependency_analysis')
  @patch('workbench_agent.handlers.Workbench.wait_for_scan_to_finish')
  @patch('workbench_agent.handlers._print_operation_summary') # Added
  @patch('workbench_agent.handlers._fetch_display_save_results', side_effect=ApiError("Error fetching results")) # Corrected
  def test_handle_import_da_fetch_api_error(mock_fetch, mock_print_summary, mock_wait, mock_start_da, mock_upload, mock_resolve_scan, mock_resolve_proj, mock_workbench, mock_params):
file /home/runner/work/workbench-agent/workbench-agent/tests/handlers/conftest.py, line 11
  @pytest.fixture
  def mock_workbench(mocker):
E       fixture 'mocker' not found
>       available fixtures: cache, capfd, capfdbinary, caplog, capsys, capsysbinary, doctest_namespace, mock_params, mock_workbench, monkeypatch, pytestconfig, record_property, record_testsuite_property, record_xml_attribute, recwarn, tmp_path, tmp_path_factory, tmpdir, tmpdir_factory
>       use 'pytest --fixtures [testpath]' for help on them.

/home/runner/work/workbench-agent/workbench-agent/tests/handlers/conftest.py:11
___________ ERROR at setup of test_handle_import_da_unexpected_error ___________
file /home/runner/work/workbench-agent/workbench-agent/tests/handlers/test_import_da_handler.py, line 200
  @patch('workbench_agent.handlers._resolve_project')
  @patch('workbench_agent.handlers._resolve_scan')
  @patch('workbench_agent.handlers.Workbench.upload_files')
  @patch('workbench_agent.handlers.Workbench.start_dependency_analysis')
  @patch('workbench_agent.handlers.Workbench.wait_for_scan_to_finish')
  @patch('workbench_agent.handlers._print_operation_summary') # Added
  @patch('workbench_agent.handlers._fetch_display_save_results', side_effect=Exception("Unexpected fetch failure")) # Corrected
  def test_handle_import_da_unexpected_error(mock_fetch, mock_print_summary, mock_wait, mock_start_da, mock_upload, mock_resolve_scan, mock_resolve_proj, mock_workbench, mock_params):
file /home/runner/work/workbench-agent/workbench-agent/tests/handlers/conftest.py, line 11
  @pytest.fixture
  def mock_workbench(mocker):
E       fixture 'mocker' not found
>       available fixtures: cache, capfd, capfdbinary, caplog, capsys, capsysbinary, doctest_namespace, mock_params, mock_workbench, monkeypatch, pytestconfig, record_property, record_testsuite_property, record_xml_attribute, recwarn, tmp_path, tmp_path_factory, tmpdir, tmpdir_factory
>       use 'pytest --fixtures [testpath]' for help on them.

/home/runner/work/workbench-agent/workbench-agent/tests/handlers/conftest.py:11
____________ ERROR at setup of test_handle_scan_git_success_branch _____________
file /home/runner/work/workbench-agent/workbench-agent/tests/handlers/test_scan_git_handler.py, line 23
  @patch('workbench_agent.handlers._resolve_project')
  @patch('workbench_agent.handlers._resolve_scan')
  @patch('workbench_agent.handlers._execute_standard_scan_flow')
  def test_handle_scan_git_success_branch(mock_exec_flow, mock_resolve_scan, mock_resolve_proj, mock_workbench, mock_params):
file /home/runner/work/workbench-agent/workbench-agent/tests/handlers/conftest.py, line 11
  @pytest.fixture
  def mock_workbench(mocker):
E       fixture 'mocker' not found
>       available fixtures: cache, capfd, capfdbinary, caplog, capsys, capsysbinary, doctest_namespace, mock_params, mock_workbench, monkeypatch, pytestconfig, record_property, record_testsuite_property, record_xml_attribute, recwarn, tmp_path, tmp_path_factory, tmpdir, tmpdir_factory
>       use 'pytest --fixtures [testpath]' for help on them.

/home/runner/work/workbench-agent/workbench-agent/tests/handlers/conftest.py:11
______________ ERROR at setup of test_handle_scan_git_success_tag ______________
file /home/runner/work/workbench-agent/workbench-agent/tests/handlers/test_scan_git_handler.py, line 54
  @patch('workbench_agent.handlers._resolve_project')
  @patch('workbench_agent.handlers._resolve_scan')
  @patch('workbench_agent.handlers._execute_standard_scan_flow')
  def test_handle_scan_git_success_tag(mock_exec_flow, mock_resolve_scan, mock_resolve_proj, mock_workbench, mock_params):
file /home/runner/work/workbench-agent/workbench-agent/tests/handlers/conftest.py, line 11
  @pytest.fixture
  def mock_workbench(mocker):
E       fixture 'mocker' not found
>       available fixtures: cache, capfd, capfdbinary, caplog, capsys, capsysbinary, doctest_namespace, mock_params, mock_workbench, monkeypatch, pytestconfig, record_property, record_testsuite_property, record_xml_attribute, recwarn, tmp_path, tmp_path_factory, tmpdir, tmpdir_factory
>       use 'pytest --fixtures [testpath]' for help on them.

/home/runner/work/workbench-agent/workbench-agent/tests/handlers/conftest.py:11
_________ ERROR at setup of test_handle_scan_git_download_start_fails __________
file /home/runner/work/workbench-agent/workbench-agent/tests/handlers/test_scan_git_handler.py, line 81
  @patch('workbench_agent.handlers._resolve_project')
  @patch('workbench_agent.handlers._resolve_scan')
  @patch('workbench_agent.handlers._execute_standard_scan_flow')
  def test_handle_scan_git_download_start_fails(mock_exec_flow, mock_resolve_scan, mock_resolve_proj, mock_workbench, mock_params):
file /home/runner/work/workbench-agent/workbench-agent/tests/handlers/conftest.py, line 11
  @pytest.fixture
  def mock_workbench(mocker):
E       fixture 'mocker' not found
>       available fixtures: cache, capfd, capfdbinary, caplog, capsys, capsysbinary, doctest_namespace, mock_params, mock_workbench, monkeypatch, pytestconfig, record_property, record_testsuite_property, record_xml_attribute, recwarn, tmp_path, tmp_path_factory, tmpdir, tmpdir_factory
>       use 'pytest --fixtures [testpath]' for help on them.

/home/runner/work/workbench-agent/workbench-agent/tests/handlers/conftest.py:11
__________ ERROR at setup of test_handle_scan_git_download_wait_fails __________
file /home/runner/work/workbench-agent/workbench-agent/tests/handlers/test_scan_git_handler.py, line 103
  @patch('workbench_agent.handlers._resolve_project')
  @patch('workbench_agent.handlers._resolve_scan')
  @patch('workbench_agent.handlers._execute_standard_scan_flow')
  def test_handle_scan_git_download_wait_fails(mock_exec_flow, mock_resolve_scan, mock_resolve_proj, mock_workbench, mock_params):
file /home/runner/work/workbench-agent/workbench-agent/tests/handlers/conftest.py, line 11
  @pytest.fixture
  def mock_workbench(mocker):
E       fixture 'mocker' not found
>       available fixtures: cache, capfd, capfdbinary, caplog, capsys, capsysbinary, doctest_namespace, mock_params, mock_workbench, monkeypatch, pytestconfig, record_property, record_testsuite_property, record_xml_attribute, recwarn, tmp_path, tmp_path_factory, tmpdir, tmpdir_factory
>       use 'pytest --fixtures [testpath]' for help on them.

/home/runner/work/workbench-agent/workbench-agent/tests/handlers/conftest.py:11
___________ ERROR at setup of test_handle_scan_git_project_not_found ___________
file /home/runner/work/workbench-agent/workbench-agent/tests/handlers/test_scan_git_handler.py, line 126
  @patch('workbench_agent.handlers._resolve_project', side_effect=ProjectNotFoundError("Git project not found"))
  @patch('workbench_agent.handlers._resolve_scan')
  @patch('workbench_agent.handlers._execute_standard_scan_flow')
  def test_handle_scan_git_project_not_found(mock_exec_flow, mock_resolve_scan, mock_resolve_proj, mock_workbench, mock_params):
file /home/runner/work/workbench-agent/workbench-agent/tests/handlers/conftest.py, line 11
  @pytest.fixture
  def mock_workbench(mocker):
E       fixture 'mocker' not found
>       available fixtures: cache, capfd, capfdbinary, caplog, capsys, capsysbinary, doctest_namespace, mock_params, mock_workbench, monkeypatch, pytestconfig, record_property, record_testsuite_property, record_xml_attribute, recwarn, tmp_path, tmp_path_factory, tmpdir, tmpdir_factory
>       use 'pytest --fixtures [testpath]' for help on them.

/home/runner/work/workbench-agent/workbench-agent/tests/handlers/conftest.py:11
____________ ERROR at setup of test_handle_scan_git_scan_not_found _____________
file /home/runner/work/workbench-agent/workbench-agent/tests/handlers/test_scan_git_handler.py, line 138
  @patch('workbench_agent.handlers._resolve_project')
  @patch('workbench_agent.handlers._resolve_scan', side_effect=ScanNotFoundError("Git scan not found"))
  @patch('workbench_agent.handlers._execute_standard_scan_flow')
  def test_handle_scan_git_scan_not_found(mock_exec_flow, mock_resolve_scan, mock_resolve_proj, mock_workbench, mock_params):
file /home/runner/work/workbench-agent/workbench-agent/tests/handlers/conftest.py, line 11
  @pytest.fixture
  def mock_workbench(mocker):
E       fixture 'mocker' not found
>       available fixtures: cache, capfd, capfdbinary, caplog, capsys, capsysbinary, doctest_namespace, mock_params, mock_workbench, monkeypatch, pytestconfig, record_property, record_testsuite_property, record_xml_attribute, recwarn, tmp_path, tmp_path_factory, tmpdir, tmpdir_factory
>       use 'pytest --fixtures [testpath]' for help on them.

/home/runner/work/workbench-agent/workbench-agent/tests/handlers/conftest.py:11
__________ ERROR at setup of test_handle_scan_git_compatibility_error __________
file /home/runner/work/workbench-agent/workbench-agent/tests/handlers/test_scan_git_handler.py, line 151
  @patch('workbench_agent.handlers._resolve_project')
  @patch('workbench_agent.handlers._resolve_scan', side_effect=CompatibilityError("Scan exists with different Git URL"))
  @patch('workbench_agent.handlers._execute_standard_scan_flow')
  def test_handle_scan_git_compatibility_error(mock_exec_flow, mock_resolve_scan, mock_resolve_proj, mock_workbench, mock_params):
file /home/runner/work/workbench-agent/workbench-agent/tests/handlers/conftest.py, line 11
  @pytest.fixture
  def mock_workbench(mocker):
E       fixture 'mocker' not found
>       available fixtures: cache, capfd, capfdbinary, caplog, capsys, capsysbinary, doctest_namespace, mock_params, mock_workbench, monkeypatch, pytestconfig, record_property, record_testsuite_property, record_xml_attribute, recwarn, tmp_path, tmp_path_factory, tmpdir, tmpdir_factory
>       use 'pytest --fixtures [testpath]' for help on them.

/home/runner/work/workbench-agent/workbench-agent/tests/handlers/conftest.py:11
___________ ERROR at setup of test_handle_scan_git_api_error_in_exec ___________
file /home/runner/work/workbench-agent/workbench-agent/tests/handlers/test_scan_git_handler.py, line 164
  @patch('workbench_agent.handlers._resolve_project')
  @patch('workbench_agent.handlers._resolve_scan')
  @patch('workbench_agent.handlers._execute_standard_scan_flow', side_effect=ApiError("API error during scan execution"))
  def test_handle_scan_git_api_error_in_exec(mock_exec_flow, mock_resolve_scan, mock_resolve_proj, mock_workbench, mock_params):
file /home/runner/work/workbench-agent/workbench-agent/tests/handlers/conftest.py, line 11
  @pytest.fixture
  def mock_workbench(mocker):
E       fixture 'mocker' not found
>       available fixtures: cache, capfd, capfdbinary, caplog, capsys, capsysbinary, doctest_namespace, mock_params, mock_workbench, monkeypatch, pytestconfig, record_property, record_testsuite_property, record_xml_attribute, recwarn, tmp_path, tmp_path_factory, tmpdir, tmpdir_factory
>       use 'pytest --fixtures [testpath]' for help on them.

/home/runner/work/workbench-agent/workbench-agent/tests/handlers/conftest.py:11
_____________ ERROR at setup of test_handle_scan_git_network_error _____________
file /home/runner/work/workbench-agent/workbench-agent/tests/handlers/test_scan_git_handler.py, line 185
  @patch('workbench_agent.handlers._resolve_project')
  @patch('workbench_agent.handlers._resolve_scan')
  @patch('workbench_agent.handlers._execute_standard_scan_flow', side_effect=NetworkError("Network error during scan execution"))
  def test_handle_scan_git_network_error(mock_exec_flow, mock_resolve_scan, mock_resolve_proj, mock_workbench, mock_params):
file /home/runner/work/workbench-agent/workbench-agent/tests/handlers/conftest.py, line 11
  @pytest.fixture
  def mock_workbench(mocker):
E       fixture 'mocker' not found
>       available fixtures: cache, capfd, capfdbinary, caplog, capsys, capsysbinary, doctest_namespace, mock_params, mock_workbench, monkeypatch, pytestconfig, record_property, record_testsuite_property, record_xml_attribute, recwarn, tmp_path, tmp_path_factory, tmpdir, tmpdir_factory
>       use 'pytest --fixtures [testpath]' for help on them.

/home/runner/work/workbench-agent/workbench-agent/tests/handlers/conftest.py:11
_____________ ERROR at setup of test_handle_scan_git_process_error _____________
file /home/runner/work/workbench-agent/workbench-agent/tests/handlers/test_scan_git_handler.py, line 206
  @patch('workbench_agent.handlers._resolve_project')
  @patch('workbench_agent.handlers._resolve_scan')
  @patch('workbench_agent.handlers._execute_standard_scan_flow', side_effect=ProcessError("Scan failed on Workbench"))
  def test_handle_scan_git_process_error(mock_exec_flow, mock_resolve_scan, mock_resolve_proj, mock_workbench, mock_params):
file /home/runner/work/workbench-agent/workbench-agent/tests/handlers/conftest.py, line 11
  @pytest.fixture
  def mock_workbench(mocker):
E       fixture 'mocker' not found
>       available fixtures: cache, capfd, capfdbinary, caplog, capsys, capsysbinary, doctest_namespace, mock_params, mock_workbench, monkeypatch, pytestconfig, record_property, record_testsuite_property, record_xml_attribute, recwarn, tmp_path, tmp_path_factory, tmpdir, tmpdir_factory
>       use 'pytest --fixtures [testpath]' for help on them.

/home/runner/work/workbench-agent/workbench-agent/tests/handlers/conftest.py:11
_________ ERROR at setup of test_handle_scan_git_process_timeout_error _________
file /home/runner/work/workbench-agent/workbench-agent/tests/handlers/test_scan_git_handler.py, line 227
  @patch('workbench_agent.handlers._resolve_project')
  @patch('workbench_agent.handlers._resolve_scan')
  @patch('workbench_agent.handlers._execute_standard_scan_flow', side_effect=ProcessTimeoutError("Scan timed out waiting"))
  def test_handle_scan_git_process_timeout_error(mock_exec_flow, mock_resolve_scan, mock_resolve_proj, mock_workbench, mock_params):
file /home/runner/work/workbench-agent/workbench-agent/tests/handlers/conftest.py, line 11
  @pytest.fixture
  def mock_workbench(mocker):
E       fixture 'mocker' not found
>       available fixtures: cache, capfd, capfdbinary, caplog, capsys, capsysbinary, doctest_namespace, mock_params, mock_workbench, monkeypatch, pytestconfig, record_property, record_testsuite_property, record_xml_attribute, recwarn, tmp_path, tmp_path_factory, tmpdir, tmpdir_factory
>       use 'pytest --fixtures [testpath]' for help on them.

/home/runner/work/workbench-agent/workbench-agent/tests/handlers/conftest.py:11
___________ ERROR at setup of test_handle_scan_git_unexpected_error ____________
file /home/runner/work/workbench-agent/workbench-agent/tests/handlers/test_scan_git_handler.py, line 248
  @patch('workbench_agent.handlers._resolve_project')
  @patch('workbench_agent.handlers._resolve_scan')
  @patch('workbench_agent.handlers._execute_standard_scan_flow', side_effect=Exception("Unexpected failure"))
  def test_handle_scan_git_unexpected_error(mock_exec_flow, mock_resolve_scan, mock_resolve_proj, mock_workbench, mock_params):
file /home/runner/work/workbench-agent/workbench-agent/tests/handlers/conftest.py, line 11
  @pytest.fixture
  def mock_workbench(mocker):
E       fixture 'mocker' not found
>       available fixtures: cache, capfd, capfdbinary, caplog, capsys, capsysbinary, doctest_namespace, mock_params, mock_workbench, monkeypatch, pytestconfig, record_property, record_testsuite_property, record_xml_attribute, recwarn, tmp_path, tmp_path_factory, tmpdir, tmpdir_factory
>       use 'pytest --fixtures [testpath]' for help on them.

/home/runner/work/workbench-agent/workbench-agent/tests/handlers/conftest.py:11
__________________ ERROR at setup of test_handle_scan_success __________________
file /home/runner/work/workbench-agent/workbench-agent/tests/handlers/test_scan_handler.py, line 22
  @patch('workbench_agent.handlers._resolve_project')
  @patch('workbench_agent.handlers._resolve_scan')
  @patch('workbench_agent.handlers.Workbench.upload_files')
  @patch('workbench_agent.handlers.Workbench.extract_archives')
  @patch('workbench_agent.handlers.Workbench._is_status_check_supported', return_value=True) # Assume supported
  @patch('workbench_agent.handlers.Workbench.wait_for_archive_extraction')
  @patch('workbench_agent.handlers._execute_standard_scan_flow') # Mock the whole flow utility
  def test_handle_scan_success(mock_exec_flow, mock_wait_extract, mock_is_supported, mock_extract, mock_upload, mock_resolve_scan, mock_resolve_proj, mock_workbench, mock_params):
file /home/runner/work/workbench-agent/workbench-agent/tests/handlers/conftest.py, line 11
  @pytest.fixture
  def mock_workbench(mocker):
E       fixture 'mocker' not found
>       available fixtures: cache, capfd, capfdbinary, caplog, capsys, capsysbinary, doctest_namespace, mock_params, mock_workbench, monkeypatch, pytestconfig, record_property, record_testsuite_property, record_xml_attribute, recwarn, tmp_path, tmp_path_factory, tmpdir, tmpdir_factory
>       use 'pytest --fixtures [testpath]' for help on them.

/home/runner/work/workbench-agent/workbench-agent/tests/handlers/conftest.py:11
__________ ERROR at setup of test_handle_scan_success_no_extract_wait __________
file /home/runner/work/workbench-agent/workbench-agent/tests/handlers/test_scan_handler.py, line 48
  @patch('workbench_agent.handlers._resolve_project')
  @patch('workbench_agent.handlers._resolve_scan')
  @patch('workbench_agent.handlers.Workbench.upload_files')
  @patch('workbench_agent.handlers.Workbench.extract_archives')
  @patch('workbench_agent.handlers.Workbench._is_status_check_supported', return_value=False) # Assume NOT supported
  @patch('workbench_agent.handlers.Workbench.wait_for_archive_extraction')
  @patch('workbench_agent.handlers._execute_standard_scan_flow')
  @patch('time.sleep', return_value=None) # Mock sleep
  def test_handle_scan_success_no_extract_wait(mock_sleep, mock_exec_flow, mock_wait_extract, mock_is_supported, mock_extract, mock_upload, mock_resolve_scan, mock_resolve_proj, mock_workbench, mock_params):
file /home/runner/work/workbench-agent/workbench-agent/tests/handlers/conftest.py, line 11
  @pytest.fixture
  def mock_workbench(mocker):
E       fixture 'mocker' not found
>       available fixtures: cache, capfd, capfdbinary, caplog, capsys, capsysbinary, doctest_namespace, mock_params, mock_workbench, monkeypatch, pytestconfig, record_property, record_testsuite_property, record_xml_attribute, recwarn, tmp_path, tmp_path_factory, tmpdir, tmpdir_factory
>       use 'pytest --fixtures [testpath]' for help on them.

/home/runner/work/workbench-agent/workbench-agent/tests/handlers/conftest.py:11
_______________ ERROR at setup of test_handle_scan_upload_fails ________________
file /home/runner/work/workbench-agent/workbench-agent/tests/handlers/test_scan_handler.py, line 76
  @patch('workbench_agent.handlers._resolve_project')
  @patch('workbench_agent.handlers._resolve_scan')
  @patch('workbench_agent.handlers.Workbench.upload_files', side_effect=FileSystemError("Upload Failed"))
  @patch('workbench_agent.handlers.Workbench.extract_archives') # Need to patch subsequent calls too
  @patch('workbench_agent.handlers._execute_standard_scan_flow')
  def test_handle_scan_upload_fails(mock_exec_flow, mock_extract, mock_upload, mock_resolve_scan, mock_resolve_proj, mock_workbench, mock_params):
file /home/runner/work/workbench-agent/workbench-agent/tests/handlers/conftest.py, line 11
  @pytest.fixture
  def mock_workbench(mocker):
E       fixture 'mocker' not found
>       available fixtures: cache, capfd, capfdbinary, caplog, capsys, capsysbinary, doctest_namespace, mock_params, mock_workbench, monkeypatch, pytestconfig, record_property, record_testsuite_property, record_xml_attribute, recwarn, tmp_path, tmp_path_factory, tmpdir, tmpdir_factory
>       use 'pytest --fixtures [testpath]' for help on them.

/home/runner/work/workbench-agent/workbench-agent/tests/handlers/conftest.py:11
_____________ ERROR at setup of test_handle_scan_project_not_found _____________
file /home/runner/work/workbench-agent/workbench-agent/tests/handlers/test_scan_handler.py, line 96
  @patch('workbench_agent.handlers._resolve_project', side_effect=ProjectNotFoundError("Project not found"))
  @patch('workbench_agent.handlers._resolve_scan')
  @patch('workbench_agent.handlers.Workbench.upload_files')
  def test_handle_scan_project_not_found(mock_upload, mock_resolve_scan, mock_resolve_project, mock_workbench, mock_params):
file /home/runner/work/workbench-agent/workbench-agent/tests/handlers/conftest.py, line 11
  @pytest.fixture
  def mock_workbench(mocker):
E       fixture 'mocker' not found
>       available fixtures: cache, capfd, capfdbinary, caplog, capsys, capsysbinary, doctest_namespace, mock_params, mock_workbench, monkeypatch, pytestconfig, record_property, record_testsuite_property, record_xml_attribute, recwarn, tmp_path, tmp_path_factory, tmpdir, tmpdir_factory
>       use 'pytest --fixtures [testpath]' for help on them.

/home/runner/work/workbench-agent/workbench-agent/tests/handlers/conftest.py:11
______________ ERROR at setup of test_handle_scan_scan_not_found _______________
file /home/runner/work/workbench-agent/workbench-agent/tests/handlers/test_scan_handler.py, line 107
  @patch('workbench_agent.handlers._resolve_project')
  @patch('workbench_agent.handlers._resolve_scan', side_effect=ScanNotFoundError("Scan not found"))
  @patch('workbench_agent.handlers.Workbench.upload_files')
  def test_handle_scan_scan_not_found(mock_upload, mock_resolve_scan, mock_resolve_project, mock_workbench, mock_params):
file /home/runner/work/workbench-agent/workbench-agent/tests/handlers/conftest.py, line 11
  @pytest.fixture
  def mock_workbench(mocker):
E       fixture 'mocker' not found
>       available fixtures: cache, capfd, capfdbinary, caplog, capsys, capsysbinary, doctest_namespace, mock_params, mock_workbench, monkeypatch, pytestconfig, record_property, record_testsuite_property, record_xml_attribute, recwarn, tmp_path, tmp_path_factory, tmpdir, tmpdir_factory
>       use 'pytest --fixtures [testpath]' for help on them.

/home/runner/work/workbench-agent/workbench-agent/tests/handlers/conftest.py:11
_________________ ERROR at setup of test_handle_scan_api_error _________________
file /home/runner/work/workbench-agent/workbench-agent/tests/handlers/test_scan_handler.py, line 119
  @patch('workbench_agent.handlers._resolve_project')
  @patch('workbench_agent.handlers._resolve_scan')
  @patch('workbench_agent.handlers.Workbench.upload_files')
  @patch('workbench_agent.handlers.Workbench.extract_archives')
  @patch('workbench_agent.handlers._execute_standard_scan_flow', side_effect=ApiError("API error"))
  def test_handle_scan_api_error(mock_execute_flow, mock_extract, mock_upload, mock_resolve_scan, mock_resolve_project, mock_workbench, mock_params):
file /home/runner/work/workbench-agent/workbench-agent/tests/handlers/conftest.py, line 11
  @pytest.fixture
  def mock_workbench(mocker):
E       fixture 'mocker' not found
>       available fixtures: cache, capfd, capfdbinary, caplog, capsys, capsysbinary, doctest_namespace, mock_params, mock_workbench, monkeypatch, pytestconfig, record_property, record_testsuite_property, record_xml_attribute, recwarn, tmp_path, tmp_path_factory, tmpdir, tmpdir_factory
>       use 'pytest --fixtures [testpath]' for help on them.

/home/runner/work/workbench-agent/workbench-agent/tests/handlers/conftest.py:11
_______________ ERROR at setup of test_handle_scan_network_error _______________
file /home/runner/work/workbench-agent/workbench-agent/tests/handlers/test_scan_handler.py, line 134
  @patch('workbench_agent.handlers._resolve_project')
  @patch('workbench_agent.handlers._resolve_scan')
  @patch('workbench_agent.handlers.Workbench.upload_files')
  @patch('workbench_agent.handlers.Workbench.extract_archives')
  @patch('workbench_agent.handlers._execute_standard_scan_flow', side_effect=NetworkError("Network error"))
  def test_handle_scan_network_error(mock_execute_flow, mock_extract, mock_upload, mock_resolve_scan, mock_resolve_project, mock_workbench, mock_params):
file /home/runner/work/workbench-agent/workbench-agent/tests/handlers/conftest.py, line 11
  @pytest.fixture
  def mock_workbench(mocker):
E       fixture 'mocker' not found
>       available fixtures: cache, capfd, capfdbinary, caplog, capsys, capsysbinary, doctest_namespace, mock_params, mock_workbench, monkeypatch, pytestconfig, record_property, record_testsuite_property, record_xml_attribute, recwarn, tmp_path, tmp_path_factory, tmpdir, tmpdir_factory
>       use 'pytest --fixtures [testpath]' for help on them.

/home/runner/work/workbench-agent/workbench-agent/tests/handlers/conftest.py:11
_______________ ERROR at setup of test_handle_scan_process_error _______________
file /home/runner/work/workbench-agent/workbench-agent/tests/handlers/test_scan_handler.py, line 149
  @patch('workbench_agent.handlers._resolve_project')
  @patch('workbench_agent.handlers._resolve_scan')
  @patch('workbench_agent.handlers.Workbench.upload_files')
  @patch('workbench_agent.handlers.Workbench.extract_archives')
  @patch('workbench_agent.handlers._execute_standard_scan_flow', side_effect=ProcessError("Process error"))
  def test_handle_scan_process_error(mock_execute_flow, mock_extract, mock_upload, mock_resolve_scan, mock_resolve_project, mock_workbench, mock_params):
file /home/runner/work/workbench-agent/workbench-agent/tests/handlers/conftest.py, line 11
  @pytest.fixture
  def mock_workbench(mocker):
E       fixture 'mocker' not found
>       available fixtures: cache, capfd, capfdbinary, caplog, capsys, capsysbinary, doctest_namespace, mock_params, mock_workbench, monkeypatch, pytestconfig, record_property, record_testsuite_property, record_xml_attribute, recwarn, tmp_path, tmp_path_factory, tmpdir, tmpdir_factory
>       use 'pytest --fixtures [testpath]' for help on them.

/home/runner/work/workbench-agent/workbench-agent/tests/handlers/conftest.py:11
______________ ERROR at setup of test_handle_scan_process_timeout ______________
file /home/runner/work/workbench-agent/workbench-agent/tests/handlers/test_scan_handler.py, line 164
  @patch('workbench_agent.handlers._resolve_project')
  @patch('workbench_agent.handlers._resolve_scan')
  @patch('workbench_agent.handlers.Workbench.upload_files')
  @patch('workbench_agent.handlers.Workbench.extract_archives')
  @patch('workbench_agent.handlers._execute_standard_scan_flow', side_effect=ProcessTimeoutError("Process timeout"))
  def test_handle_scan_process_timeout(mock_execute_flow, mock_extract, mock_upload, mock_resolve_scan, mock_resolve_project, mock_workbench, mock_params):
file /home/runner/work/workbench-agent/workbench-agent/tests/handlers/conftest.py, line 11
  @pytest.fixture
  def mock_workbench(mocker):
E       fixture 'mocker' not found
>       available fixtures: cache, capfd, capfdbinary, caplog, capsys, capsysbinary, doctest_namespace, mock_params, mock_workbench, monkeypatch, pytestconfig, record_property, record_testsuite_property, record_xml_attribute, recwarn, tmp_path, tmp_path_factory, tmpdir, tmpdir_factory
>       use 'pytest --fixtures [testpath]' for help on them.

/home/runner/work/workbench-agent/workbench-agent/tests/handlers/conftest.py:11
_____________ ERROR at setup of test_handle_scan_unexpected_error ______________
file /home/runner/work/workbench-agent/workbench-agent/tests/handlers/test_scan_handler.py, line 179
  @patch('workbench_agent.handlers._resolve_project')
  @patch('workbench_agent.handlers._resolve_scan')
  @patch('workbench_agent.handlers.Workbench.upload_files')
  @patch('workbench_agent.handlers.Workbench.extract_archives')
  @patch('workbench_agent.handlers._execute_standard_scan_flow', side_effect=Exception("Unexpected error"))
  def test_handle_scan_unexpected_error(mock_execute_flow, mock_extract, mock_upload, mock_resolve_scan, mock_resolve_project, mock_workbench, mock_params):
file /home/runner/work/workbench-agent/workbench-agent/tests/handlers/conftest.py, line 11
  @pytest.fixture
  def mock_workbench(mocker):
E       fixture 'mocker' not found
>       available fixtures: cache, capfd, capfdbinary, caplog, capsys, capsysbinary, doctest_namespace, mock_params, mock_workbench, monkeypatch, pytestconfig, record_property, record_testsuite_property, record_xml_attribute, recwarn, tmp_path, tmp_path_factory, tmpdir, tmpdir_factory
>       use 'pytest --fixtures [testpath]' for help on them.

/home/runner/work/workbench-agent/workbench-agent/tests/handlers/conftest.py:11
______________ ERROR at setup of test_handle_show_results_success ______________
file /home/runner/work/workbench-agent/workbench-agent/tests/handlers/test_show_results_handler.py, line 15
  @patch('workbench_agent.handlers._resolve_project')
  @patch('workbench_agent.handlers._resolve_scan')
  @patch('workbench_agent.handlers._fetch_display_save_results') # Corrected function name
  def test_handle_show_results_success(mock_fetch, mock_resolve_scan, mock_resolve_proj, mock_workbench, mock_params):
file /home/runner/work/workbench-agent/workbench-agent/tests/handlers/conftest.py, line 11
  @pytest.fixture
  def mock_workbench(mocker):
E       fixture 'mocker' not found
>       available fixtures: cache, capfd, capfdbinary, caplog, capsys, capsysbinary, doctest_namespace, mock_params, mock_workbench, monkeypatch, pytestconfig, record_property, record_testsuite_property, record_xml_attribute, recwarn, tmp_path, tmp_path_factory, tmpdir, tmpdir_factory
>       use 'pytest --fixtures [testpath]' for help on them.

/home/runner/work/workbench-agent/workbench-agent/tests/handlers/conftest.py:11
_______ ERROR at setup of test_handle_show_results_project_resolve_fails _______
file /home/runner/work/workbench-agent/workbench-agent/tests/handlers/test_show_results_handler.py, line 33
  @patch('workbench_agent.handlers._resolve_project', side_effect=ProjectNotFoundError("Proj Not Found"))
  @patch('workbench_agent.handlers._resolve_scan')
  @patch('workbench_agent.handlers._fetch_display_save_results') # Corrected
  def test_handle_show_results_project_resolve_fails(mock_fetch, mock_resolve_scan, mock_resolve_proj, mock_workbench, mock_params):
file /home/runner/work/workbench-agent/workbench-agent/tests/handlers/conftest.py, line 11
  @pytest.fixture
  def mock_workbench(mocker):
E       fixture 'mocker' not found
>       available fixtures: cache, capfd, capfdbinary, caplog, capsys, capsysbinary, doctest_namespace, mock_params, mock_workbench, monkeypatch, pytestconfig, record_property, record_testsuite_property, record_xml_attribute, recwarn, tmp_path, tmp_path_factory, tmpdir, tmpdir_factory
>       use 'pytest --fixtures [testpath]' for help on them.

/home/runner/work/workbench-agent/workbench-agent/tests/handlers/conftest.py:11
________ ERROR at setup of test_handle_show_results_scan_resolve_fails _________
file /home/runner/work/workbench-agent/workbench-agent/tests/handlers/test_show_results_handler.py, line 44
  @patch('workbench_agent.handlers._resolve_project')
  @patch('workbench_agent.handlers._resolve_scan', side_effect=ScanNotFoundError("Scan Not Found"))
  @patch('workbench_agent.handlers._fetch_display_save_results') # Corrected
  def test_handle_show_results_scan_resolve_fails(mock_fetch, mock_resolve_scan, mock_resolve_proj, mock_workbench, mock_params):
file /home/runner/work/workbench-agent/workbench-agent/tests/handlers/conftest.py, line 11
  @pytest.fixture
  def mock_workbench(mocker):
E       fixture 'mocker' not found
>       available fixtures: cache, capfd, capfdbinary, caplog, capsys, capsysbinary, doctest_namespace, mock_params, mock_workbench, monkeypatch, pytestconfig, record_property, record_testsuite_property, record_xml_attribute, recwarn, tmp_path, tmp_path_factory, tmpdir, tmpdir_factory
>       use 'pytest --fixtures [testpath]' for help on them.

/home/runner/work/workbench-agent/workbench-agent/tests/handlers/conftest.py:11
___________________ ERROR at setup of test_scan_success_flow ___________________
file /home/runner/work/workbench-agent/workbench-agent/tests/integration/test_integration.py, line 25
  @patch('os.path.exists', return_value=True) # Assume path exists for upload
  @patch('os.path.isdir', return_value=False) # Assume it's a file
  @patch('os.path.getsize', return_value=100) # Assume small file size
  @patch('builtins.open', new_callable=mock_open, read_data=b'dummy data') # Mock file open
  def test_scan_success_flow(mock_open, mock_getsize, mock_isdir, mock_exists, mock_api_post, tmp_path, capsys):
file /home/runner/work/workbench-agent/workbench-agent/tests/integration/conftest.py, line 8
  @pytest.fixture
  def mock_api_post(mocker):
E       fixture 'mocker' not found
>       available fixtures: cache, capfd, capfdbinary, caplog, capsys, capsysbinary, doctest_namespace, mock_api_post, monkeypatch, pytestconfig, record_property, record_testsuite_property, record_xml_attribute, recwarn, tmp_path, tmp_path_factory, tmpdir, tmpdir_factory
>       use 'pytest --fixtures [testpath]' for help on them.

/home/runner/work/workbench-agent/workbench-agent/tests/integration/conftest.py:8
_________________ ERROR at setup of test_scan_fail_during_scan _________________
file /home/runner/work/workbench-agent/workbench-agent/tests/integration/test_integration.py, line 97
  @patch('os.path.exists', return_value=True)
  @patch('os.path.isdir', return_value=False)
  @patch('os.path.getsize', return_value=100)
  @patch('builtins.open', new_callable=mock_open, read_data=b'dummy data')
  def test_scan_fail_during_scan(mock_open, mock_getsize, mock_isdir, mock_exists, mock_api_post, tmp_path, capsys):
file /home/runner/work/workbench-agent/workbench-agent/tests/integration/conftest.py, line 8
  @pytest.fixture
  def mock_api_post(mocker):
E       fixture 'mocker' not found
>       available fixtures: cache, capfd, capfdbinary, caplog, capsys, capsysbinary, doctest_namespace, mock_api_post, monkeypatch, pytestconfig, record_property, record_testsuite_property, record_xml_attribute, recwarn, tmp_path, tmp_path_factory, tmpdir, tmpdir_factory
>       use 'pytest --fixtures [testpath]' for help on them.

/home/runner/work/workbench-agent/workbench-agent/tests/integration/conftest.py:8
_______________ ERROR at setup of test_evaluate_gates_pass_flow ________________
file /home/runner/work/workbench-agent/workbench-agent/tests/integration/test_integration.py, line 154
  def test_evaluate_gates_pass_flow(mock_api_post, capsys):
file /home/runner/work/workbench-agent/workbench-agent/tests/integration/conftest.py, line 8
  @pytest.fixture
  def mock_api_post(mocker):
E       fixture 'mocker' not found
>       available fixtures: cache, capfd, capfdbinary, caplog, capsys, capsysbinary, doctest_namespace, mock_api_post, monkeypatch, pytestconfig, record_property, record_testsuite_property, record_xml_attribute, recwarn, tmp_path, tmp_path_factory, tmpdir, tmpdir_factory
>       use 'pytest --fixtures [testpath]' for help on them.

/home/runner/work/workbench-agent/workbench-agent/tests/integration/conftest.py:8
___________ ERROR at setup of test_evaluate_gates_fail_pending_flow ____________
file /home/runner/work/workbench-agent/workbench-agent/tests/integration/test_integration.py, line 206
  def test_evaluate_gates_fail_pending_flow(mock_api_post, capsys):
file /home/runner/work/workbench-agent/workbench-agent/tests/integration/conftest.py, line 8
  @pytest.fixture
  def mock_api_post(mocker):
E       fixture 'mocker' not found
>       available fixtures: cache, capfd, capfdbinary, caplog, capsys, capsysbinary, doctest_namespace, mock_api_post, monkeypatch, pytestconfig, record_property, record_testsuite_property, record_xml_attribute, recwarn, tmp_path, tmp_path_factory, tmpdir, tmpdir_factory
>       use 'pytest --fixtures [testpath]' for help on them.

/home/runner/work/workbench-agent/workbench-agent/tests/integration/conftest.py:8
_______________ ERROR at setup of test_download_report_sync_flow _______________
file /home/runner/work/workbench-agent/workbench-agent/tests/integration/test_integration.py, line 251
  @patch('os.makedirs') # Mock directory creation for saving report
  @patch('builtins.open', new_callable=mock_open) # Mock file writing
  def test_download_report_sync_flow(mock_open_file, mock_makedirs, mock_api_post, tmp_path, capsys):
file /home/runner/work/workbench-agent/workbench-agent/tests/integration/conftest.py, line 8
  @pytest.fixture
  def mock_api_post(mocker):
E       fixture 'mocker' not found
>       available fixtures: cache, capfd, capfdbinary, caplog, capsys, capsysbinary, doctest_namespace, mock_api_post, monkeypatch, pytestconfig, record_property, record_testsuite_property, record_xml_attribute, recwarn, tmp_path, tmp_path_factory, tmpdir, tmpdir_factory
>       use 'pytest --fixtures [testpath]' for help on them.

/home/runner/work/workbench-agent/workbench-agent/tests/integration/conftest.py:8
________________ ERROR at setup of test_resolve_project_success ________________
file /home/runner/work/workbench-agent/workbench-agent/tests/test_utils.py, line 93
  def test_resolve_project_success(mock_workbench):
file /home/runner/work/workbench-agent/workbench-agent/tests/test_utils.py, line 43
  @pytest.fixture
  def mock_workbench(mocker): # Use mocker fixture for MagicMock
E       fixture 'mocker' not found
>       available fixtures: cache, capfd, capfdbinary, caplog, capsys, capsysbinary, doctest_namespace, mock_params, mock_workbench, monkeypatch, pytestconfig, record_property, record_testsuite_property, record_xml_attribute, recwarn, tmp_path, tmp_path_factory, tmpdir, tmpdir_factory
>       use 'pytest --fixtures [testpath]' for help on them.

/home/runner/work/workbench-agent/workbench-agent/tests/test_utils.py:43
__________ ERROR at setup of test_resolve_project_not_found_no_create __________
file /home/runner/work/workbench-agent/workbench-agent/tests/test_utils.py, line 101
  def test_resolve_project_not_found_no_create(mock_workbench):
file /home/runner/work/workbench-agent/workbench-agent/tests/test_utils.py, line 43
  @pytest.fixture
  def mock_workbench(mocker): # Use mocker fixture for MagicMock
E       fixture 'mocker' not found
>       available fixtures: cache, capfd, capfdbinary, caplog, capsys, capsysbinary, doctest_namespace, mock_params, mock_workbench, monkeypatch, pytestconfig, record_property, record_testsuite_property, record_xml_attribute, recwarn, tmp_path, tmp_path_factory, tmpdir, tmpdir_factory
>       use 'pytest --fixtures [testpath]' for help on them.

/home/runner/work/workbench-agent/workbench-agent/tests/test_utils.py:43
_________ ERROR at setup of test_resolve_project_found_create_no_error _________
file /home/runner/work/workbench-agent/workbench-agent/tests/test_utils.py, line 107
  def test_resolve_project_found_create_no_error(mock_workbench):
file /home/runner/work/workbench-agent/workbench-agent/tests/test_utils.py, line 43
  @pytest.fixture
  def mock_workbench(mocker): # Use mocker fixture for MagicMock
E       fixture 'mocker' not found
>       available fixtures: cache, capfd, capfdbinary, caplog, capsys, capsysbinary, doctest_namespace, mock_params, mock_workbench, monkeypatch, pytestconfig, record_property, record_testsuite_property, record_xml_attribute, recwarn, tmp_path, tmp_path_factory, tmpdir, tmpdir_factory
>       use 'pytest --fixtures [testpath]' for help on them.

/home/runner/work/workbench-agent/workbench-agent/tests/test_utils.py:43
____________ ERROR at setup of test_resolve_project_create_success _____________
file /home/runner/work/workbench-agent/workbench-agent/tests/test_utils.py, line 114
  @patch('workbench_agent.utils.Workbench.create_project')
  def test_resolve_project_create_success(mock_create_proj, mock_workbench):
file /home/runner/work/workbench-agent/workbench-agent/tests/test_utils.py, line 43
  @pytest.fixture
  def mock_workbench(mocker): # Use mocker fixture for MagicMock
E       fixture 'mocker' not found
>       available fixtures: cache, capfd, capfdbinary, caplog, capsys, capsysbinary, doctest_namespace, mock_params, mock_workbench, monkeypatch, pytestconfig, record_property, record_testsuite_property, record_xml_attribute, recwarn, tmp_path, tmp_path_factory, tmpdir, tmpdir_factory
>       use 'pytest --fixtures [testpath]' for help on them.

/home/runner/work/workbench-agent/workbench-agent/tests/test_utils.py:43
_________ ERROR at setup of test_resolve_project_create_race_condition _________
file /home/runner/work/workbench-agent/workbench-agent/tests/test_utils.py, line 130
  @patch('workbench_agent.utils.Workbench.create_project', side_effect=ProjectExistsError("Exists on create"))
  def test_resolve_project_create_race_condition(mock_create_proj, mock_workbench):
file /home/runner/work/workbench-agent/workbench-agent/tests/test_utils.py, line 43
  @pytest.fixture
  def mock_workbench(mocker): # Use mocker fixture for MagicMock
E       fixture 'mocker' not found
>       available fixtures: cache, capfd, capfdbinary, caplog, capsys, capsysbinary, doctest_namespace, mock_params, mock_workbench, monkeypatch, pytestconfig, record_property, record_testsuite_property, record_xml_attribute, recwarn, tmp_path, tmp_path_factory, tmpdir, tmpdir_factory
>       use 'pytest --fixtures [testpath]' for help on them.

/home/runner/work/workbench-agent/workbench-agent/tests/test_utils.py:43
____________ ERROR at setup of test_resolve_project_api_error_list _____________
file /home/runner/work/workbench-agent/workbench-agent/tests/test_utils.py, line 146
  def test_resolve_project_api_error_list(mock_workbench):
file /home/runner/work/workbench-agent/workbench-agent/tests/test_utils.py, line 43
  @pytest.fixture
  def mock_workbench(mocker): # Use mocker fixture for MagicMock
E       fixture 'mocker' not found
>       available fixtures: cache, capfd, capfdbinary, caplog, capsys, capsysbinary, doctest_namespace, mock_params, mock_workbench, monkeypatch, pytestconfig, record_property, record_testsuite_property, record_xml_attribute, recwarn, tmp_path, tmp_path_factory, tmpdir, tmpdir_factory
>       use 'pytest --fixtures [testpath]' for help on them.

/home/runner/work/workbench-agent/workbench-agent/tests/test_utils.py:43
__________ ERROR at setup of test_resolve_project_network_error_list ___________
file /home/runner/work/workbench-agent/workbench-agent/tests/test_utils.py, line 151
  def test_resolve_project_network_error_list(mock_workbench):
file /home/runner/work/workbench-agent/workbench-agent/tests/test_utils.py, line 43
  @pytest.fixture
  def mock_workbench(mocker): # Use mocker fixture for MagicMock
E       fixture 'mocker' not found
>       available fixtures: cache, capfd, capfdbinary, caplog, capsys, capsysbinary, doctest_namespace, mock_params, mock_workbench, monkeypatch, pytestconfig, record_property, record_testsuite_property, record_xml_attribute, recwarn, tmp_path, tmp_path_factory, tmpdir, tmpdir_factory
>       use 'pytest --fixtures [testpath]' for help on them.

/home/runner/work/workbench-agent/workbench-agent/tests/test_utils.py:43
___________ ERROR at setup of test_resolve_project_api_error_create ____________
file /home/runner/work/workbench-agent/workbench-agent/tests/test_utils.py, line 156
  @patch('workbench_agent.utils.Workbench.create_project', side_effect=ApiError("Create API error"))
  def test_resolve_project_api_error_create(mock_create_proj, mock_workbench):
file /home/runner/work/workbench-agent/workbench-agent/tests/test_utils.py, line 43
  @pytest.fixture
  def mock_workbench(mocker): # Use mocker fixture for MagicMock
E       fixture 'mocker' not found
>       available fixtures: cache, capfd, capfdbinary, caplog, capsys, capsysbinary, doctest_namespace, mock_params, mock_workbench, monkeypatch, pytestconfig, record_property, record_testsuite_property, record_xml_attribute, recwarn, tmp_path, tmp_path_factory, tmpdir, tmpdir_factory
>       use 'pytest --fixtures [testpath]' for help on them.

/home/runner/work/workbench-agent/workbench-agent/tests/test_utils.py:43
__________ ERROR at setup of test_resolve_scan_success_project_scope ___________
file /home/runner/work/workbench-agent/workbench-agent/tests/test_utils.py, line 165
  def test_resolve_scan_success_project_scope(mock_workbench, mock_params):
file /home/runner/work/workbench-agent/workbench-agent/tests/test_utils.py, line 43
  @pytest.fixture
  def mock_workbench(mocker): # Use mocker fixture for MagicMock
E       fixture 'mocker' not found
>       available fixtures: cache, capfd, capfdbinary, caplog, capsys, capsysbinary, doctest_namespace, mock_params, mock_workbench, monkeypatch, pytestconfig, record_property, record_testsuite_property, record_xml_attribute, recwarn, tmp_path, tmp_path_factory, tmpdir, tmpdir_factory
>       use 'pytest --fixtures [testpath]' for help on them.

/home/runner/work/workbench-agent/workbench-agent/tests/test_utils.py:43
___________ ERROR at setup of test_resolve_scan_success_global_scope ___________
file /home/runner/work/workbench-agent/workbench-agent/tests/test_utils.py, line 178
  def test_resolve_scan_success_global_scope(mock_workbench, mock_params):
file /home/runner/work/workbench-agent/workbench-agent/tests/test_utils.py, line 43
  @pytest.fixture
  def mock_workbench(mocker): # Use mocker fixture for MagicMock
E       fixture 'mocker' not found
>       available fixtures: cache, capfd, capfdbinary, caplog, capsys, capsysbinary, doctest_namespace, mock_params, mock_workbench, monkeypatch, pytestconfig, record_property, record_testsuite_property, record_xml_attribute, recwarn, tmp_path, tmp_path_factory, tmpdir, tmpdir_factory
>       use 'pytest --fixtures [testpath]' for help on them.

/home/runner/work/workbench-agent/workbench-agent/tests/test_utils.py:43
_________ ERROR at setup of test_resolve_scan_not_found_project_scope __________
file /home/runner/work/workbench-agent/workbench-agent/tests/test_utils.py, line 190
  def test_resolve_scan_not_found_project_scope(mock_workbench, mock_params):
file /home/runner/work/workbench-agent/workbench-agent/tests/test_utils.py, line 43
  @pytest.fixture
  def mock_workbench(mocker): # Use mocker fixture for MagicMock
E       fixture 'mocker' not found
>       available fixtures: cache, capfd, capfdbinary, caplog, capsys, capsysbinary, doctest_namespace, mock_params, mock_workbench, monkeypatch, pytestconfig, record_property, record_testsuite_property, record_xml_attribute, recwarn, tmp_path, tmp_path_factory, tmpdir, tmpdir_factory
>       use 'pytest --fixtures [testpath]' for help on them.

/home/runner/work/workbench-agent/workbench-agent/tests/test_utils.py:43
__________ ERROR at setup of test_resolve_scan_not_found_global_scope __________
file /home/runner/work/workbench-agent/workbench-agent/tests/test_utils.py, line 199
  def test_resolve_scan_not_found_global_scope(mock_workbench, mock_params):
file /home/runner/work/workbench-agent/workbench-agent/tests/test_utils.py, line 43
  @pytest.fixture
  def mock_workbench(mocker): # Use mocker fixture for MagicMock
E       fixture 'mocker' not found
>       available fixtures: cache, capfd, capfdbinary, caplog, capsys, capsysbinary, doctest_namespace, mock_params, mock_workbench, monkeypatch, pytestconfig, record_property, record_testsuite_property, record_xml_attribute, recwarn, tmp_path, tmp_path_factory, tmpdir, tmpdir_factory
>       use 'pytest --fixtures [testpath]' for help on them.

/home/runner/work/workbench-agent/workbench-agent/tests/test_utils.py:43
__________ ERROR at setup of test_resolve_scan_found_create_no_error ___________
file /home/runner/work/workbench-agent/workbench-agent/tests/test_utils.py, line 208
  @patch('workbench_agent.utils._ensure_scan_compatibility')
  def test_resolve_scan_found_create_no_error(mock_compat_check, mock_workbench, mock_params):
file /home/runner/work/workbench-agent/workbench-agent/tests/test_utils.py, line 43
  @pytest.fixture
  def mock_workbench(mocker): # Use mocker fixture for MagicMock
E       fixture 'mocker' not found
>       available fixtures: cache, capfd, capfdbinary, caplog, capsys, capsysbinary, doctest_namespace, mock_params, mock_workbench, monkeypatch, pytestconfig, record_property, record_testsuite_property, record_xml_attribute, recwarn, tmp_path, tmp_path_factory, tmpdir, tmpdir_factory
>       use 'pytest --fixtures [testpath]' for help on them.

/home/runner/work/workbench-agent/workbench-agent/tests/test_utils.py:43
_________ ERROR at setup of test_resolve_scan_api_error_project_scope __________
file /home/runner/work/workbench-agent/workbench-agent/tests/test_utils.py, line 222
  def test_resolve_scan_api_error_project_scope(mock_workbench, mock_params):
file /home/runner/work/workbench-agent/workbench-agent/tests/test_utils.py, line 43
  @pytest.fixture
  def mock_workbench(mocker): # Use mocker fixture for MagicMock
E       fixture 'mocker' not found
>       available fixtures: cache, capfd, capfdbinary, caplog, capsys, capsysbinary, doctest_namespace, mock_params, mock_workbench, monkeypatch, pytestconfig, record_property, record_testsuite_property, record_xml_attribute, recwarn, tmp_path, tmp_path_factory, tmpdir, tmpdir_factory
>       use 'pytest --fixtures [testpath]' for help on them.

/home/runner/work/workbench-agent/workbench-agent/tests/test_utils.py:43
_______ ERROR at setup of test_resolve_scan_network_error_project_scope ________
file /home/runner/work/workbench-agent/workbench-agent/tests/test_utils.py, line 231
  def test_resolve_scan_network_error_project_scope(mock_workbench, mock_params):
file /home/runner/work/workbench-agent/workbench-agent/tests/test_utils.py, line 43
  @pytest.fixture
  def mock_workbench(mocker): # Use mocker fixture for MagicMock
E       fixture 'mocker' not found
>       available fixtures: cache, capfd, capfdbinary, caplog, capsys, capsysbinary, doctest_namespace, mock_params, mock_workbench, monkeypatch, pytestconfig, record_property, record_testsuite_property, record_xml_attribute, recwarn, tmp_path, tmp_path_factory, tmpdir, tmpdir_factory
>       use 'pytest --fixtures [testpath]' for help on them.

/home/runner/work/workbench-agent/workbench-agent/tests/test_utils.py:43
__________ ERROR at setup of test_execute_standard_scan_flow_success ___________
file /home/runner/work/workbench-agent/workbench-agent/tests/test_utils.py, line 241
  def test_execute_standard_scan_flow_success(mock_workbench, mock_params):
file /home/runner/work/workbench-agent/workbench-agent/tests/test_utils.py, line 43
  @pytest.fixture
  def mock_workbench(mocker): # Use mocker fixture for MagicMock
E       fixture 'mocker' not found
>       available fixtures: cache, capfd, capfdbinary, caplog, capsys, capsysbinary, doctest_namespace, mock_params, mock_workbench, monkeypatch, pytestconfig, record_property, record_testsuite_property, record_xml_attribute, recwarn, tmp_path, tmp_path_factory, tmpdir, tmpdir_factory
>       use 'pytest --fixtures [testpath]' for help on them.

/home/runner/work/workbench-agent/workbench-agent/tests/test_utils.py:43
______ ERROR at setup of test_execute_standard_scan_flow_id_reuse_project ______
file /home/runner/work/workbench-agent/workbench-agent/tests/test_utils.py, line 268
  @patch("workbench_agent.utils._resolve_project") # Mock project lookup for reuse
  def test_execute_standard_scan_flow_id_reuse_project(mock_resolve_proj_reuse, mock_workbench, mock_params):
file /home/runner/work/workbench-agent/workbench-agent/tests/test_utils.py, line 43
  @pytest.fixture
  def mock_workbench(mocker): # Use mocker fixture for MagicMock
E       fixture 'mocker' not found
>       available fixtures: cache, capfd, capfdbinary, caplog, capsys, capsysbinary, doctest_namespace, mock_params, mock_workbench, monkeypatch, pytestconfig, record_property, record_testsuite_property, record_xml_attribute, recwarn, tmp_path, tmp_path_factory, tmpdir, tmpdir_factory
>       use 'pytest --fixtures [testpath]' for help on them.

/home/runner/work/workbench-agent/workbench-agent/tests/test_utils.py:43
____ ERROR at setup of test_execute_standard_scan_flow_id_reuse_scan_local _____
file /home/runner/work/workbench-agent/workbench-agent/tests/test_utils.py, line 288
  @patch("workbench_agent.utils._resolve_scan") # Mock scan lookup for reuse
  def test_execute_standard_scan_flow_id_reuse_scan_local(mock_resolve_scan_reuse, mock_workbench, mock_params):
file /home/runner/work/workbench-agent/workbench-agent/tests/test_utils.py, line 43
  @pytest.fixture
  def mock_workbench(mocker): # Use mocker fixture for MagicMock
E       fixture 'mocker' not found
>       available fixtures: cache, capfd, capfdbinary, caplog, capsys, capsysbinary, doctest_namespace, mock_params, mock_workbench, monkeypatch, pytestconfig, record_property, record_testsuite_property, record_xml_attribute, recwarn, tmp_path, tmp_path_factory, tmpdir, tmpdir_factory
>       use 'pytest --fixtures [testpath]' for help on them.

/home/runner/work/workbench-agent/workbench-agent/tests/test_utils.py:43
____ ERROR at setup of test_execute_standard_scan_flow_id_reuse_scan_global ____
file /home/runner/work/workbench-agent/workbench-agent/tests/test_utils.py, line 312
  @patch("workbench_agent.utils._resolve_scan") # Mock scan lookup for reuse
  def test_execute_standard_scan_flow_id_reuse_scan_global(mock_resolve_scan_reuse, mock_workbench, mock_params):
file /home/runner/work/workbench-agent/workbench-agent/tests/test_utils.py, line 43
  @pytest.fixture
  def mock_workbench(mocker): # Use mocker fixture for MagicMock
E       fixture 'mocker' not found
>       available fixtures: cache, capfd, capfdbinary, caplog, capsys, capsysbinary, doctest_namespace, mock_params, mock_workbench, monkeypatch, pytestconfig, record_property, record_testsuite_property, record_xml_attribute, recwarn, tmp_path, tmp_path_factory, tmpdir, tmpdir_factory
>       use 'pytest --fixtures [testpath]' for help on them.

/home/runner/work/workbench-agent/workbench-agent/tests/test_utils.py:43
____ ERROR at setup of test_execute_standard_scan_flow_id_reuse_scan_fails _____
file /home/runner/work/workbench-agent/workbench-agent/tests/test_utils.py, line 343
  @patch("workbench_agent.utils._resolve_scan", side_effect=ValidationError("Global lookup failed")) # Mock scan lookup for reuse
  def test_execute_standard_scan_flow_id_reuse_scan_fails(mock_resolve_scan_reuse, mock_workbench, mock_params):
file /home/runner/work/workbench-agent/workbench-agent/tests/test_utils.py, line 43
  @pytest.fixture
  def mock_workbench(mocker): # Use mocker fixture for MagicMock
E       fixture 'mocker' not found
>       available fixtures: cache, capfd, capfdbinary, caplog, capsys, capsysbinary, doctest_namespace, mock_params, mock_workbench, monkeypatch, pytestconfig, record_property, record_testsuite_property, record_xml_attribute, recwarn, tmp_path, tmp_path_factory, tmpdir, tmpdir_factory
>       use 'pytest --fixtures [testpath]' for help on them.

/home/runner/work/workbench-agent/workbench-agent/tests/test_utils.py:43
__________ ERROR at setup of test_execute_standard_scan_flow_with_da ___________
file /home/runner/work/workbench-agent/workbench-agent/tests/test_utils.py, line 357
  def test_execute_standard_scan_flow_with_da(mock_workbench, mock_params):
file /home/runner/work/workbench-agent/workbench-agent/tests/test_utils.py, line 43
  @pytest.fixture
  def mock_workbench(mocker): # Use mocker fixture for MagicMock
E       fixture 'mocker' not found
>       available fixtures: cache, capfd, capfdbinary, caplog, capsys, capsysbinary, doctest_namespace, mock_params, mock_workbench, monkeypatch, pytestconfig, record_property, record_testsuite_property, record_xml_attribute, recwarn, tmp_path, tmp_path_factory, tmpdir, tmpdir_factory
>       use 'pytest --fixtures [testpath]' for help on them.

/home/runner/work/workbench-agent/workbench-agent/tests/test_utils.py:43
______ ERROR at setup of test_execute_standard_scan_flow_start_api_error _______
file /home/runner/work/workbench-agent/workbench-agent/tests/test_utils.py, line 382
  def test_execute_standard_scan_flow_start_api_error(mock_workbench, mock_params):
file /home/runner/work/workbench-agent/workbench-agent/tests/test_utils.py, line 43
  @pytest.fixture
  def mock_workbench(mocker): # Use mocker fixture for MagicMock
E       fixture 'mocker' not found
>       available fixtures: cache, capfd, capfdbinary, caplog, capsys, capsysbinary, doctest_namespace, mock_params, mock_workbench, monkeypatch, pytestconfig, record_property, record_testsuite_property, record_xml_attribute, recwarn, tmp_path, tmp_path_factory, tmpdir, tmpdir_factory
>       use 'pytest --fixtures [testpath]' for help on them.

/home/runner/work/workbench-agent/workbench-agent/tests/test_utils.py:43
_____ ERROR at setup of test_execute_standard_scan_flow_wait_network_error _____
file /home/runner/work/workbench-agent/workbench-agent/tests/test_utils.py, line 389
  def test_execute_standard_scan_flow_wait_network_error(mock_workbench, mock_params):
file /home/runner/work/workbench-agent/workbench-agent/tests/test_utils.py, line 43
  @pytest.fixture
  def mock_workbench(mocker): # Use mocker fixture for MagicMock
E       fixture 'mocker' not found
>       available fixtures: cache, capfd, capfdbinary, caplog, capsys, capsysbinary, doctest_namespace, mock_params, mock_workbench, monkeypatch, pytestconfig, record_property, record_testsuite_property, record_xml_attribute, recwarn, tmp_path, tmp_path_factory, tmpdir, tmpdir_factory
>       use 'pytest --fixtures [testpath]' for help on them.

/home/runner/work/workbench-agent/workbench-agent/tests/test_utils.py:43
_____ ERROR at setup of test_execute_standard_scan_flow_wait_process_error _____
file /home/runner/work/workbench-agent/workbench-agent/tests/test_utils.py, line 396
  def test_execute_standard_scan_flow_wait_process_error(mock_workbench, mock_params):
file /home/runner/work/workbench-agent/workbench-agent/tests/test_utils.py, line 43
  @pytest.fixture
  def mock_workbench(mocker): # Use mocker fixture for MagicMock
E       fixture 'mocker' not found
>       available fixtures: cache, capfd, capfdbinary, caplog, capsys, capsysbinary, doctest_namespace, mock_params, mock_workbench, monkeypatch, pytestconfig, record_property, record_testsuite_property, record_xml_attribute, recwarn, tmp_path, tmp_path_factory, tmpdir, tmpdir_factory
>       use 'pytest --fixtures [testpath]' for help on them.

/home/runner/work/workbench-agent/workbench-agent/tests/test_utils.py:43
____ ERROR at setup of test_execute_standard_scan_flow_wait_process_timeout ____
file /home/runner/work/workbench-agent/workbench-agent/tests/test_utils.py, line 402
  def test_execute_standard_scan_flow_wait_process_timeout(mock_workbench, mock_params):
file /home/runner/work/workbench-agent/workbench-agent/tests/test_utils.py, line 43
  @pytest.fixture
  def mock_workbench(mocker): # Use mocker fixture for MagicMock
E       fixture 'mocker' not found
>       available fixtures: cache, capfd, capfdbinary, caplog, capsys, capsysbinary, doctest_namespace, mock_params, mock_workbench, monkeypatch, pytestconfig, record_property, record_testsuite_property, record_xml_attribute, recwarn, tmp_path, tmp_path_factory, tmpdir, tmpdir_factory
>       use 'pytest --fixtures [testpath]' for help on them.

/home/runner/work/workbench-agent/workbench-agent/tests/test_utils.py:43
______________ ERROR at setup of test_save_report_content_success ______________
file /home/runner/work/workbench-agent/workbench-agent/tests/test_utils.py, line 415
  def test_save_report_content_success(mock_workbench):
file /home/runner/work/workbench-agent/workbench-agent/tests/test_utils.py, line 43
  @pytest.fixture
  def mock_workbench(mocker): # Use mocker fixture for MagicMock
E       fixture 'mocker' not found
>       available fixtures: cache, capfd, capfdbinary, caplog, capsys, capsysbinary, doctest_namespace, mock_params, mock_workbench, monkeypatch, pytestconfig, record_property, record_testsuite_property, record_xml_attribute, recwarn, tmp_path, tmp_path_factory, tmpdir, tmpdir_factory
>       use 'pytest --fixtures [testpath]' for help on them.

/home/runner/work/workbench-agent/workbench-agent/tests/test_utils.py:43
______________ ERROR at setup of test_save_report_content_binary _______________
file /home/runner/work/workbench-agent/workbench-agent/tests/test_utils.py, line 428
  def test_save_report_content_binary(mock_workbench):
file /home/runner/work/workbench-agent/workbench-agent/tests/test_utils.py, line 43
  @pytest.fixture
  def mock_workbench(mocker): # Use mocker fixture for MagicMock
E       fixture 'mocker' not found
>       available fixtures: cache, capfd, capfdbinary, caplog, capsys, capsysbinary, doctest_namespace, mock_params, mock_workbench, monkeypatch, pytestconfig, record_property, record_testsuite_property, record_xml_attribute, recwarn, tmp_path, tmp_path_factory, tmpdir, tmpdir_factory
>       use 'pytest --fixtures [testpath]' for help on them.

/home/runner/work/workbench-agent/workbench-agent/tests/test_utils.py:43
_______________ ERROR at setup of test_save_report_content_dict ________________
file /home/runner/work/workbench-agent/workbench-agent/tests/test_utils.py, line 442
  def test_save_report_content_dict(mock_workbench):
file /home/runner/work/workbench-agent/workbench-agent/tests/test_utils.py, line 43
  @pytest.fixture
  def mock_workbench(mocker): # Use mocker fixture for MagicMock
E       fixture 'mocker' not found
>       available fixtures: cache, capfd, capfdbinary, caplog, capsys, capsysbinary, doctest_namespace, mock_params, mock_workbench, monkeypatch, pytestconfig, record_property, record_testsuite_property, record_xml_attribute, recwarn, tmp_path, tmp_path_factory, tmpdir, tmpdir_factory
>       use 'pytest --fixtures [testpath]' for help on them.

/home/runner/work/workbench-agent/workbench-agent/tests/test_utils.py:43
_________ ERROR at setup of test_save_report_content_file_system_error _________
file /home/runner/work/workbench-agent/workbench-agent/tests/test_utils.py, line 452
  def test_save_report_content_file_system_error(mock_workbench):
file /home/runner/work/workbench-agent/workbench-agent/tests/test_utils.py, line 43
  @pytest.fixture
  def mock_workbench(mocker): # Use mocker fixture for MagicMock
E       fixture 'mocker' not found
>       available fixtures: cache, capfd, capfdbinary, caplog, capsys, capsysbinary, doctest_namespace, mock_params, mock_workbench, monkeypatch, pytestconfig, record_property, record_testsuite_property, record_xml_attribute, recwarn, tmp_path, tmp_path_factory, tmpdir, tmpdir_factory
>       use 'pytest --fixtures [testpath]' for help on them.

/home/runner/work/workbench-agent/workbench-agent/tests/test_utils.py:43
_______ ERROR at setup of test_resolve_scan_project_scope_create_success _______
file /home/runner/work/workbench-agent/workbench-agent/tests/test_utils.py, line 525
  @patch('workbench_agent.utils._resolve_project')
  @patch('workbench_agent.utils.Workbench.get_project_scans')
  @patch('workbench_agent.utils.Workbench.create_webapp_scan')
  @patch('time.sleep', return_value=None) # Mock time.sleep
  def test_resolve_scan_project_scope_create_success(mock_sleep, mock_create_scan, mock_get_scans, mock_resolve_proj, mock_workbench, mock_params):
file /home/runner/work/workbench-agent/workbench-agent/tests/test_utils.py, line 43
  @pytest.fixture
  def mock_workbench(mocker): # Use mocker fixture for MagicMock
E       fixture 'mocker' not found
>       available fixtures: cache, capfd, capfdbinary, caplog, capsys, capsysbinary, doctest_namespace, mock_params, mock_workbench, monkeypatch, pytestconfig, record_property, record_testsuite_property, record_xml_attribute, recwarn, tmp_path, tmp_path_factory, tmpdir, tmpdir_factory
>       use 'pytest --fixtures [testpath]' for help on them.

/home/runner/work/workbench-agent/workbench-agent/tests/test_utils.py:43
____ ERROR at setup of test_resolve_scan_project_scope_not_found_no_create _____
file /home/runner/work/workbench-agent/workbench-agent/tests/test_utils.py, line 557
  @patch('workbench_agent.utils._resolve_project')
  @patch('workbench_agent.utils.Workbench.get_project_scans')
  def test_resolve_scan_project_scope_not_found_no_create(mock_get_scans, mock_resolve_proj, mock_workbench, mock_params):
file /home/runner/work/workbench-agent/workbench-agent/tests/test_utils.py, line 43
  @pytest.fixture
  def mock_workbench(mocker): # Use mocker fixture for MagicMock
E       fixture 'mocker' not found
>       available fixtures: cache, capfd, capfdbinary, caplog, capsys, capsysbinary, doctest_namespace, mock_params, mock_workbench, monkeypatch, pytestconfig, record_property, record_testsuite_property, record_xml_attribute, recwarn, tmp_path, tmp_path_factory, tmpdir, tmpdir_factory
>       use 'pytest --fixtures [testpath]' for help on them.

/home/runner/work/workbench-agent/workbench-agent/tests/test_utils.py:43
________ ERROR at setup of test_resolve_scan_global_scope_create_error _________
file /home/runner/work/workbench-agent/workbench-agent/tests/test_utils.py, line 577
  def test_resolve_scan_global_scope_create_error(mock_workbench, mock_params):
file /home/runner/work/workbench-agent/workbench-agent/tests/test_utils.py, line 43
  @pytest.fixture
  def mock_workbench(mocker): # Use mocker fixture for MagicMock
E       fixture 'mocker' not found
>       available fixtures: cache, capfd, capfdbinary, caplog, capsys, capsysbinary, doctest_namespace, mock_params, mock_workbench, monkeypatch, pytestconfig, record_property, record_testsuite_property, record_xml_attribute, recwarn, tmp_path, tmp_path_factory, tmpdir, tmpdir_factory
>       use 'pytest --fixtures [testpath]' for help on them.

/home/runner/work/workbench-agent/workbench-agent/tests/test_utils.py:43
_______ ERROR at setup of test_resolve_scan_triggers_compatibility_check _______
file /home/runner/work/workbench-agent/workbench-agent/tests/test_utils.py, line 590
  @patch('workbench_agent.utils._resolve_project')
  @patch('workbench_agent.utils.Workbench.get_project_scans')
  @patch('workbench_agent.utils._ensure_scan_compatibility') # Mock compatibility check
  def test_resolve_scan_triggers_compatibility_check(mock_compat_check, mock_get_scans, mock_resolve_proj, mock_workbench, mock_params):
file /home/runner/work/workbench-agent/workbench-agent/tests/test_utils.py, line 43
  @pytest.fixture
  def mock_workbench(mocker): # Use mocker fixture for MagicMock
E       fixture 'mocker' not found
>       available fixtures: cache, capfd, capfdbinary, caplog, capsys, capsysbinary, doctest_namespace, mock_params, mock_workbench, monkeypatch, pytestconfig, record_property, record_testsuite_property, record_xml_attribute, recwarn, tmp_path, tmp_path_factory, tmpdir, tmpdir_factory
>       use 'pytest --fixtures [testpath]' for help on them.

/home/runner/work/workbench-agent/workbench-agent/tests/test_utils.py:43
_____ ERROR at setup of test_ensure_scan_compatibility_git_branch_mismatch _____
file /home/runner/work/workbench-agent/workbench-agent/tests/test_utils.py, line 615
  def test_ensure_scan_compatibility_git_branch_mismatch(mock_params):
file /home/runner/work/workbench-agent/workbench-agent/tests/test_utils.py, line 59
  @pytest.fixture
  def mock_params(mocker): # Use mocker fixture for MagicMock
E       fixture 'mocker' not found
>       available fixtures: cache, capfd, capfdbinary, caplog, capsys, capsysbinary, doctest_namespace, mock_params, mock_workbench, monkeypatch, pytestconfig, record_property, record_testsuite_property, record_xml_attribute, recwarn, tmp_path, tmp_path_factory, tmpdir, tmpdir_factory
>       use 'pytest --fixtures [testpath]' for help on them.

/home/runner/work/workbench-agent/workbench-agent/tests/test_utils.py:59
______ ERROR at setup of test_ensure_scan_compatibility_git_tag_vs_branch ______
file /home/runner/work/workbench-agent/workbench-agent/tests/test_utils.py, line 624
  def test_ensure_scan_compatibility_git_tag_vs_branch(mock_params):
file /home/runner/work/workbench-agent/workbench-agent/tests/test_utils.py, line 59
  @pytest.fixture
  def mock_params(mocker): # Use mocker fixture for MagicMock
E       fixture 'mocker' not found
>       available fixtures: cache, capfd, capfdbinary, caplog, capsys, capsysbinary, doctest_namespace, mock_params, mock_workbench, monkeypatch, pytestconfig, record_property, record_testsuite_property, record_xml_attribute, recwarn, tmp_path, tmp_path_factory, tmpdir, tmpdir_factory
>       use 'pytest --fixtures [testpath]' for help on them.

/home/runner/work/workbench-agent/workbench-agent/tests/test_utils.py:59
______ ERROR at setup of test_ensure_scan_compatibility_git_branch_vs_tag ______
file /home/runner/work/workbench-agent/workbench-agent/tests/test_utils.py, line 634
  def test_ensure_scan_compatibility_git_branch_vs_tag(mock_params):
file /home/runner/work/workbench-agent/workbench-agent/tests/test_utils.py, line 59
  @pytest.fixture
  def mock_params(mocker): # Use mocker fixture for MagicMock
E       fixture 'mocker' not found
>       available fixtures: cache, capfd, capfdbinary, caplog, capsys, capsysbinary, doctest_namespace, mock_params, mock_workbench, monkeypatch, pytestconfig, record_property, record_testsuite_property, record_xml_attribute, recwarn, tmp_path, tmp_path_factory, tmpdir, tmpdir_factory
>       use 'pytest --fixtures [testpath]' for help on them.

/home/runner/work/workbench-agent/workbench-agent/tests/test_utils.py:59
______ ERROR at setup of test_ensure_scan_compatibility_git_tag_mismatch _______
file /home/runner/work/workbench-agent/workbench-agent/tests/test_utils.py, line 644
  def test_ensure_scan_compatibility_git_tag_mismatch(mock_params):
file /home/runner/work/workbench-agent/workbench-agent/tests/test_utils.py, line 59
  @pytest.fixture
  def mock_params(mocker): # Use mocker fixture for MagicMock
E       fixture 'mocker' not found
>       available fixtures: cache, capfd, capfdbinary, caplog, capsys, capsysbinary, doctest_namespace, mock_params, mock_workbench, monkeypatch, pytestconfig, record_property, record_testsuite_property, record_xml_attribute, recwarn, tmp_path, tmp_path_factory, tmpdir, tmpdir_factory
>       use 'pytest --fixtures [testpath]' for help on them.

/home/runner/work/workbench-agent/workbench-agent/tests/test_utils.py:59
______ ERROR at setup of test_ensure_scan_compatibility_git_url_mismatch _______
file /home/runner/work/workbench-agent/workbench-agent/tests/test_utils.py, line 654
  def test_ensure_scan_compatibility_git_url_mismatch(mock_params):
file /home/runner/work/workbench-agent/workbench-agent/tests/test_utils.py, line 59
  @pytest.fixture
  def mock_params(mocker): # Use mocker fixture for MagicMock
E       fixture 'mocker' not found
>       available fixtures: cache, capfd, capfdbinary, caplog, capsys, capsysbinary, doctest_namespace, mock_params, mock_workbench, monkeypatch, pytestconfig, record_property, record_testsuite_property, record_xml_attribute, recwarn, tmp_path, tmp_path_factory, tmpdir, tmpdir_factory
>       use 'pytest --fixtures [testpath]' for help on them.

/home/runner/work/workbench-agent/workbench-agent/tests/test_utils.py:59
_________ ERROR at setup of test_ensure_scan_compatibility_scan_vs_git _________
file /home/runner/work/workbench-agent/workbench-agent/tests/test_utils.py, line 663
  def test_ensure_scan_compatibility_scan_vs_git(mock_params):
file /home/runner/work/workbench-agent/workbench-agent/tests/test_utils.py, line 59
  @pytest.fixture
  def mock_params(mocker): # Use mocker fixture for MagicMock
E       fixture 'mocker' not found
>       available fixtures: cache, capfd, capfdbinary, caplog, capsys, capsysbinary, doctest_namespace, mock_params, mock_workbench, monkeypatch, pytestconfig, record_property, record_testsuite_property, record_xml_attribute, recwarn, tmp_path, tmp_path_factory, tmpdir, tmpdir_factory
>       use 'pytest --fixtures [testpath]' for help on them.

/home/runner/work/workbench-agent/workbench-agent/tests/test_utils.py:59
_________ ERROR at setup of test_ensure_scan_compatibility_git_vs_scan _________
file /home/runner/work/workbench-agent/workbench-agent/tests/test_utils.py, line 671
  def test_ensure_scan_compatibility_git_vs_scan(mock_params):
file /home/runner/work/workbench-agent/workbench-agent/tests/test_utils.py, line 59
  @pytest.fixture
  def mock_params(mocker): # Use mocker fixture for MagicMock
E       fixture 'mocker' not found
>       available fixtures: cache, capfd, capfdbinary, caplog, capsys, capsysbinary, doctest_namespace, mock_params, mock_workbench, monkeypatch, pytestconfig, record_property, record_testsuite_property, record_xml_attribute, recwarn, tmp_path, tmp_path_factory, tmpdir, tmpdir_factory
>       use 'pytest --fixtures [testpath]' for help on them.

/home/runner/work/workbench-agent/workbench-agent/tests/test_utils.py:59
______ ERROR at setup of test_ensure_scan_compatibility_no_conflict_scan _______
file /home/runner/work/workbench-agent/workbench-agent/tests/test_utils.py, line 685
  def test_ensure_scan_compatibility_no_conflict_scan(mock_params):
file /home/runner/work/workbench-agent/workbench-agent/tests/test_utils.py, line 59
  @pytest.fixture
  def mock_params(mocker): # Use mocker fixture for MagicMock
E       fixture 'mocker' not found
>       available fixtures: cache, capfd, capfdbinary, caplog, capsys, capsysbinary, doctest_namespace, mock_params, mock_workbench, monkeypatch, pytestconfig, record_property, record_testsuite_property, record_xml_attribute, recwarn, tmp_path, tmp_path_factory, tmpdir, tmpdir_factory
>       use 'pytest --fixtures [testpath]' for help on them.

/home/runner/work/workbench-agent/workbench-agent/tests/test_utils.py:59
_______ ERROR at setup of test_ensure_scan_compatibility_no_conflict_git _______
file /home/runner/work/workbench-agent/workbench-agent/tests/test_utils.py, line 693
  def test_ensure_scan_compatibility_no_conflict_git(mock_params):
file /home/runner/work/workbench-agent/workbench-agent/tests/test_utils.py, line 59
  @pytest.fixture
  def mock_params(mocker): # Use mocker fixture for MagicMock
E       fixture 'mocker' not found
>       available fixtures: cache, capfd, capfdbinary, caplog, capsys, capsysbinary, doctest_namespace, mock_params, mock_workbench, monkeypatch, pytestconfig, record_property, record_testsuite_property, record_xml_attribute, recwarn, tmp_path, tmp_path_factory, tmpdir, tmpdir_factory
>       use 'pytest --fixtures [testpath]' for help on them.

/home/runner/work/workbench-agent/workbench-agent/tests/test_utils.py:59
____ ERROR at setup of test_ensure_scan_compatibility_no_conflict_import_da ____
file /home/runner/work/workbench-agent/workbench-agent/tests/test_utils.py, line 703
  def test_ensure_scan_compatibility_no_conflict_import_da(mock_params):
file /home/runner/work/workbench-agent/workbench-agent/tests/test_utils.py, line 59
  @pytest.fixture
  def mock_params(mocker): # Use mocker fixture for MagicMock
E       fixture 'mocker' not found
>       available fixtures: cache, capfd, capfdbinary, caplog, capsys, capsysbinary, doctest_namespace, mock_params, mock_workbench, monkeypatch, pytestconfig, record_property, record_testsuite_property, record_xml_attribute, recwarn, tmp_path, tmp_path_factory, tmpdir, tmpdir_factory
>       use 'pytest --fixtures [testpath]' for help on them.

/home/runner/work/workbench-agent/workbench-agent/tests/test_utils.py:59
_________________ ERROR at setup of test_send_request_success __________________
file /home/runner/work/workbench-agent/workbench-agent/tests/test_workbench.py, line 52
  def test_send_request_success(workbench_inst, mock_session):
file /home/runner/work/workbench-agent/workbench-agent/tests/test_workbench.py, line 36
  @pytest.fixture
  def workbench_inst(mock_session):
file /home/runner/work/workbench-agent/workbench-agent/tests/test_workbench.py, line 29
  @pytest.fixture
  def mock_session(mocker):
E       fixture 'mocker' not found
>       available fixtures: cache, capfd, capfdbinary, caplog, capsys, capsysbinary, doctest_namespace, mock_session, monkeypatch, pytestconfig, record_property, record_testsuite_property, record_xml_attribute, recwarn, tmp_path, tmp_path_factory, tmpdir, tmpdir_factory, workbench_inst
>       use 'pytest --fixtures [testpath]' for help on them.

/home/runner/work/workbench-agent/workbench-agent/tests/test_workbench.py:29
________________ ERROR at setup of test_send_request_api_error _________________
file /home/runner/work/workbench-agent/workbench-agent/tests/test_workbench.py, line 63
  def test_send_request_api_error(workbench_inst, mock_session):
file /home/runner/work/workbench-agent/workbench-agent/tests/test_workbench.py, line 36
  @pytest.fixture
  def workbench_inst(mock_session):
file /home/runner/work/workbench-agent/workbench-agent/tests/test_workbench.py, line 29
  @pytest.fixture
  def mock_session(mocker):
E       fixture 'mocker' not found
>       available fixtures: cache, capfd, capfdbinary, caplog, capsys, capsysbinary, doctest_namespace, mock_session, monkeypatch, pytestconfig, record_property, record_testsuite_property, record_xml_attribute, recwarn, tmp_path, tmp_path_factory, tmpdir, tmpdir_factory, workbench_inst
>       use 'pytest --fixtures [testpath]' for help on them.

/home/runner/work/workbench-agent/workbench-agent/tests/test_workbench.py:29
______________ ERROR at setup of test_send_request_network_error _______________
file /home/runner/work/workbench-agent/workbench-agent/tests/test_workbench.py, line 73
  def test_send_request_network_error(workbench_inst, mock_session):
file /home/runner/work/workbench-agent/workbench-agent/tests/test_workbench.py, line 36
  @pytest.fixture
  def workbench_inst(mock_session):
file /home/runner/work/workbench-agent/workbench-agent/tests/test_workbench.py, line 29
  @pytest.fixture
  def mock_session(mocker):
E       fixture 'mocker' not found
>       available fixtures: cache, capfd, capfdbinary, caplog, capsys, capsysbinary, doctest_namespace, mock_session, monkeypatch, pytestconfig, record_property, record_testsuite_property, record_xml_attribute, recwarn, tmp_path, tmp_path_factory, tmpdir, tmpdir_factory, workbench_inst
>       use 'pytest --fixtures [testpath]' for help on them.

/home/runner/work/workbench-agent/workbench-agent/tests/test_workbench.py:29
_________________ ERROR at setup of test_send_request_timeout __________________
file /home/runner/work/workbench-agent/workbench-agent/tests/test_workbench.py, line 79
  def test_send_request_timeout(workbench_inst, mock_session):
file /home/runner/work/workbench-agent/workbench-agent/tests/test_workbench.py, line 36
  @pytest.fixture
  def workbench_inst(mock_session):
file /home/runner/work/workbench-agent/workbench-agent/tests/test_workbench.py, line 29
  @pytest.fixture
  def mock_session(mocker):
E       fixture 'mocker' not found
>       available fixtures: cache, capfd, capfdbinary, caplog, capsys, capsysbinary, doctest_namespace, mock_session, monkeypatch, pytestconfig, record_property, record_testsuite_property, record_xml_attribute, recwarn, tmp_path, tmp_path_factory, tmpdir, tmpdir_factory, workbench_inst
>       use 'pytest --fixtures [testpath]' for help on them.

/home/runner/work/workbench-agent/workbench-agent/tests/test_workbench.py:29
___________ ERROR at setup of test_send_request_invalid_json_status ____________
file /home/runner/work/workbench-agent/workbench-agent/tests/test_workbench.py, line 85
  def test_send_request_invalid_json_status(workbench_inst, mock_session):
file /home/runner/work/workbench-agent/workbench-agent/tests/test_workbench.py, line 36
  @pytest.fixture
  def workbench_inst(mock_session):
file /home/runner/work/workbench-agent/workbench-agent/tests/test_workbench.py, line 29
  @pytest.fixture
  def mock_session(mocker):
E       fixture 'mocker' not found
>       available fixtures: cache, capfd, capfdbinary, caplog, capsys, capsysbinary, doctest_namespace, mock_session, monkeypatch, pytestconfig, record_property, record_testsuite_property, record_xml_attribute, recwarn, tmp_path, tmp_path_factory, tmpdir, tmpdir_factory, workbench_inst
>       use 'pytest --fixtures [testpath]' for help on them.

/home/runner/work/workbench-agent/workbench-agent/tests/test_workbench.py:29
______________ ERROR at setup of test_send_request_sync_response _______________
file /home/runner/work/workbench-agent/workbench-agent/tests/test_workbench.py, line 95
  def test_send_request_sync_response(workbench_inst, mock_session):
file /home/runner/work/workbench-agent/workbench-agent/tests/test_workbench.py, line 36
  @pytest.fixture
  def workbench_inst(mock_session):
file /home/runner/work/workbench-agent/workbench-agent/tests/test_workbench.py, line 29
  @pytest.fixture
  def mock_session(mocker):
E       fixture 'mocker' not found
>       available fixtures: cache, capfd, capfdbinary, caplog, capsys, capsysbinary, doctest_namespace, mock_session, monkeypatch, pytestconfig, record_property, record_testsuite_property, record_xml_attribute, recwarn, tmp_path, tmp_path_factory, tmpdir, tmpdir_factory, workbench_inst
>       use 'pytest --fixtures [testpath]' for help on them.

/home/runner/work/workbench-agent/workbench-agent/tests/test_workbench.py:29
________________ ERROR at setup of test_send_request_http_error ________________
file /home/runner/work/workbench-agent/workbench-agent/tests/test_workbench.py, line 106
  def test_send_request_http_error(workbench_inst, mock_session):
file /home/runner/work/workbench-agent/workbench-agent/tests/test_workbench.py, line 36
  @pytest.fixture
  def workbench_inst(mock_session):
file /home/runner/work/workbench-agent/workbench-agent/tests/test_workbench.py, line 29
  @pytest.fixture
  def mock_session(mocker):
E       fixture 'mocker' not found
>       available fixtures: cache, capfd, capfdbinary, caplog, capsys, capsysbinary, doctest_namespace, mock_session, monkeypatch, pytestconfig, record_property, record_testsuite_property, record_xml_attribute, recwarn, tmp_path, tmp_path_factory, tmpdir, tmpdir_factory, workbench_inst
>       use 'pytest --fixtures [testpath]' for help on them.

/home/runner/work/workbench-agent/workbench-agent/tests/test_workbench.py:29
____________ ERROR at setup of test_send_request_json_decode_error _____________
file /home/runner/work/workbench-agent/workbench-agent/tests/test_workbench.py, line 116
  def test_send_request_json_decode_error(workbench_inst, mock_session):
file /home/runner/work/workbench-agent/workbench-agent/tests/test_workbench.py, line 36
  @pytest.fixture
  def workbench_inst(mock_session):
file /home/runner/work/workbench-agent/workbench-agent/tests/test_workbench.py, line 29
  @pytest.fixture
  def mock_session(mocker):
E       fixture 'mocker' not found
>       available fixtures: cache, capfd, capfdbinary, caplog, capsys, capsysbinary, doctest_namespace, mock_session, monkeypatch, pytestconfig, record_property, record_testsuite_property, record_xml_attribute, recwarn, tmp_path, tmp_path_factory, tmpdir, tmpdir_factory, workbench_inst
>       use 'pytest --fixtures [testpath]' for help on them.

/home/runner/work/workbench-agent/workbench-agent/tests/test_workbench.py:29
_____________ ERROR at setup of test_is_status_check_supported_yes _____________
file /home/runner/work/workbench-agent/workbench-agent/tests/test_workbench.py, line 128
  @patch.object(Workbench, '_send_request')
  def test_is_status_check_supported_yes(mock_send, workbench_inst):
file /home/runner/work/workbench-agent/workbench-agent/tests/test_workbench.py, line 36
  @pytest.fixture
  def workbench_inst(mock_session):
file /home/runner/work/workbench-agent/workbench-agent/tests/test_workbench.py, line 29
  @pytest.fixture
  def mock_session(mocker):
E       fixture 'mocker' not found
>       available fixtures: cache, capfd, capfdbinary, caplog, capsys, capsysbinary, doctest_namespace, mock_session, monkeypatch, pytestconfig, record_property, record_testsuite_property, record_xml_attribute, recwarn, tmp_path, tmp_path_factory, tmpdir, tmpdir_factory, workbench_inst
>       use 'pytest --fixtures [testpath]' for help on them.

/home/runner/work/workbench-agent/workbench-agent/tests/test_workbench.py:29
_______ ERROR at setup of test_is_status_check_supported_no_invalid_type _______
file /home/runner/work/workbench-agent/workbench-agent/tests/test_workbench.py, line 134
  @patch.object(Workbench, '_send_request')
  def test_is_status_check_supported_no_invalid_type(mock_send, workbench_inst):
file /home/runner/work/workbench-agent/workbench-agent/tests/test_workbench.py, line 36
  @pytest.fixture
  def workbench_inst(mock_session):
file /home/runner/work/workbench-agent/workbench-agent/tests/test_workbench.py, line 29
  @pytest.fixture
  def mock_session(mocker):
E       fixture 'mocker' not found
>       available fixtures: cache, capfd, capfdbinary, caplog, capsys, capsysbinary, doctest_namespace, mock_session, monkeypatch, pytestconfig, record_property, record_testsuite_property, record_xml_attribute, recwarn, tmp_path, tmp_path_factory, tmpdir, tmpdir_factory, workbench_inst
>       use 'pytest --fixtures [testpath]' for help on them.

/home/runner/work/workbench-agent/workbench-agent/tests/test_workbench.py:29
__________ ERROR at setup of test_is_status_check_supported_api_error __________
file /home/runner/work/workbench-agent/workbench-agent/tests/test_workbench.py, line 144
  @patch.object(Workbench, '_send_request')
  def test_is_status_check_supported_api_error(mock_send, workbench_inst):
file /home/runner/work/workbench-agent/workbench-agent/tests/test_workbench.py, line 36
  @pytest.fixture
  def workbench_inst(mock_session):
file /home/runner/work/workbench-agent/workbench-agent/tests/test_workbench.py, line 29
  @pytest.fixture
  def mock_session(mocker):
E       fixture 'mocker' not found
>       available fixtures: cache, capfd, capfdbinary, caplog, capsys, capsysbinary, doctest_namespace, mock_session, monkeypatch, pytestconfig, record_property, record_testsuite_property, record_xml_attribute, recwarn, tmp_path, tmp_path_factory, tmpdir, tmpdir_factory, workbench_inst
>       use 'pytest --fixtures [testpath]' for help on them.

/home/runner/work/workbench-agent/workbench-agent/tests/test_workbench.py:29
________ ERROR at setup of test_is_status_check_supported_network_error ________
file /home/runner/work/workbench-agent/workbench-agent/tests/test_workbench.py, line 152
  @patch.object(Workbench, '_send_request')
  def test_is_status_check_supported_network_error(mock_send, workbench_inst):
file /home/runner/work/workbench-agent/workbench-agent/tests/test_workbench.py, line 36
  @pytest.fixture
  def workbench_inst(mock_session):
file /home/runner/work/workbench-agent/workbench-agent/tests/test_workbench.py, line 29
  @pytest.fixture
  def mock_session(mocker):
E       fixture 'mocker' not found
>       available fixtures: cache, capfd, capfdbinary, caplog, capsys, capsysbinary, doctest_namespace, mock_session, monkeypatch, pytestconfig, record_property, record_testsuite_property, record_xml_attribute, recwarn, tmp_path, tmp_path_factory, tmpdir, tmpdir_factory, workbench_inst
>       use 'pytest --fixtures [testpath]' for help on them.

/home/runner/work/workbench-agent/workbench-agent/tests/test_workbench.py:29
_______________ ERROR at setup of test_wait_for_process_success ________________
file /home/runner/work/workbench-agent/workbench-agent/tests/test_workbench.py, line 160
  def test_wait_for_process_success(workbench_inst, mocker):
file /home/runner/work/workbench-agent/workbench-agent/tests/test_workbench.py, line 36
  @pytest.fixture
  def workbench_inst(mock_session):
file /home/runner/work/workbench-agent/workbench-agent/tests/test_workbench.py, line 29
  @pytest.fixture
  def mock_session(mocker):
E       fixture 'mocker' not found
>       available fixtures: cache, capfd, capfdbinary, caplog, capsys, capsysbinary, doctest_namespace, mock_session, monkeypatch, pytestconfig, record_property, record_testsuite_property, record_xml_attribute, recwarn, tmp_path, tmp_path_factory, tmpdir, tmpdir_factory, workbench_inst
>       use 'pytest --fixtures [testpath]' for help on them.

/home/runner/work/workbench-agent/workbench-agent/tests/test_workbench.py:29
_______________ ERROR at setup of test_wait_for_process_timeout ________________
file /home/runner/work/workbench-agent/workbench-agent/tests/test_workbench.py, line 178
  def test_wait_for_process_timeout(workbench_inst, mocker):
file /home/runner/work/workbench-agent/workbench-agent/tests/test_workbench.py, line 36
  @pytest.fixture
  def workbench_inst(mock_session):
file /home/runner/work/workbench-agent/workbench-agent/tests/test_workbench.py, line 29
  @pytest.fixture
  def mock_session(mocker):
E       fixture 'mocker' not found
>       available fixtures: cache, capfd, capfdbinary, caplog, capsys, capsysbinary, doctest_namespace, mock_session, monkeypatch, pytestconfig, record_property, record_testsuite_property, record_xml_attribute, recwarn, tmp_path, tmp_path_factory, tmpdir, tmpdir_factory, workbench_inst
>       use 'pytest --fixtures [testpath]' for help on them.

/home/runner/work/workbench-agent/workbench-agent/tests/test_workbench.py:29
_______________ ERROR at setup of test_wait_for_process_failure ________________
file /home/runner/work/workbench-agent/workbench-agent/tests/test_workbench.py, line 191
  def test_wait_for_process_failure(workbench_inst, mocker):
file /home/runner/work/workbench-agent/workbench-agent/tests/test_workbench.py, line 36
  @pytest.fixture
  def workbench_inst(mock_session):
file /home/runner/work/workbench-agent/workbench-agent/tests/test_workbench.py, line 29
  @pytest.fixture
  def mock_session(mocker):
E       fixture 'mocker' not found
>       available fixtures: cache, capfd, capfdbinary, caplog, capsys, capsysbinary, doctest_namespace, mock_session, monkeypatch, pytestconfig, record_property, record_testsuite_property, record_xml_attribute, recwarn, tmp_path, tmp_path_factory, tmpdir, tmpdir_factory, workbench_inst
>       use 'pytest --fixtures [testpath]' for help on them.

/home/runner/work/workbench-agent/workbench-agent/tests/test_workbench.py:29
_________ ERROR at setup of test_wait_for_process_check_fails_retries __________
file /home/runner/work/workbench-agent/workbench-agent/tests/test_workbench.py, line 204
  def test_wait_for_process_check_fails_retries(workbench_inst, mocker):
file /home/runner/work/workbench-agent/workbench-agent/tests/test_workbench.py, line 36
  @pytest.fixture
  def workbench_inst(mock_session):
file /home/runner/work/workbench-agent/workbench-agent/tests/test_workbench.py, line 29
  @pytest.fixture
  def mock_session(mocker):
E       fixture 'mocker' not found
>       available fixtures: cache, capfd, capfdbinary, caplog, capsys, capsysbinary, doctest_namespace, mock_session, monkeypatch, pytestconfig, record_property, record_testsuite_property, record_xml_attribute, recwarn, tmp_path, tmp_path_factory, tmpdir, tmpdir_factory, workbench_inst
>       use 'pytest --fixtures [testpath]' for help on them.

/home/runner/work/workbench-agent/workbench-agent/tests/test_workbench.py:29
____________ ERROR at setup of test_wait_for_process_accessor_fails ____________
file /home/runner/work/workbench-agent/workbench-agent/tests/test_workbench.py, line 222
  def test_wait_for_process_accessor_fails(workbench_inst, mocker):
file /home/runner/work/workbench-agent/workbench-agent/tests/test_workbench.py, line 36
  @pytest.fixture
  def workbench_inst(mock_session):
file /home/runner/work/workbench-agent/workbench-agent/tests/test_workbench.py, line 29
  @pytest.fixture
  def mock_session(mocker):
E       fixture 'mocker' not found
>       available fixtures: cache, capfd, capfdbinary, caplog, capsys, capsysbinary, doctest_namespace, mock_session, monkeypatch, pytestconfig, record_property, record_testsuite_property, record_xml_attribute, recwarn, tmp_path, tmp_path_factory, tmpdir, tmpdir_factory, workbench_inst
>       use 'pytest --fixtures [testpath]' for help on them.

/home/runner/work/workbench-agent/workbench-agent/tests/test_workbench.py:29
_______________ ERROR at setup of test_upload_files_file_success _______________
file /home/runner/work/workbench-agent/workbench-agent/tests/test_workbench.py, line 238
  @patch('os.path.exists', return_value=True)
  @patch('os.path.isdir', return_value=False) # Simulate file
  @patch('os.path.getsize', return_value=1024) # Small file
  @patch('builtins.open', new_callable=mock_open, read_data=b'file data')
  @patch('requests.Session.post') # Patch post on the session instance
  def test_upload_files_file_success(mock_post, mock_open_file, mock_getsize, mock_isdir, mock_exists, workbench_inst):
file /home/runner/work/workbench-agent/workbench-agent/tests/test_workbench.py, line 36
  @pytest.fixture
  def workbench_inst(mock_session):
file /home/runner/work/workbench-agent/workbench-agent/tests/test_workbench.py, line 29
  @pytest.fixture
  def mock_session(mocker):
E       fixture 'mocker' not found
>       available fixtures: cache, capfd, capfdbinary, caplog, capsys, capsysbinary, doctest_namespace, mock_session, monkeypatch, pytestconfig, record_property, record_testsuite_property, record_xml_attribute, recwarn, tmp_path, tmp_path_factory, tmpdir, tmpdir_factory, workbench_inst
>       use 'pytest --fixtures [testpath]' for help on them.

/home/runner/work/workbench-agent/workbench-agent/tests/test_workbench.py:29
_______________ ERROR at setup of test_upload_files_dir_success ________________
file /home/runner/work/workbench-agent/workbench-agent/tests/test_workbench.py, line 263
  @patch('os.path.exists', return_value=True)
  @patch('os.path.isdir', return_value=True) # Simulate directory
  @patch('tempfile.gettempdir', return_value='/tmp')
  @patch('shutil.make_archive', return_value='/tmp/dir_temp.zip') # Mock archive creation
  @patch('os.path.getsize', return_value=1024) # Small archive
  @patch('builtins.open', new_callable=mock_open, read_data=b'zip data')
  @patch('requests.Session.post')
  @patch('os.remove') # Mock cleanup
  def test_upload_files_dir_success(mock_remove, mock_post, mock_open_file, mock_getsize, mock_make_archive, mock_tempdir, mock_isdir, mock_exists, workbench_inst):
file /home/runner/work/workbench-agent/workbench-agent/tests/test_workbench.py, line 36
  @pytest.fixture
  def workbench_inst(mock_session):
file /home/runner/work/workbench-agent/workbench-agent/tests/test_workbench.py, line 29
  @pytest.fixture
  def mock_session(mocker):
E       fixture 'mocker' not found
>       available fixtures: cache, capfd, capfdbinary, caplog, capsys, capsysbinary, doctest_namespace, mock_session, monkeypatch, pytestconfig, record_property, record_testsuite_property, record_xml_attribute, recwarn, tmp_path, tmp_path_factory, tmpdir, tmpdir_factory, workbench_inst
>       use 'pytest --fixtures [testpath]' for help on them.

/home/runner/work/workbench-agent/workbench-agent/tests/test_workbench.py:29
_____________ ERROR at setup of test_upload_files_chunked_success ______________
file /home/runner/work/workbench-agent/workbench-agent/tests/test_workbench.py, line 287
  @patch('os.path.exists', return_value=True)
  @patch('os.path.isdir', return_value=False)
  @patch('os.path.getsize', return_value=20 * 1024 * 1024) # Large file
  @patch('builtins.open', new_callable=mock_open, read_data=b'large data chunk')
  @patch.object(Workbench, '_read_in_chunks', return_value=[b'chunk1', b'chunk2']) # Mock chunk reading
  @patch.object(Workbench, '_chunked_upload_request') # Mock the chunk upload helper
  def test_upload_files_chunked_success(mock_chunk_req, mock_read_chunks, mock_open_file, mock_getsize, mock_isdir, mock_exists, workbench_inst):
file /home/runner/work/workbench-agent/workbench-agent/tests/test_workbench.py, line 36
  @pytest.fixture
  def workbench_inst(mock_session):
file /home/runner/work/workbench-agent/workbench-agent/tests/test_workbench.py, line 29
  @pytest.fixture
  def mock_session(mocker):
E       fixture 'mocker' not found
>       available fixtures: cache, capfd, capfdbinary, caplog, capsys, capsysbinary, doctest_namespace, mock_session, monkeypatch, pytestconfig, record_property, record_testsuite_property, record_xml_attribute, recwarn, tmp_path, tmp_path_factory, tmpdir, tmpdir_factory, workbench_inst
>       use 'pytest --fixtures [testpath]' for help on them.

/home/runner/work/workbench-agent/workbench-agent/tests/test_workbench.py:29
________________ ERROR at setup of test_upload_files_da_import _________________
file /home/runner/work/workbench-agent/workbench-agent/tests/test_workbench.py, line 311
  @patch('os.path.exists', return_value=True)
  @patch('os.path.isdir', return_value=False)
  @patch('os.path.getsize', return_value=1024)
  @patch('builtins.open', new_callable=mock_open, read_data=b'file data')
  @patch('requests.Session.post')
  def test_upload_files_da_import(mock_post, mock_open_file, mock_getsize, mock_isdir, mock_exists, workbench_inst):
file /home/runner/work/workbench-agent/workbench-agent/tests/test_workbench.py, line 36
  @pytest.fixture
  def workbench_inst(mock_session):
file /home/runner/work/workbench-agent/workbench-agent/tests/test_workbench.py, line 29
  @pytest.fixture
  def mock_session(mocker):
E       fixture 'mocker' not found
>       available fixtures: cache, capfd, capfdbinary, caplog, capsys, capsysbinary, doctest_namespace, mock_session, monkeypatch, pytestconfig, record_property, record_testsuite_property, record_xml_attribute, recwarn, tmp_path, tmp_path_factory, tmpdir, tmpdir_factory, workbench_inst
>       use 'pytest --fixtures [testpath]' for help on them.

/home/runner/work/workbench-agent/workbench-agent/tests/test_workbench.py:29
______________ ERROR at setup of test_upload_files_network_error _______________
file /home/runner/work/workbench-agent/workbench-agent/tests/test_workbench.py, line 334
  @patch('os.path.exists', return_value=True)
  @patch('os.path.isdir', return_value=False)
  @patch('os.path.getsize', return_value=1024)
  @patch('builtins.open', new_callable=mock_open, read_data=b'file data')
  @patch('requests.Session.post', side_effect=NetworkError("Network Error"))
  def test_upload_files_network_error(mock_post, mock_open_file, mock_getsize, mock_isdir, mock_exists, workbench_inst):
file /home/runner/work/workbench-agent/workbench-agent/tests/test_workbench.py, line 36
  @pytest.fixture
  def workbench_inst(mock_session):
file /home/runner/work/workbench-agent/workbench-agent/tests/test_workbench.py, line 29
  @pytest.fixture
  def mock_session(mocker):
E       fixture 'mocker' not found
>       available fixtures: cache, capfd, capfdbinary, caplog, capsys, capsysbinary, doctest_namespace, mock_session, monkeypatch, pytestconfig, record_property, record_testsuite_property, record_xml_attribute, recwarn, tmp_path, tmp_path_factory, tmpdir, tmpdir_factory, workbench_inst
>       use 'pytest --fixtures [testpath]' for help on them.

/home/runner/work/workbench-agent/workbench-agent/tests/test_workbench.py:29
_______________ ERROR at setup of test_get_pending_files_success _______________
file /home/runner/work/workbench-agent/workbench-agent/tests/test_workbench.py, line 344
  @patch.object(Workbench, '_send_request')
  def test_get_pending_files_success(mock_send, workbench_inst):
file /home/runner/work/workbench-agent/workbench-agent/tests/test_workbench.py, line 36
  @pytest.fixture
  def workbench_inst(mock_session):
file /home/runner/work/workbench-agent/workbench-agent/tests/test_workbench.py, line 29
  @pytest.fixture
  def mock_session(mocker):
E       fixture 'mocker' not found
>       available fixtures: cache, capfd, capfdbinary, caplog, capsys, capsysbinary, doctest_namespace, mock_session, monkeypatch, pytestconfig, record_property, record_testsuite_property, record_xml_attribute, recwarn, tmp_path, tmp_path_factory, tmpdir, tmpdir_factory, workbench_inst
>       use 'pytest --fixtures [testpath]' for help on them.

/home/runner/work/workbench-agent/workbench-agent/tests/test_workbench.py:29
________________ ERROR at setup of test_get_pending_files_empty ________________
file /home/runner/work/workbench-agent/workbench-agent/tests/test_workbench.py, line 351
  @patch.object(Workbench, '_send_request')
  def test_get_pending_files_empty(mock_send, workbench_inst):
file /home/runner/work/workbench-agent/workbench-agent/tests/test_workbench.py, line 36
  @pytest.fixture
  def workbench_inst(mock_session):
file /home/runner/work/workbench-agent/workbench-agent/tests/test_workbench.py, line 29
  @pytest.fixture
  def mock_session(mocker):
E       fixture 'mocker' not found
>       available fixtures: cache, capfd, capfdbinary, caplog, capsys, capsysbinary, doctest_namespace, mock_session, monkeypatch, pytestconfig, record_property, record_testsuite_property, record_xml_attribute, recwarn, tmp_path, tmp_path_factory, tmpdir, tmpdir_factory, workbench_inst
>       use 'pytest --fixtures [testpath]' for help on them.

/home/runner/work/workbench-agent/workbench-agent/tests/test_workbench.py:29
______________ ERROR at setup of test_get_pending_files_api_error ______________
file /home/runner/work/workbench-agent/workbench-agent/tests/test_workbench.py, line 357
  @patch.object(Workbench, '_send_request')
  def test_get_pending_files_api_error(mock_send, workbench_inst):
file /home/runner/work/workbench-agent/workbench-agent/tests/test_workbench.py, line 36
  @pytest.fixture
  def workbench_inst(mock_session):
file /home/runner/work/workbench-agent/workbench-agent/tests/test_workbench.py, line 29
  @pytest.fixture
  def mock_session(mocker):
E       fixture 'mocker' not found
>       available fixtures: cache, capfd, capfdbinary, caplog, capsys, capsysbinary, doctest_namespace, mock_session, monkeypatch, pytestconfig, record_property, record_testsuite_property, record_xml_attribute, recwarn, tmp_path, tmp_path_factory, tmpdir, tmpdir_factory, workbench_inst
>       use 'pytest --fixtures [testpath]' for help on them.

/home/runner/work/workbench-agent/workbench-agent/tests/test_workbench.py:29
________ ERROR at setup of test_get_scan_identified_components_success _________
file /home/runner/work/workbench-agent/workbench-agent/tests/test_workbench.py, line 364
  @patch.object(Workbench, '_send_request')
  def test_get_scan_identified_components_success(mock_send, workbench_inst):
file /home/runner/work/workbench-agent/workbench-agent/tests/test_workbench.py, line 36
  @pytest.fixture
  def workbench_inst(mock_session):
file /home/runner/work/workbench-agent/workbench-agent/tests/test_workbench.py, line 29
  @pytest.fixture
  def mock_session(mocker):
E       fixture 'mocker' not found
>       available fixtures: cache, capfd, capfdbinary, caplog, capsys, capsysbinary, doctest_namespace, mock_session, monkeypatch, pytestconfig, record_property, record_testsuite_property, record_xml_attribute, recwarn, tmp_path, tmp_path_factory, tmpdir, tmpdir_factory, workbench_inst
>       use 'pytest --fixtures [testpath]' for help on them.

/home/runner/work/workbench-agent/workbench-agent/tests/test_workbench.py:29
__________ ERROR at setup of test_get_scan_identified_components_fail __________
file /home/runner/work/workbench-agent/workbench-agent/tests/test_workbench.py, line 375
  @patch.object(Workbench, '_send_request', side_effect=ApiError("API failed"))
  def test_get_scan_identified_components_fail(mock_send, workbench_inst):
file /home/runner/work/workbench-agent/workbench-agent/tests/test_workbench.py, line 36
  @pytest.fixture
  def workbench_inst(mock_session):
file /home/runner/work/workbench-agent/workbench-agent/tests/test_workbench.py, line 29
  @pytest.fixture
  def mock_session(mocker):
E       fixture 'mocker' not found
>       available fixtures: cache, capfd, capfdbinary, caplog, capsys, capsysbinary, doctest_namespace, mock_session, monkeypatch, pytestconfig, record_property, record_testsuite_property, record_xml_attribute, recwarn, tmp_path, tmp_path_factory, tmpdir, tmpdir_factory, workbench_inst
>       use 'pytest --fixtures [testpath]' for help on them.

/home/runner/work/workbench-agent/workbench-agent/tests/test_workbench.py:29
________ ERROR at setup of test_get_dependency_analysis_results_success ________
file /home/runner/work/workbench-agent/workbench-agent/tests/test_workbench.py, line 380
  @patch.object(Workbench, '_send_request')
  def test_get_dependency_analysis_results_success(mock_send, workbench_inst):
file /home/runner/work/workbench-agent/workbench-agent/tests/test_workbench.py, line 36
  @pytest.fixture
  def workbench_inst(mock_session):
file /home/runner/work/workbench-agent/workbench-agent/tests/test_workbench.py, line 29
  @pytest.fixture
  def mock_session(mocker):
E       fixture 'mocker' not found
>       available fixtures: cache, capfd, capfdbinary, caplog, capsys, capsysbinary, doctest_namespace, mock_session, monkeypatch, pytestconfig, record_property, record_testsuite_property, record_xml_attribute, recwarn, tmp_path, tmp_path_factory, tmpdir, tmpdir_factory, workbench_inst
>       use 'pytest --fixtures [testpath]' for help on them.

/home/runner/work/workbench-agent/workbench-agent/tests/test_workbench.py:29
________ ERROR at setup of test_get_dependency_analysis_results_not_run ________
file /home/runner/work/workbench-agent/workbench-agent/tests/test_workbench.py, line 386
  @patch.object(Workbench, '_send_request')
  def test_get_dependency_analysis_results_not_run(mock_send, workbench_inst):
file /home/runner/work/workbench-agent/workbench-agent/tests/test_workbench.py, line 36
  @pytest.fixture
  def workbench_inst(mock_session):
file /home/runner/work/workbench-agent/workbench-agent/tests/test_workbench.py, line 29
  @pytest.fixture
  def mock_session(mocker):
E       fixture 'mocker' not found
>       available fixtures: cache, capfd, capfdbinary, caplog, capsys, capsysbinary, doctest_namespace, mock_session, monkeypatch, pytestconfig, record_property, record_testsuite_property, record_xml_attribute, recwarn, tmp_path, tmp_path_factory, tmpdir, tmpdir_factory, workbench_inst
>       use 'pytest --fixtures [testpath]' for help on them.

/home/runner/work/workbench-agent/workbench-agent/tests/test_workbench.py:29
______ ERROR at setup of test_get_dependency_analysis_results_other_error ______
file /home/runner/work/workbench-agent/workbench-agent/tests/test_workbench.py, line 393
  @patch.object(Workbench, '_send_request')
  def test_get_dependency_analysis_results_other_error(mock_send, workbench_inst):
file /home/runner/work/workbench-agent/workbench-agent/tests/test_workbench.py, line 36
  @pytest.fixture
  def workbench_inst(mock_session):
file /home/runner/work/workbench-agent/workbench-agent/tests/test_workbench.py, line 29
  @pytest.fixture
  def mock_session(mocker):
E       fixture 'mocker' not found
>       available fixtures: cache, capfd, capfdbinary, caplog, capsys, capsysbinary, doctest_namespace, mock_session, monkeypatch, pytestconfig, record_property, record_testsuite_property, record_xml_attribute, recwarn, tmp_path, tmp_path_factory, tmpdir, tmpdir_factory, workbench_inst
>       use 'pytest --fixtures [testpath]' for help on them.

/home/runner/work/workbench-agent/workbench-agent/tests/test_workbench.py:29
________________ ERROR at setup of test_create_project_success _________________
file /home/runner/work/workbench-agent/workbench-agent/tests/test_workbench.py, line 402
  @patch.object(Workbench, '_send_request')
  def test_create_project_success(mock_send, workbench_inst):
file /home/runner/work/workbench-agent/workbench-agent/tests/test_workbench.py, line 36
  @pytest.fixture
  def workbench_inst(mock_session):
file /home/runner/work/workbench-agent/workbench-agent/tests/test_workbench.py, line 29
  @pytest.fixture
  def mock_session(mocker):
E       fixture 'mocker' not found
>       available fixtures: cache, capfd, capfdbinary, caplog, capsys, capsysbinary, doctest_namespace, mock_session, monkeypatch, pytestconfig, record_property, record_testsuite_property, record_xml_attribute, recwarn, tmp_path, tmp_path_factory, tmpdir, tmpdir_factory, workbench_inst
>       use 'pytest --fixtures [testpath]' for help on them.

/home/runner/work/workbench-agent/workbench-agent/tests/test_workbench.py:29
_____________ ERROR at setup of test_create_project_already_exists _____________
file /home/runner/work/workbench-agent/workbench-agent/tests/test_workbench.py, line 412
  @patch.object(Workbench, '_send_request')
  @patch.object(Workbench, 'list_projects') # Mock list_projects for the fallback
  def test_create_project_already_exists(mock_list_proj, mock_send, workbench_inst):
file /home/runner/work/workbench-agent/workbench-agent/tests/test_workbench.py, line 36
  @pytest.fixture
  def workbench_inst(mock_session):
file /home/runner/work/workbench-agent/workbench-agent/tests/test_workbench.py, line 29
  @pytest.fixture
  def mock_session(mocker):
E       fixture 'mocker' not found
>       available fixtures: cache, capfd, capfdbinary, caplog, capsys, capsysbinary, doctest_namespace, mock_session, monkeypatch, pytestconfig, record_property, record_testsuite_property, record_xml_attribute, recwarn, tmp_path, tmp_path_factory, tmpdir, tmpdir_factory, workbench_inst
>       use 'pytest --fixtures [testpath]' for help on them.

/home/runner/work/workbench-agent/workbench-agent/tests/test_workbench.py:29
______________ ERROR at setup of test_create_webapp_scan_success _______________
file /home/runner/work/workbench-agent/workbench-agent/tests/test_workbench.py, line 427
  @patch.object(Workbench, '_send_request')
  def test_create_webapp_scan_success(mock_send, workbench_inst):
file /home/runner/work/workbench-agent/workbench-agent/tests/test_workbench.py, line 36
  @pytest.fixture
  def workbench_inst(mock_session):
file /home/runner/work/workbench-agent/workbench-agent/tests/test_workbench.py, line 29
  @pytest.fixture
  def mock_session(mocker):
E       fixture 'mocker' not found
>       available fixtures: cache, capfd, capfdbinary, caplog, capsys, capsysbinary, doctest_namespace, mock_session, monkeypatch, pytestconfig, record_property, record_testsuite_property, record_xml_attribute, recwarn, tmp_path, tmp_path_factory, tmpdir, tmpdir_factory, workbench_inst
>       use 'pytest --fixtures [testpath]' for help on them.

/home/runner/work/workbench-agent/workbench-agent/tests/test_workbench.py:29
___________ ERROR at setup of test_create_webapp_scan_already_exists ___________
file /home/runner/work/workbench-agent/workbench-agent/tests/test_workbench.py, line 439
  @patch.object(Workbench, '_send_request', return_value={"status": "0", "error": "Scan code already exists: EXISTING_SCAN"})
  def test_create_webapp_scan_already_exists(mock_send, workbench_inst):
file /home/runner/work/workbench-agent/workbench-agent/tests/test_workbench.py, line 36
  @pytest.fixture
  def workbench_inst(mock_session):
file /home/runner/work/workbench-agent/workbench-agent/tests/test_workbench.py, line 29
  @pytest.fixture
  def mock_session(mocker):
E       fixture 'mocker' not found
>       available fixtures: cache, capfd, capfdbinary, caplog, capsys, capsysbinary, doctest_namespace, mock_session, monkeypatch, pytestconfig, record_property, record_testsuite_property, record_xml_attribute, recwarn, tmp_path, tmp_path_factory, tmpdir, tmpdir_factory, workbench_inst
>       use 'pytest --fixtures [testpath]' for help on them.

/home/runner/work/workbench-agent/workbench-agent/tests/test_workbench.py:29
=================================== FAILURES ===================================
___________________________ test_parse_scan_command ____________________________

mock_exists = <MagicMock name='exists' id='140634667194832'>

    @patch('sys.argv', ['workbench-agent', '--api-url', 'X', '--api-user', 'Y', '--api-token', 'Z', 'scan', '--project-name', 'P', '--scan-name', 'S', '--path', '.'])
    @patch('os.path.exists', return_value=True) # Mock path validation
    def test_parse_scan_command(mock_exists):
        args = parse_cmdline_args()
        assert args.command == 'scan'
        assert args.project_name == 'P'
        assert args.scan_name == 'S'
        assert args.path == '.'
>       assert args.api_url == 'X/api.php' # Check URL fix
E       AssertionError: assert 'X' == 'X/api.php'
E         
E         - X/api.php
E         + X

tests/test_cli.py:39: AssertionError
__________________________ test_parse_evaluate_gates ___________________________

    @patch('sys.argv', ['workbench-agent', '--api-url', 'X', '--api-user', 'Y', '--api-token', 'Z', 'evaluate-gates', '--project-name', 'P', '--scan-name', 'S', '--policy-check', '--show-files'])
    def test_parse_evaluate_gates():
>       args = parse_cmdline_args()

tests/test_cli.py:93: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
/opt/hostedtoolcache/Python/3.11.12/x64/lib/python3.11/site-packages/workbench_agent/cli.py:267: in parse_cmdline_args
    args = parser.parse_args()
/opt/hostedtoolcache/Python/3.11.12/x64/lib/python3.11/argparse.py:1877: in parse_args
    self.error(msg % ' '.join(argv))
/opt/hostedtoolcache/Python/3.11.12/x64/lib/python3.11/argparse.py:2640: in error
    self.exit(2, _('%(prog)s: error: %(message)s\n') % args)
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = ArgumentParser(prog='workbench-agent', usage=None, description='FossID Workbench Agent - A command-line tool for inter...h FossID Workbench.', formatter_class=<class 'argparse.RawTextHelpFormatter'>, conflict_handler='error', add_help=True)
status = 2
message = 'workbench-agent: error: unrecognized arguments: --policy-check --show-files\n'

    def exit(self, status=0, message=None):
        if message:
            self._print_message(message, _sys.stderr)
>       _sys.exit(status)
E       SystemExit: 2

/opt/hostedtoolcache/Python/3.11.12/x64/lib/python3.11/argparse.py:2627: SystemExit
----------------------------- Captured stderr call -----------------------------
usage: workbench-agent [-h] --api-url URL --api-user USER --api-token TOKEN
                       [--log {DEBUG,INFO,WARNING,ERROR}]
                       COMMAND ...
workbench-agent: error: unrecognized arguments: --policy-check --show-files
________________________ test_parse_flags_and_log_level ________________________

mock_exists = <MagicMock name='exists' id='140634649610000'>

    @patch('sys.argv', ['workbench-agent', '--api-url', 'X', '--api-user', 'Y', '--api-token', 'Z', 'scan', '--project-name', 'P', '--scan-name', 'S', '--path', '.', '--log', 'DEBUG', '--delta-scan', '--autoid-pending-ids'])
    @patch('os.path.exists', return_value=True) # Mock path validation
    def test_parse_flags_and_log_level(mock_exists):
>       args = parse_cmdline_args()

tests/test_cli.py:105: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
/opt/hostedtoolcache/Python/3.11.12/x64/lib/python3.11/site-packages/workbench_agent/cli.py:267: in parse_cmdline_args
    args = parser.parse_args()
/opt/hostedtoolcache/Python/3.11.12/x64/lib/python3.11/argparse.py:1877: in parse_args
    self.error(msg % ' '.join(argv))
/opt/hostedtoolcache/Python/3.11.12/x64/lib/python3.11/argparse.py:2640: in error
    self.exit(2, _('%(prog)s: error: %(message)s\n') % args)
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = ArgumentParser(prog='workbench-agent', usage=None, description='FossID Workbench Agent - A command-line tool for inter...h FossID Workbench.', formatter_class=<class 'argparse.RawTextHelpFormatter'>, conflict_handler='error', add_help=True)
status = 2
message = 'workbench-agent: error: unrecognized arguments: --log DEBUG\n'

    def exit(self, status=0, message=None):
        if message:
            self._print_message(message, _sys.stderr)
>       _sys.exit(status)
E       SystemExit: 2

/opt/hostedtoolcache/Python/3.11.12/x64/lib/python3.11/argparse.py:2627: SystemExit
----------------------------- Captured stderr call -----------------------------
usage: workbench-agent [-h] --api-url URL --api-user USER --api-token TOKEN
                       [--log {DEBUG,INFO,WARNING,ERROR}]
                       COMMAND ...
workbench-agent: error: unrecognized arguments: --log DEBUG
________________ test_parse_validation_id_reuse_missing_source _________________

mock_exists = <MagicMock name='exists' id='140634653031312'>

    @patch('sys.argv', ['workbench-agent', '--api-url', 'X', '--api-user', 'Y', '--api-token', 'Z', 'scan', '--project-name', 'P', '--scan-name', 'S', '--path', '.', '--id-reuse', '--id-reuse-type', 'project'])
    @patch('os.path.exists', return_value=True)
    def test_parse_validation_id_reuse_missing_source(mock_exists):
        with pytest.raises(ValidationError, match="ID reuse source project/scan name is required"):
>            parse_cmdline_args()

tests/test_cli.py:121: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
/opt/hostedtoolcache/Python/3.11.12/x64/lib/python3.11/site-packages/workbench_agent/cli.py:270: in parse_cmdline_args
    parser.error(f"--id-reuse-source is required when --id-reuse-type is '{args.id_reuse_type}'.")
/opt/hostedtoolcache/Python/3.11.12/x64/lib/python3.11/argparse.py:2640: in error
    self.exit(2, _('%(prog)s: error: %(message)s\n') % args)
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = ArgumentParser(prog='workbench-agent', usage=None, description='FossID Workbench Agent - A command-line tool for inter...h FossID Workbench.', formatter_class=<class 'argparse.RawTextHelpFormatter'>, conflict_handler='error', add_help=True)
status = 2
message = "workbench-agent: error: --id-reuse-source is required when --id-reuse-type is 'project'.\n"

    def exit(self, status=0, message=None):
        if message:
            self._print_message(message, _sys.stderr)
>       _sys.exit(status)
E       SystemExit: 2

/opt/hostedtoolcache/Python/3.11.12/x64/lib/python3.11/argparse.py:2627: SystemExit
----------------------------- Captured stderr call -----------------------------
usage: workbench-agent [-h] --api-url URL --api-user USER --api-token TOKEN
                       [--log {DEBUG,INFO,WARNING,ERROR}]
                       COMMAND ...
workbench-agent: error: --id-reuse-source is required when --id-reuse-type is 'project'.
________________ test_parse_validation_download_missing_project ________________

    @patch('sys.argv', ['workbench-agent', '--api-url', 'X', '--api-user', 'Y', '--api-token', 'Z', 'download-reports', '--report-scope', 'project'])
    def test_parse_validation_download_missing_project():
>       with pytest.raises(ValidationError, match="Project name is required for project scope report"):
E       Failed: DID NOT RAISE <class 'workbench_agent.exceptions.ValidationError'>

tests/test_cli.py:125: Failed
_________________ test_parse_validation_download_missing_scan __________________

    @patch('sys.argv', ['workbench-agent', '--api-url', 'X', '--api-user', 'Y', '--api-token', 'Z', 'download-reports', '--report-scope', 'scan'])
    def test_parse_validation_download_missing_scan():
>       with pytest.raises(ValidationError, match="Scan name is required for scan scope report"):
E       Failed: DID NOT RAISE <class 'workbench_agent.exceptions.ValidationError'>

tests/test_cli.py:130: Failed
_____________ test_parse_validation_show_results_missing_show_flag _____________

    @patch('sys.argv', ['workbench-agent', '--api-url', 'X', '--api-user', 'Y', '--api-token', 'Z', 'show-results', '--project-name', 'P', '--scan-name', 'S'])
    def test_parse_validation_show_results_missing_show_flag():
        with pytest.raises(ValidationError, match="At least one '--show-*' flag must be provided"):
>            parse_cmdline_args()

tests/test_cli.py:136: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
/opt/hostedtoolcache/Python/3.11.12/x64/lib/python3.11/site-packages/workbench_agent/cli.py:276: in parse_cmdline_args
    parser.error("The 'show-results' command requires at least one --show-* flag.")
/opt/hostedtoolcache/Python/3.11.12/x64/lib/python3.11/argparse.py:2640: in error
    self.exit(2, _('%(prog)s: error: %(message)s\n') % args)
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = ArgumentParser(prog='workbench-agent', usage=None, description='FossID Workbench Agent - A command-line tool for inter...h FossID Workbench.', formatter_class=<class 'argparse.RawTextHelpFormatter'>, conflict_handler='error', add_help=True)
status = 2
message = "workbench-agent: error: The 'show-results' command requires at least one --show-* flag.\n"

    def exit(self, status=0, message=None):
        if message:
            self._print_message(message, _sys.stderr)
>       _sys.exit(status)
E       SystemExit: 2

/opt/hostedtoolcache/Python/3.11.12/x64/lib/python3.11/argparse.py:2627: SystemExit
----------------------------- Captured stderr call -----------------------------
usage: workbench-agent [-h] --api-url URL --api-user USER --api-token TOKEN
                       [--log {DEBUG,INFO,WARNING,ERROR}]
                       COMMAND ...
workbench-agent: error: The 'show-results' command requires at least one --show-* flag.
________________ test_parse_validation_scan_git_branch_and_tag _________________

self = ArgumentParser(prog='workbench-agent scan-git', usage=None, description='Clones a Branch or Tag directly from your Git...erver and scans it.', formatter_class=<class 'argparse.RawTextHelpFormatter'>, conflict_handler='error', add_help=True)
args = ['--project-name', 'PG', '--scan-name', 'SG', '--git-url', 'http://git.com', ...]
namespace = Namespace(project_name='PG', scan_name='SG', git_url='http://git.com', git_depth=None, git_branch='dev', git_tag=None,..._dependencies=False, show_scan_metrics=False, show_policy_warnings=False, show_vulnerabilities=False, path_result=None)

    def parse_known_args(self, args=None, namespace=None):
        if args is None:
            # args default to the system args
            args = _sys.argv[1:]
        else:
            # make sure that args are mutable
            args = list(args)
    
        # default Namespace built from parser defaults
        if namespace is None:
            namespace = Namespace()
    
        # add any action defaults that aren't present
        for action in self._actions:
            if action.dest is not SUPPRESS:
                if not hasattr(namespace, action.dest):
                    if action.default is not SUPPRESS:
                        setattr(namespace, action.dest, action.default)
    
        # add any parser defaults that aren't present
        for dest in self._defaults:
            if not hasattr(namespace, dest):
                setattr(namespace, dest, self._defaults[dest])
    
        # parse the arguments and exit if there are any errors
        if self.exit_on_error:
            try:
>               namespace, args = self._parse_known_args(args, namespace)

/opt/hostedtoolcache/Python/3.11.12/x64/lib/python3.11/argparse.py:1907: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
/opt/hostedtoolcache/Python/3.11.12/x64/lib/python3.11/argparse.py:2128: in _parse_known_args
    start_index = consume_optional(start_index)
/opt/hostedtoolcache/Python/3.11.12/x64/lib/python3.11/argparse.py:2068: in consume_optional
    take_action(action, args, option_string)
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

action = _StoreAction(option_strings=['--git-tag'], dest='git_tag', nargs=None, const=None, default=None, type=<class 'str'>, choices=None, required=False, help='The git tag to scan.', metavar='TAG')
argument_strings = ['v1'], option_string = '--git-tag'

    def take_action(action, argument_strings, option_string=None):
        seen_actions.add(action)
        argument_values = self._get_values(action, argument_strings)
    
        # error if this argument is not allowed with other previously
        # seen arguments, assuming that actions that use the default
        # value don't really count as "present"
        if argument_values is not action.default:
            seen_non_default_actions.add(action)
            for conflict_action in action_conflicts.get(action, []):
                if conflict_action in seen_non_default_actions:
                    msg = _('not allowed with argument %s')
                    action_name = _get_action_name(conflict_action)
>                   raise ArgumentError(action, msg % action_name)
E                   argparse.ArgumentError: argument --git-tag: not allowed with argument --git-branch

/opt/hostedtoolcache/Python/3.11.12/x64/lib/python3.11/argparse.py:1978: ArgumentError

During handling of the above exception, another exception occurred:

    @patch('sys.argv', ['workbench-agent', '--api-url', 'X', '--api-user', 'Y', '--api-token', 'Z', 'scan-git', '--project-name', 'PG', '--scan-name', 'SG', '--git-url', 'http://git.com', '--git-branch', 'dev', '--git-tag', 'v1'])
    def test_parse_validation_scan_git_branch_and_tag():
        with pytest.raises(ValidationError, match="Cannot specify both git branch and tag"):
>            parse_cmdline_args()

tests/test_cli.py:141: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
/opt/hostedtoolcache/Python/3.11.12/x64/lib/python3.11/site-packages/workbench_agent/cli.py:267: in parse_cmdline_args
    args = parser.parse_args()
/opt/hostedtoolcache/Python/3.11.12/x64/lib/python3.11/argparse.py:1874: in parse_args
    args, argv = self.parse_known_args(args, namespace)
/opt/hostedtoolcache/Python/3.11.12/x64/lib/python3.11/argparse.py:1907: in parse_known_args
    namespace, args = self._parse_known_args(args, namespace)
/opt/hostedtoolcache/Python/3.11.12/x64/lib/python3.11/argparse.py:2110: in _parse_known_args
    positionals_end_index = consume_positionals(start_index)
/opt/hostedtoolcache/Python/3.11.12/x64/lib/python3.11/argparse.py:2087: in consume_positionals
    take_action(action, args)
/opt/hostedtoolcache/Python/3.11.12/x64/lib/python3.11/argparse.py:1983: in take_action
    action(self, namespace, argument_values, option_string)
/opt/hostedtoolcache/Python/3.11.12/x64/lib/python3.11/argparse.py:1246: in __call__
    subnamespace, arg_strings = parser.parse_known_args(arg_strings, None)
/opt/hostedtoolcache/Python/3.11.12/x64/lib/python3.11/argparse.py:1909: in parse_known_args
    self.error(str(err))
/opt/hostedtoolcache/Python/3.11.12/x64/lib/python3.11/argparse.py:2640: in error
    self.exit(2, _('%(prog)s: error: %(message)s\n') % args)
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = ArgumentParser(prog='workbench-agent scan-git', usage=None, description='Clones a Branch or Tag directly from your Git...erver and scans it.', formatter_class=<class 'argparse.RawTextHelpFormatter'>, conflict_handler='error', add_help=True)
status = 2
message = 'workbench-agent scan-git: error: argument --git-tag: not allowed with argument --git-branch\n'

    def exit(self, status=0, message=None):
        if message:
            self._print_message(message, _sys.stderr)
>       _sys.exit(status)
E       SystemExit: 2

/opt/hostedtoolcache/Python/3.11.12/x64/lib/python3.11/argparse.py:2627: SystemExit
----------------------------- Captured stderr call -----------------------------
usage: workbench-agent scan-git [-h] --project-name NAME --scan-name NAME
                                --git-url GIT_URL [--git-depth DEPTH]
                                (--git-branch BRANCH | --git-tag TAG)
                                [--limit LIMIT] [--sensitivity SENSITIVITY]
                                [--autoid-file-licenses]
                                [--autoid-file-copyrights]
                                [--autoid-pending-ids] [--delta-scan]
                                [--id-reuse]
                                [--id-reuse-type {any,only_me,project,scan}]
                                [--id-reuse-source NAME]
                                [--run-dependency-analysis]
                                [--scan-number-of-tries SCAN_NUMBER_OF_TRIES]
                                [--scan-wait-time SCAN_WAIT_TIME]
                                [--show-licenses] [--show-components]
                                [--show-dependencies] [--show-scan-metrics]
                                [--show-policy-warnings]
                                [--show-vulnerabilities] [--path-result PATH]
workbench-agent scan-git: error: argument --git-tag: not allowed with argument --git-branch
__________________ test_parse_validation_scan_git_missing_ref __________________

    @patch('sys.argv', ['workbench-agent', '--api-url', 'X', '--api-user', 'Y', '--api-token', 'Z', 'scan-git', '--project-name', 'PG', '--scan-name', 'SG', '--git-url', 'http://git.com'])
    def test_parse_validation_scan_git_missing_ref():
        with pytest.raises(ValidationError, match="Must specify either git branch or tag"):
>            parse_cmdline_args()

tests/test_cli.py:146: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
/opt/hostedtoolcache/Python/3.11.12/x64/lib/python3.11/site-packages/workbench_agent/cli.py:267: in parse_cmdline_args
    args = parser.parse_args()
/opt/hostedtoolcache/Python/3.11.12/x64/lib/python3.11/argparse.py:1874: in parse_args
    args, argv = self.parse_known_args(args, namespace)
/opt/hostedtoolcache/Python/3.11.12/x64/lib/python3.11/argparse.py:1907: in parse_known_args
    namespace, args = self._parse_known_args(args, namespace)
/opt/hostedtoolcache/Python/3.11.12/x64/lib/python3.11/argparse.py:2110: in _parse_known_args
    positionals_end_index = consume_positionals(start_index)
/opt/hostedtoolcache/Python/3.11.12/x64/lib/python3.11/argparse.py:2087: in consume_positionals
    take_action(action, args)
/opt/hostedtoolcache/Python/3.11.12/x64/lib/python3.11/argparse.py:1983: in take_action
    action(self, namespace, argument_values, option_string)
/opt/hostedtoolcache/Python/3.11.12/x64/lib/python3.11/argparse.py:1246: in __call__
    subnamespace, arg_strings = parser.parse_known_args(arg_strings, None)
/opt/hostedtoolcache/Python/3.11.12/x64/lib/python3.11/argparse.py:1907: in parse_known_args
    namespace, args = self._parse_known_args(args, namespace)
/opt/hostedtoolcache/Python/3.11.12/x64/lib/python3.11/argparse.py:2172: in _parse_known_args
    self.error(msg % ' '.join(names))
/opt/hostedtoolcache/Python/3.11.12/x64/lib/python3.11/argparse.py:2640: in error
    self.exit(2, _('%(prog)s: error: %(message)s\n') % args)
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = ArgumentParser(prog='workbench-agent scan-git', usage=None, description='Clones a Branch or Tag directly from your Git...erver and scans it.', formatter_class=<class 'argparse.RawTextHelpFormatter'>, conflict_handler='error', add_help=True)
status = 2
message = 'workbench-agent scan-git: error: one of the arguments --git-branch --git-tag is required\n'

    def exit(self, status=0, message=None):
        if message:
            self._print_message(message, _sys.stderr)
>       _sys.exit(status)
E       SystemExit: 2

/opt/hostedtoolcache/Python/3.11.12/x64/lib/python3.11/argparse.py:2627: SystemExit
----------------------------- Captured stderr call -----------------------------
usage: workbench-agent scan-git [-h] --project-name NAME --scan-name NAME
                                --git-url GIT_URL [--git-depth DEPTH]
                                (--git-branch BRANCH | --git-tag TAG)
                                [--limit LIMIT] [--sensitivity SENSITIVITY]
                                [--autoid-file-licenses]
                                [--autoid-file-copyrights]
                                [--autoid-pending-ids] [--delta-scan]
                                [--id-reuse]
                                [--id-reuse-type {any,only_me,project,scan}]
                                [--id-reuse-source NAME]
                                [--run-dependency-analysis]
                                [--scan-number-of-tries SCAN_NUMBER_OF_TRIES]
                                [--scan-wait-time SCAN_WAIT_TIME]
                                [--show-licenses] [--show-components]
                                [--show-dependencies] [--show-scan-metrics]
                                [--show-policy-warnings]
                                [--show-vulnerabilities] [--path-result PATH]
workbench-agent scan-git: error: one of the arguments --git-branch --git-tag is required
_________________ test_parse_validation_scan_non_existent_path _________________

mock_exists = <MagicMock name='exists' id='140634653397200'>

    @patch('sys.argv', ['workbench-agent', '--api-url', 'X', '--api-user', 'Y', '--api-token', 'Z', 'scan', '--project-name', 'P', '--scan-name', 'S', '--path', '/non/existent/path'])
    @patch('os.path.exists', return_value=False) # Mock os.path.exists
    def test_parse_validation_scan_non_existent_path(mock_exists):
>       with pytest.raises(ValidationError, match="Path does not exist: /non/existent/path"):
E       Failed: DID NOT RAISE <class 'workbench_agent.exceptions.ValidationError'>

tests/test_cli.py:151: Failed
__________________ test_parse_validation_missing_credentials ___________________

mock_exists = <MagicMock name='exists' id='140634686773712'>

    @patch.dict(os.environ, {"WORKBENCH_URL": "", "WORKBENCH_USER": "", "WORKBENCH_TOKEN": ""}, clear=True)
    @patch('sys.argv', ['workbench-agent', 'scan', '--project-name', 'P', '--scan-name', 'S', '--path', '.'])
    @patch('os.path.exists', return_value=True)
    def test_parse_validation_missing_credentials(mock_exists):
        with pytest.raises(ValidationError, match="API URL, user, and token must be provided"):
>            parse_cmdline_args()

tests/test_cli.py:161: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
/opt/hostedtoolcache/Python/3.11.12/x64/lib/python3.11/site-packages/workbench_agent/cli.py:267: in parse_cmdline_args
    args = parser.parse_args()
/opt/hostedtoolcache/Python/3.11.12/x64/lib/python3.11/argparse.py:1874: in parse_args
    args, argv = self.parse_known_args(args, namespace)
/opt/hostedtoolcache/Python/3.11.12/x64/lib/python3.11/argparse.py:1907: in parse_known_args
    namespace, args = self._parse_known_args(args, namespace)
/opt/hostedtoolcache/Python/3.11.12/x64/lib/python3.11/argparse.py:2156: in _parse_known_args
    self.error(_('the following arguments are required: %s') %
/opt/hostedtoolcache/Python/3.11.12/x64/lib/python3.11/argparse.py:2640: in error
    self.exit(2, _('%(prog)s: error: %(message)s\n') % args)
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = ArgumentParser(prog='workbench-agent', usage=None, description='FossID Workbench Agent - A command-line tool for inter...h FossID Workbench.', formatter_class=<class 'argparse.RawTextHelpFormatter'>, conflict_handler='error', add_help=True)
status = 2
message = 'workbench-agent: error: the following arguments are required: --api-url, --api-user, --api-token\n'

    def exit(self, status=0, message=None):
        if message:
            self._print_message(message, _sys.stderr)
>       _sys.exit(status)
E       SystemExit: 2

/opt/hostedtoolcache/Python/3.11.12/x64/lib/python3.11/argparse.py:2627: SystemExit
----------------------------- Captured stderr call -----------------------------
usage: workbench-agent [-h] --api-url URL --api-user USER --api-token TOKEN
                       [--log {DEBUG,INFO,WARNING,ERROR}]
                       COMMAND ...
workbench-agent: error: the following arguments are required: --api-url, --api-user, --api-token
_____________________ test_parse_credentials_from_env_vars _____________________

mock_exists = <MagicMock name='exists' id='140634652058192'>

    @patch.dict(os.environ, {"WORKBENCH_URL": "http://env.com", "WORKBENCH_USER": "env_user", "WORKBENCH_TOKEN": "env_token"}, clear=True)
    @patch('sys.argv', ['workbench-agent', 'scan', '--project-name', 'P', '--scan-name', 'S', '--path', '.']) # No credential args
    @patch('os.path.exists', return_value=True) # Assume path exists
    def test_parse_credentials_from_env_vars(mock_exists):
        try:
            args = parse_cmdline_args()
>           assert args.api_url == 'http://env.com/api.php' # Check URL fix too
E           AssertionError: assert 'http://env.com' == 'http://env.com/api.php'
E             
E             - http://env.com/api.php
E             ?               --------
E             + http://env.com

tests/test_cli.py:170: AssertionError
__________________________ test_parse_args_no_command __________________________

    @patch('sys.argv', ['workbench-agent', '--api-url', 'X', '--api-user', 'Y', '--api-token', 'Z']) # No command
    def test_parse_args_no_command():
        # Argparse itself might exit or raise, depending on setup.
        # Assuming custom validation catches this first.
        with pytest.raises(ValidationError, match="No command specified"):
>           parse_cmdline_args()

tests/test_cli.py:183: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
/opt/hostedtoolcache/Python/3.11.12/x64/lib/python3.11/site-packages/workbench_agent/cli.py:267: in parse_cmdline_args
    args = parser.parse_args()
/opt/hostedtoolcache/Python/3.11.12/x64/lib/python3.11/argparse.py:1874: in parse_args
    args, argv = self.parse_known_args(args, namespace)
/opt/hostedtoolcache/Python/3.11.12/x64/lib/python3.11/argparse.py:1907: in parse_known_args
    namespace, args = self._parse_known_args(args, namespace)
/opt/hostedtoolcache/Python/3.11.12/x64/lib/python3.11/argparse.py:2156: in _parse_known_args
    self.error(_('the following arguments are required: %s') %
/opt/hostedtoolcache/Python/3.11.12/x64/lib/python3.11/argparse.py:2640: in error
    self.exit(2, _('%(prog)s: error: %(message)s\n') % args)
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = ArgumentParser(prog='workbench-agent', usage=None, description='FossID Workbench Agent - A command-line tool for inter...h FossID Workbench.', formatter_class=<class 'argparse.RawTextHelpFormatter'>, conflict_handler='error', add_help=True)
status = 2
message = 'workbench-agent: error: the following arguments are required: COMMAND\n'

    def exit(self, status=0, message=None):
        if message:
            self._print_message(message, _sys.stderr)
>       _sys.exit(status)
E       SystemExit: 2

/opt/hostedtoolcache/Python/3.11.12/x64/lib/python3.11/argparse.py:2627: SystemExit
----------------------------- Captured stderr call -----------------------------
usage: workbench-agent [-h] --api-url URL --api-user USER --api-token TOKEN
                       [--log {DEBUG,INFO,WARNING,ERROR}]
                       COMMAND ...
workbench-agent: error: the following arguments are required: COMMAND
_________________________ test_parse_args_scan_no_path _________________________

    @patch('sys.argv', ['workbench-agent', '--api-url', 'X', '--api-user', 'Y', '--api-token', 'Z', 'scan', '--project-name', 'P', '--scan-name', 'S']) # No path
    def test_parse_args_scan_no_path():
        with pytest.raises(ValidationError, match="Path is required for scan command"):
>           parse_cmdline_args()

tests/test_cli.py:188: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
/opt/hostedtoolcache/Python/3.11.12/x64/lib/python3.11/site-packages/workbench_agent/cli.py:267: in parse_cmdline_args
    args = parser.parse_args()
/opt/hostedtoolcache/Python/3.11.12/x64/lib/python3.11/argparse.py:1874: in parse_args
    args, argv = self.parse_known_args(args, namespace)
/opt/hostedtoolcache/Python/3.11.12/x64/lib/python3.11/argparse.py:1907: in parse_known_args
    namespace, args = self._parse_known_args(args, namespace)
/opt/hostedtoolcache/Python/3.11.12/x64/lib/python3.11/argparse.py:2110: in _parse_known_args
    positionals_end_index = consume_positionals(start_index)
/opt/hostedtoolcache/Python/3.11.12/x64/lib/python3.11/argparse.py:2087: in consume_positionals
    take_action(action, args)
/opt/hostedtoolcache/Python/3.11.12/x64/lib/python3.11/argparse.py:1983: in take_action
    action(self, namespace, argument_values, option_string)
/opt/hostedtoolcache/Python/3.11.12/x64/lib/python3.11/argparse.py:1246: in __call__
    subnamespace, arg_strings = parser.parse_known_args(arg_strings, None)
/opt/hostedtoolcache/Python/3.11.12/x64/lib/python3.11/argparse.py:1907: in parse_known_args
    namespace, args = self._parse_known_args(args, namespace)
/opt/hostedtoolcache/Python/3.11.12/x64/lib/python3.11/argparse.py:2156: in _parse_known_args
    self.error(_('the following arguments are required: %s') %
/opt/hostedtoolcache/Python/3.11.12/x64/lib/python3.11/argparse.py:2640: in error
    self.exit(2, _('%(prog)s: error: %(message)s\n') % args)
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = ArgumentParser(prog='workbench-agent scan', usage=None, description='Run a standard scan by uploading a local director... file to Workbench.', formatter_class=<class 'argparse.RawTextHelpFormatter'>, conflict_handler='error', add_help=True)
status = 2
message = 'workbench-agent scan: error: the following arguments are required: --path\n'

    def exit(self, status=0, message=None):
        if message:
            self._print_message(message, _sys.stderr)
>       _sys.exit(status)
E       SystemExit: 2

/opt/hostedtoolcache/Python/3.11.12/x64/lib/python3.11/argparse.py:2627: SystemExit
----------------------------- Captured stderr call -----------------------------
usage: workbench-agent scan [-h] --project-name NAME --scan-name NAME --path
                            PATH
                            [--recursively-extract-archives | --no-recursively-extract-archives]
                            [--jar-file-extraction | --no-jar-file-extraction]
                            [--limit LIMIT] [--sensitivity SENSITIVITY]
                            [--autoid-file-licenses]
                            [--autoid-file-copyrights] [--autoid-pending-ids]
                            [--delta-scan] [--id-reuse]
                            [--id-reuse-type {any,only_me,project,scan}]
                            [--id-reuse-source NAME]
                            [--run-dependency-analysis]
                            [--scan-number-of-tries SCAN_NUMBER_OF_TRIES]
                            [--scan-wait-time SCAN_WAIT_TIME]
                            [--show-licenses] [--show-components]
                            [--show-dependencies] [--show-scan-metrics]
                            [--show-policy-warnings] [--show-vulnerabilities]
                            [--path-result PATH]
workbench-agent scan: error: the following arguments are required: --path
_______________________ test_parse_args_scan_git_no_url ________________________

    @patch('sys.argv', ['workbench-agent', '--api-url', 'X', '--api-user', 'Y', '--api-token', 'Z', 'scan-git', '--project-name', 'P', '--scan-name', 'S', '--git-branch', 'main']) # No git url
    def test_parse_args_scan_git_no_url():
        with pytest.raises(ValidationError, match="Git URL is required for scan-git command"):
>           parse_cmdline_args()

tests/test_cli.py:193: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
/opt/hostedtoolcache/Python/3.11.12/x64/lib/python3.11/site-packages/workbench_agent/cli.py:267: in parse_cmdline_args
    args = parser.parse_args()
/opt/hostedtoolcache/Python/3.11.12/x64/lib/python3.11/argparse.py:1874: in parse_args
    args, argv = self.parse_known_args(args, namespace)
/opt/hostedtoolcache/Python/3.11.12/x64/lib/python3.11/argparse.py:1907: in parse_known_args
    namespace, args = self._parse_known_args(args, namespace)
/opt/hostedtoolcache/Python/3.11.12/x64/lib/python3.11/argparse.py:2110: in _parse_known_args
    positionals_end_index = consume_positionals(start_index)
/opt/hostedtoolcache/Python/3.11.12/x64/lib/python3.11/argparse.py:2087: in consume_positionals
    take_action(action, args)
/opt/hostedtoolcache/Python/3.11.12/x64/lib/python3.11/argparse.py:1983: in take_action
    action(self, namespace, argument_values, option_string)
/opt/hostedtoolcache/Python/3.11.12/x64/lib/python3.11/argparse.py:1246: in __call__
    subnamespace, arg_strings = parser.parse_known_args(arg_strings, None)
/opt/hostedtoolcache/Python/3.11.12/x64/lib/python3.11/argparse.py:1907: in parse_known_args
    namespace, args = self._parse_known_args(args, namespace)
/opt/hostedtoolcache/Python/3.11.12/x64/lib/python3.11/argparse.py:2156: in _parse_known_args
    self.error(_('the following arguments are required: %s') %
/opt/hostedtoolcache/Python/3.11.12/x64/lib/python3.11/argparse.py:2640: in error
    self.exit(2, _('%(prog)s: error: %(message)s\n') % args)
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = ArgumentParser(prog='workbench-agent scan-git', usage=None, description='Clones a Branch or Tag directly from your Git...erver and scans it.', formatter_class=<class 'argparse.RawTextHelpFormatter'>, conflict_handler='error', add_help=True)
status = 2
message = 'workbench-agent scan-git: error: the following arguments are required: --git-url\n'

    def exit(self, status=0, message=None):
        if message:
            self._print_message(message, _sys.stderr)
>       _sys.exit(status)
E       SystemExit: 2

/opt/hostedtoolcache/Python/3.11.12/x64/lib/python3.11/argparse.py:2627: SystemExit
----------------------------- Captured stderr call -----------------------------
usage: workbench-agent scan-git [-h] --project-name NAME --scan-name NAME
                                --git-url GIT_URL [--git-depth DEPTH]
                                (--git-branch BRANCH | --git-tag TAG)
                                [--limit LIMIT] [--sensitivity SENSITIVITY]
                                [--autoid-file-licenses]
                                [--autoid-file-copyrights]
                                [--autoid-pending-ids] [--delta-scan]
                                [--id-reuse]
                                [--id-reuse-type {any,only_me,project,scan}]
                                [--id-reuse-source NAME]
                                [--run-dependency-analysis]
                                [--scan-number-of-tries SCAN_NUMBER_OF_TRIES]
                                [--scan-wait-time SCAN_WAIT_TIME]
                                [--show-licenses] [--show-components]
                                [--show-dependencies] [--show-scan-metrics]
                                [--show-policy-warnings]
                                [--show-vulnerabilities] [--path-result PATH]
workbench-agent scan-git: error: the following arguments are required: --git-url
______________________ test_parse_args_import_da_no_path _______________________

    @patch('sys.argv', ['workbench-agent', '--api-url', 'X', '--api-user', 'Y', '--api-token', 'Z', 'import-da', '--project-name', 'P', '--scan-name', 'S']) # No path
    def test_parse_args_import_da_no_path():
        with pytest.raises(ValidationError, match="Path is required for import-da command"):
>           parse_cmdline_args()

tests/test_cli.py:198: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
/opt/hostedtoolcache/Python/3.11.12/x64/lib/python3.11/site-packages/workbench_agent/cli.py:267: in parse_cmdline_args
    args = parser.parse_args()
/opt/hostedtoolcache/Python/3.11.12/x64/lib/python3.11/argparse.py:1874: in parse_args
    args, argv = self.parse_known_args(args, namespace)
/opt/hostedtoolcache/Python/3.11.12/x64/lib/python3.11/argparse.py:1907: in parse_known_args
    namespace, args = self._parse_known_args(args, namespace)
/opt/hostedtoolcache/Python/3.11.12/x64/lib/python3.11/argparse.py:2110: in _parse_known_args
    positionals_end_index = consume_positionals(start_index)
/opt/hostedtoolcache/Python/3.11.12/x64/lib/python3.11/argparse.py:2087: in consume_positionals
    take_action(action, args)
/opt/hostedtoolcache/Python/3.11.12/x64/lib/python3.11/argparse.py:1983: in take_action
    action(self, namespace, argument_values, option_string)
/opt/hostedtoolcache/Python/3.11.12/x64/lib/python3.11/argparse.py:1246: in __call__
    subnamespace, arg_strings = parser.parse_known_args(arg_strings, None)
/opt/hostedtoolcache/Python/3.11.12/x64/lib/python3.11/argparse.py:1907: in parse_known_args
    namespace, args = self._parse_known_args(args, namespace)
/opt/hostedtoolcache/Python/3.11.12/x64/lib/python3.11/argparse.py:2156: in _parse_known_args
    self.error(_('the following arguments are required: %s') %
/opt/hostedtoolcache/Python/3.11.12/x64/lib/python3.11/argparse.py:2640: in error
    self.exit(2, _('%(prog)s: error: %(message)s\n') % args)
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = ArgumentParser(prog='workbench-agent import-da', usage=None, description='Import Dependency Analysis results from an a...r-result.json file.', formatter_class=<class 'argparse.RawTextHelpFormatter'>, conflict_handler='error', add_help=True)
status = 2
message = 'workbench-agent import-da: error: the following arguments are required: --path\n'

    def exit(self, status=0, message=None):
        if message:
            self._print_message(message, _sys.stderr)
>       _sys.exit(status)
E       SystemExit: 2

/opt/hostedtoolcache/Python/3.11.12/x64/lib/python3.11/argparse.py:2627: SystemExit
----------------------------- Captured stderr call -----------------------------
usage: workbench-agent import-da [-h] --project-name NAME --scan-name NAME
                                 --path PATH
                                 [--scan-number-of-tries SCAN_NUMBER_OF_TRIES]
                                 [--scan-wait-time SCAN_WAIT_TIME]
                                 [--show-licenses] [--show-components]
                                 [--show-dependencies] [--show-scan-metrics]
                                 [--show-policy-warnings]
                                 [--show-vulnerabilities] [--path-result PATH]
workbench-agent import-da: error: the following arguments are required: --path
______________________________ test_main_success _______________________________

    def test_main_success():
        # Use the helper, but don't raise an exception
        # Need to mock the return value of the handler if it's checked (e.g., evaluate-gates)
>       with patch("workbench_agent.cli.handle_scan", return_value=None) as mock_handle_scan, \
             patch("workbench_agent.cli.Workbench"), \
             patch("workbench_agent.cli.parse_cmdline_args") as mock_parse:

tests/test_cli.py:233: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
/opt/hostedtoolcache/Python/3.11.12/x64/lib/python3.11/unittest/mock.py:1446: in __enter__
    original, local = self.get_original()
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = <unittest.mock._patch object at 0x7fe80e8182d0>

    def get_original(self):
        target = self.getter()
        name = self.attribute
    
        original = DEFAULT
        local = False
    
        try:
            original = target.__dict__[name]
        except (AttributeError, KeyError):
            original = getattr(target, name, DEFAULT)
        else:
            local = True
    
        if name in _builtins and isinstance(target, ModuleType):
            self.create = True
    
        if not self.create and original is DEFAULT:
>           raise AttributeError(
                "%s does not have the attribute %r" % (target, name)
            )
E           AttributeError: <module 'workbench_agent.cli' from '/opt/hostedtoolcache/Python/3.11.12/x64/lib/python3.11/site-packages/workbench_agent/cli.py'> does not have the attribute 'handle_scan'

/opt/hostedtoolcache/Python/3.11.12/x64/lib/python3.11/unittest/mock.py:1419: AttributeError
__________________________ test_main_validation_error __________________________

    def test_main_validation_error():
        # Simulate parse_cmdline_args raising the error
        with patch("workbench_agent.cli.parse_cmdline_args", side_effect=ValidationError("Invalid args")):
>           result = main()

tests/test_cli.py:245: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
/opt/hostedtoolcache/Python/3.11.12/x64/lib/python3.11/site-packages/workbench_agent/main.py:37: in main
    params = parse_cmdline_args()
/opt/hostedtoolcache/Python/3.11.12/x64/lib/python3.11/site-packages/workbench_agent/cli.py:267: in parse_cmdline_args
    args = parser.parse_args()
/opt/hostedtoolcache/Python/3.11.12/x64/lib/python3.11/argparse.py:1874: in parse_args
    args, argv = self.parse_known_args(args, namespace)
/opt/hostedtoolcache/Python/3.11.12/x64/lib/python3.11/argparse.py:1907: in parse_known_args
    namespace, args = self._parse_known_args(args, namespace)
/opt/hostedtoolcache/Python/3.11.12/x64/lib/python3.11/argparse.py:2156: in _parse_known_args
    self.error(_('the following arguments are required: %s') %
/opt/hostedtoolcache/Python/3.11.12/x64/lib/python3.11/argparse.py:2640: in error
    self.exit(2, _('%(prog)s: error: %(message)s\n') % args)
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = ArgumentParser(prog='pytest', usage=None, description='FossID Workbench Agent - A command-line tool for interacting with FossID Workbench.', formatter_class=<class 'argparse.RawTextHelpFormatter'>, conflict_handler='error', add_help=True)
status = 2
message = 'pytest: error: the following arguments are required: --api-url, --api-user, --api-token, COMMAND\n'

    def exit(self, status=0, message=None):
        if message:
            self._print_message(message, _sys.stderr)
>       _sys.exit(status)
E       SystemExit: 2

/opt/hostedtoolcache/Python/3.11.12/x64/lib/python3.11/argparse.py:2627: SystemExit
----------------------------- Captured stdout call -----------------------------

Total Execution Time: 0 seconds
----------------------------- Captured stderr call -----------------------------
usage: pytest [-h] --api-url URL --api-user USER --api-token TOKEN
              [--log {DEBUG,INFO,WARNING,ERROR}]
              COMMAND ...
pytest: error: the following arguments are required: --api-url, --api-user, --api-token, COMMAND
________________________ test_main_configuration_error _________________________

    def test_main_configuration_error():
>       assert run_main_with_exception(ConfigurationError("Bad config")) == 1

tests/test_cli.py:249: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
/opt/hostedtoolcache/Python/3.11.12/x64/lib/python3.11/unittest/mock.py:1375: in patched
    with self.decoration_helper(patched,
/opt/hostedtoolcache/Python/3.11.12/x64/lib/python3.11/contextlib.py:137: in __enter__
    return next(self.gen)
/opt/hostedtoolcache/Python/3.11.12/x64/lib/python3.11/unittest/mock.py:1357: in decoration_helper
    arg = exit_stack.enter_context(patching)
/opt/hostedtoolcache/Python/3.11.12/x64/lib/python3.11/contextlib.py:517: in enter_context
    result = _enter(cm)
/opt/hostedtoolcache/Python/3.11.12/x64/lib/python3.11/unittest/mock.py:1446: in __enter__
    original, local = self.get_original()
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = <unittest.mock._patch object at 0x7fe80e7faa50>

    def get_original(self):
        target = self.getter()
        name = self.attribute
    
        original = DEFAULT
        local = False
    
        try:
            original = target.__dict__[name]
        except (AttributeError, KeyError):
            original = getattr(target, name, DEFAULT)
        else:
            local = True
    
        if name in _builtins and isinstance(target, ModuleType):
            self.create = True
    
        if not self.create and original is DEFAULT:
>           raise AttributeError(
                "%s does not have the attribute %r" % (target, name)
            )
E           AttributeError: <module 'workbench_agent.cli' from '/opt/hostedtoolcache/Python/3.11.12/x64/lib/python3.11/site-packages/workbench_agent/cli.py'> does not have the attribute 'handle_download_reports'

/opt/hostedtoolcache/Python/3.11.12/x64/lib/python3.11/unittest/mock.py:1419: AttributeError
________________________ test_main_authentication_error ________________________

    def test_main_authentication_error():
>       assert run_main_with_exception(AuthenticationError("Bad token")) == 1

tests/test_cli.py:252: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
/opt/hostedtoolcache/Python/3.11.12/x64/lib/python3.11/unittest/mock.py:1375: in patched
    with self.decoration_helper(patched,
/opt/hostedtoolcache/Python/3.11.12/x64/lib/python3.11/contextlib.py:137: in __enter__
    return next(self.gen)
/opt/hostedtoolcache/Python/3.11.12/x64/lib/python3.11/unittest/mock.py:1357: in decoration_helper
    arg = exit_stack.enter_context(patching)
/opt/hostedtoolcache/Python/3.11.12/x64/lib/python3.11/contextlib.py:517: in enter_context
    result = _enter(cm)
/opt/hostedtoolcache/Python/3.11.12/x64/lib/python3.11/unittest/mock.py:1446: in __enter__
    original, local = self.get_original()
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = <unittest.mock._patch object at 0x7fe80e7faa50>

    def get_original(self):
        target = self.getter()
        name = self.attribute
    
        original = DEFAULT
        local = False
    
        try:
            original = target.__dict__[name]
        except (AttributeError, KeyError):
            original = getattr(target, name, DEFAULT)
        else:
            local = True
    
        if name in _builtins and isinstance(target, ModuleType):
            self.create = True
    
        if not self.create and original is DEFAULT:
>           raise AttributeError(
                "%s does not have the attribute %r" % (target, name)
            )
E           AttributeError: <module 'workbench_agent.cli' from '/opt/hostedtoolcache/Python/3.11.12/x64/lib/python3.11/site-packages/workbench_agent/cli.py'> does not have the attribute 'handle_download_reports'

/opt/hostedtoolcache/Python/3.11.12/x64/lib/python3.11/unittest/mock.py:1419: AttributeError
_________________________ test_main_project_not_found __________________________

    def test_main_project_not_found():
>       assert run_main_with_exception(ProjectNotFoundError("Proj X")) == 1

tests/test_cli.py:255: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
/opt/hostedtoolcache/Python/3.11.12/x64/lib/python3.11/unittest/mock.py:1375: in patched
    with self.decoration_helper(patched,
/opt/hostedtoolcache/Python/3.11.12/x64/lib/python3.11/contextlib.py:137: in __enter__
    return next(self.gen)
/opt/hostedtoolcache/Python/3.11.12/x64/lib/python3.11/unittest/mock.py:1357: in decoration_helper
    arg = exit_stack.enter_context(patching)
/opt/hostedtoolcache/Python/3.11.12/x64/lib/python3.11/contextlib.py:517: in enter_context
    result = _enter(cm)
/opt/hostedtoolcache/Python/3.11.12/x64/lib/python3.11/unittest/mock.py:1446: in __enter__
    original, local = self.get_original()
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = <unittest.mock._patch object at 0x7fe80e7faa50>

    def get_original(self):
        target = self.getter()
        name = self.attribute
    
        original = DEFAULT
        local = False
    
        try:
            original = target.__dict__[name]
        except (AttributeError, KeyError):
            original = getattr(target, name, DEFAULT)
        else:
            local = True
    
        if name in _builtins and isinstance(target, ModuleType):
            self.create = True
    
        if not self.create and original is DEFAULT:
>           raise AttributeError(
                "%s does not have the attribute %r" % (target, name)
            )
E           AttributeError: <module 'workbench_agent.cli' from '/opt/hostedtoolcache/Python/3.11.12/x64/lib/python3.11/site-packages/workbench_agent/cli.py'> does not have the attribute 'handle_download_reports'

/opt/hostedtoolcache/Python/3.11.12/x64/lib/python3.11/unittest/mock.py:1419: AttributeError
___________________________ test_main_scan_not_found ___________________________

    def test_main_scan_not_found():
>       assert run_main_with_exception(ScanNotFoundError("Scan Y")) == 1

tests/test_cli.py:258: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
/opt/hostedtoolcache/Python/3.11.12/x64/lib/python3.11/unittest/mock.py:1375: in patched
    with self.decoration_helper(patched,
/opt/hostedtoolcache/Python/3.11.12/x64/lib/python3.11/contextlib.py:137: in __enter__
    return next(self.gen)
/opt/hostedtoolcache/Python/3.11.12/x64/lib/python3.11/unittest/mock.py:1357: in decoration_helper
    arg = exit_stack.enter_context(patching)
/opt/hostedtoolcache/Python/3.11.12/x64/lib/python3.11/contextlib.py:517: in enter_context
    result = _enter(cm)
/opt/hostedtoolcache/Python/3.11.12/x64/lib/python3.11/unittest/mock.py:1446: in __enter__
    original, local = self.get_original()
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = <unittest.mock._patch object at 0x7fe80e7faa50>

    def get_original(self):
        target = self.getter()
        name = self.attribute
    
        original = DEFAULT
        local = False
    
        try:
            original = target.__dict__[name]
        except (AttributeError, KeyError):
            original = getattr(target, name, DEFAULT)
        else:
            local = True
    
        if name in _builtins and isinstance(target, ModuleType):
            self.create = True
    
        if not self.create and original is DEFAULT:
>           raise AttributeError(
                "%s does not have the attribute %r" % (target, name)
            )
E           AttributeError: <module 'workbench_agent.cli' from '/opt/hostedtoolcache/Python/3.11.12/x64/lib/python3.11/site-packages/workbench_agent/cli.py'> does not have the attribute 'handle_download_reports'

/opt/hostedtoolcache/Python/3.11.12/x64/lib/python3.11/unittest/mock.py:1419: AttributeError
_____________________________ test_main_api_error ______________________________

    def test_main_api_error():
>       assert run_main_with_exception(ApiError("API down")) == 1

tests/test_cli.py:261: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
/opt/hostedtoolcache/Python/3.11.12/x64/lib/python3.11/unittest/mock.py:1375: in patched
    with self.decoration_helper(patched,
/opt/hostedtoolcache/Python/3.11.12/x64/lib/python3.11/contextlib.py:137: in __enter__
    return next(self.gen)
/opt/hostedtoolcache/Python/3.11.12/x64/lib/python3.11/unittest/mock.py:1357: in decoration_helper
    arg = exit_stack.enter_context(patching)
/opt/hostedtoolcache/Python/3.11.12/x64/lib/python3.11/contextlib.py:517: in enter_context
    result = _enter(cm)
/opt/hostedtoolcache/Python/3.11.12/x64/lib/python3.11/unittest/mock.py:1446: in __enter__
    original, local = self.get_original()
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = <unittest.mock._patch object at 0x7fe80e7faa50>

    def get_original(self):
        target = self.getter()
        name = self.attribute
    
        original = DEFAULT
        local = False
    
        try:
            original = target.__dict__[name]
        except (AttributeError, KeyError):
            original = getattr(target, name, DEFAULT)
        else:
            local = True
    
        if name in _builtins and isinstance(target, ModuleType):
            self.create = True
    
        if not self.create and original is DEFAULT:
>           raise AttributeError(
                "%s does not have the attribute %r" % (target, name)
            )
E           AttributeError: <module 'workbench_agent.cli' from '/opt/hostedtoolcache/Python/3.11.12/x64/lib/python3.11/site-packages/workbench_agent/cli.py'> does not have the attribute 'handle_download_reports'

/opt/hostedtoolcache/Python/3.11.12/x64/lib/python3.11/unittest/mock.py:1419: AttributeError
___________________________ test_main_network_error ____________________________

    def test_main_network_error():
>       assert run_main_with_exception(NetworkError("No connection")) == 1

tests/test_cli.py:264: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
/opt/hostedtoolcache/Python/3.11.12/x64/lib/python3.11/unittest/mock.py:1375: in patched
    with self.decoration_helper(patched,
/opt/hostedtoolcache/Python/3.11.12/x64/lib/python3.11/contextlib.py:137: in __enter__
    return next(self.gen)
/opt/hostedtoolcache/Python/3.11.12/x64/lib/python3.11/unittest/mock.py:1357: in decoration_helper
    arg = exit_stack.enter_context(patching)
/opt/hostedtoolcache/Python/3.11.12/x64/lib/python3.11/contextlib.py:517: in enter_context
    result = _enter(cm)
/opt/hostedtoolcache/Python/3.11.12/x64/lib/python3.11/unittest/mock.py:1446: in __enter__
    original, local = self.get_original()
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = <unittest.mock._patch object at 0x7fe80e7faa50>

    def get_original(self):
        target = self.getter()
        name = self.attribute
    
        original = DEFAULT
        local = False
    
        try:
            original = target.__dict__[name]
        except (AttributeError, KeyError):
            original = getattr(target, name, DEFAULT)
        else:
            local = True
    
        if name in _builtins and isinstance(target, ModuleType):
            self.create = True
    
        if not self.create and original is DEFAULT:
>           raise AttributeError(
                "%s does not have the attribute %r" % (target, name)
            )
E           AttributeError: <module 'workbench_agent.cli' from '/opt/hostedtoolcache/Python/3.11.12/x64/lib/python3.11/site-packages/workbench_agent/cli.py'> does not have the attribute 'handle_download_reports'

/opt/hostedtoolcache/Python/3.11.12/x64/lib/python3.11/unittest/mock.py:1419: AttributeError
___________________________ test_main_process_error ____________________________

    def test_main_process_error():
>       assert run_main_with_exception(ProcessError("Scan failed")) == 1

tests/test_cli.py:267: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
/opt/hostedtoolcache/Python/3.11.12/x64/lib/python3.11/unittest/mock.py:1375: in patched
    with self.decoration_helper(patched,
/opt/hostedtoolcache/Python/3.11.12/x64/lib/python3.11/contextlib.py:137: in __enter__
    return next(self.gen)
/opt/hostedtoolcache/Python/3.11.12/x64/lib/python3.11/unittest/mock.py:1357: in decoration_helper
    arg = exit_stack.enter_context(patching)
/opt/hostedtoolcache/Python/3.11.12/x64/lib/python3.11/contextlib.py:517: in enter_context
    result = _enter(cm)
/opt/hostedtoolcache/Python/3.11.12/x64/lib/python3.11/unittest/mock.py:1446: in __enter__
    original, local = self.get_original()
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = <unittest.mock._patch object at 0x7fe80e7faa50>

    def get_original(self):
        target = self.getter()
        name = self.attribute
    
        original = DEFAULT
        local = False
    
        try:
            original = target.__dict__[name]
        except (AttributeError, KeyError):
            original = getattr(target, name, DEFAULT)
        else:
            local = True
    
        if name in _builtins and isinstance(target, ModuleType):
            self.create = True
    
        if not self.create and original is DEFAULT:
>           raise AttributeError(
                "%s does not have the attribute %r" % (target, name)
            )
E           AttributeError: <module 'workbench_agent.cli' from '/opt/hostedtoolcache/Python/3.11.12/x64/lib/python3.11/site-packages/workbench_agent/cli.py'> does not have the attribute 'handle_download_reports'

/opt/hostedtoolcache/Python/3.11.12/x64/lib/python3.11/unittest/mock.py:1419: AttributeError
__________________________ test_main_process_timeout ___________________________

    def test_main_process_timeout():
>       assert run_main_with_exception(ProcessTimeoutError("Scan timeout")) == 1

tests/test_cli.py:270: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
/opt/hostedtoolcache/Python/3.11.12/x64/lib/python3.11/unittest/mock.py:1375: in patched
    with self.decoration_helper(patched,
/opt/hostedtoolcache/Python/3.11.12/x64/lib/python3.11/contextlib.py:137: in __enter__
    return next(self.gen)
/opt/hostedtoolcache/Python/3.11.12/x64/lib/python3.11/unittest/mock.py:1357: in decoration_helper
    arg = exit_stack.enter_context(patching)
/opt/hostedtoolcache/Python/3.11.12/x64/lib/python3.11/contextlib.py:517: in enter_context
    result = _enter(cm)
/opt/hostedtoolcache/Python/3.11.12/x64/lib/python3.11/unittest/mock.py:1446: in __enter__
    original, local = self.get_original()
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = <unittest.mock._patch object at 0x7fe80e7faa50>

    def get_original(self):
        target = self.getter()
        name = self.attribute
    
        original = DEFAULT
        local = False
    
        try:
            original = target.__dict__[name]
        except (AttributeError, KeyError):
            original = getattr(target, name, DEFAULT)
        else:
            local = True
    
        if name in _builtins and isinstance(target, ModuleType):
            self.create = True
    
        if not self.create and original is DEFAULT:
>           raise AttributeError(
                "%s does not have the attribute %r" % (target, name)
            )
E           AttributeError: <module 'workbench_agent.cli' from '/opt/hostedtoolcache/Python/3.11.12/x64/lib/python3.11/site-packages/workbench_agent/cli.py'> does not have the attribute 'handle_download_reports'

/opt/hostedtoolcache/Python/3.11.12/x64/lib/python3.11/unittest/mock.py:1419: AttributeError
_________________________ test_main_file_system_error __________________________

    def test_main_file_system_error():
>       assert run_main_with_exception(FileSystemError("Cannot write")) == 1

tests/test_cli.py:273: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
/opt/hostedtoolcache/Python/3.11.12/x64/lib/python3.11/unittest/mock.py:1375: in patched
    with self.decoration_helper(patched,
/opt/hostedtoolcache/Python/3.11.12/x64/lib/python3.11/contextlib.py:137: in __enter__
    return next(self.gen)
/opt/hostedtoolcache/Python/3.11.12/x64/lib/python3.11/unittest/mock.py:1357: in decoration_helper
    arg = exit_stack.enter_context(patching)
/opt/hostedtoolcache/Python/3.11.12/x64/lib/python3.11/contextlib.py:517: in enter_context
    result = _enter(cm)
/opt/hostedtoolcache/Python/3.11.12/x64/lib/python3.11/unittest/mock.py:1446: in __enter__
    original, local = self.get_original()
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = <unittest.mock._patch object at 0x7fe80e7faa50>

    def get_original(self):
        target = self.getter()
        name = self.attribute
    
        original = DEFAULT
        local = False
    
        try:
            original = target.__dict__[name]
        except (AttributeError, KeyError):
            original = getattr(target, name, DEFAULT)
        else:
            local = True
    
        if name in _builtins and isinstance(target, ModuleType):
            self.create = True
    
        if not self.create and original is DEFAULT:
>           raise AttributeError(
                "%s does not have the attribute %r" % (target, name)
            )
E           AttributeError: <module 'workbench_agent.cli' from '/opt/hostedtoolcache/Python/3.11.12/x64/lib/python3.11/site-packages/workbench_agent/cli.py'> does not have the attribute 'handle_download_reports'

/opt/hostedtoolcache/Python/3.11.12/x64/lib/python3.11/unittest/mock.py:1419: AttributeError
________________________ test_main_compatibility_error _________________________

    def test_main_compatibility_error():
>       assert run_main_with_exception(CompatibilityError("Git mismatch")) == 1

tests/test_cli.py:276: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
/opt/hostedtoolcache/Python/3.11.12/x64/lib/python3.11/unittest/mock.py:1375: in patched
    with self.decoration_helper(patched,
/opt/hostedtoolcache/Python/3.11.12/x64/lib/python3.11/contextlib.py:137: in __enter__
    return next(self.gen)
/opt/hostedtoolcache/Python/3.11.12/x64/lib/python3.11/unittest/mock.py:1357: in decoration_helper
    arg = exit_stack.enter_context(patching)
/opt/hostedtoolcache/Python/3.11.12/x64/lib/python3.11/contextlib.py:517: in enter_context
    result = _enter(cm)
/opt/hostedtoolcache/Python/3.11.12/x64/lib/python3.11/unittest/mock.py:1446: in __enter__
    original, local = self.get_original()
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = <unittest.mock._patch object at 0x7fe80e7faa50>

    def get_original(self):
        target = self.getter()
        name = self.attribute
    
        original = DEFAULT
        local = False
    
        try:
            original = target.__dict__[name]
        except (AttributeError, KeyError):
            original = getattr(target, name, DEFAULT)
        else:
            local = True
    
        if name in _builtins and isinstance(target, ModuleType):
            self.create = True
    
        if not self.create and original is DEFAULT:
>           raise AttributeError(
                "%s does not have the attribute %r" % (target, name)
            )
E           AttributeError: <module 'workbench_agent.cli' from '/opt/hostedtoolcache/Python/3.11.12/x64/lib/python3.11/site-packages/workbench_agent/cli.py'> does not have the attribute 'handle_download_reports'

/opt/hostedtoolcache/Python/3.11.12/x64/lib/python3.11/unittest/mock.py:1419: AttributeError
__________________________ test_main_unexpected_error __________________________

    def test_main_unexpected_error():
>       assert run_main_with_exception(Exception("Something broke")) == 1 # Generic exit code 1

tests/test_cli.py:279: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
/opt/hostedtoolcache/Python/3.11.12/x64/lib/python3.11/unittest/mock.py:1375: in patched
    with self.decoration_helper(patched,
/opt/hostedtoolcache/Python/3.11.12/x64/lib/python3.11/contextlib.py:137: in __enter__
    return next(self.gen)
/opt/hostedtoolcache/Python/3.11.12/x64/lib/python3.11/unittest/mock.py:1357: in decoration_helper
    arg = exit_stack.enter_context(patching)
/opt/hostedtoolcache/Python/3.11.12/x64/lib/python3.11/contextlib.py:517: in enter_context
    result = _enter(cm)
/opt/hostedtoolcache/Python/3.11.12/x64/lib/python3.11/unittest/mock.py:1446: in __enter__
    original, local = self.get_original()
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = <unittest.mock._patch object at 0x7fe80e7faa50>

    def get_original(self):
        target = self.getter()
        name = self.attribute
    
        original = DEFAULT
        local = False
    
        try:
            original = target.__dict__[name]
        except (AttributeError, KeyError):
            original = getattr(target, name, DEFAULT)
        else:
            local = True
    
        if name in _builtins and isinstance(target, ModuleType):
            self.create = True
    
        if not self.create and original is DEFAULT:
>           raise AttributeError(
                "%s does not have the attribute %r" % (target, name)
            )
E           AttributeError: <module 'workbench_agent.cli' from '/opt/hostedtoolcache/Python/3.11.12/x64/lib/python3.11/site-packages/workbench_agent/cli.py'> does not have the attribute 'handle_download_reports'

/opt/hostedtoolcache/Python/3.11.12/x64/lib/python3.11/unittest/mock.py:1419: AttributeError
___________________ test_main_evaluate_gates_fail_returns_1 ____________________

    def test_main_evaluate_gates_fail_returns_1():
        # Special case for evaluate-gates returning False
>       with patch("workbench_agent.cli.handle_evaluate_gates", return_value=False) as mock_handler, \
             patch("workbench_agent.cli.Workbench"), \
             patch("workbench_agent.cli.parse_cmdline_args") as mock_parse:

tests/test_cli.py:283: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
/opt/hostedtoolcache/Python/3.11.12/x64/lib/python3.11/unittest/mock.py:1446: in __enter__
    original, local = self.get_original()
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = <unittest.mock._patch object at 0x7fe80e3e8c10>

    def get_original(self):
        target = self.getter()
        name = self.attribute
    
        original = DEFAULT
        local = False
    
        try:
            original = target.__dict__[name]
        except (AttributeError, KeyError):
            original = getattr(target, name, DEFAULT)
        else:
            local = True
    
        if name in _builtins and isinstance(target, ModuleType):
            self.create = True
    
        if not self.create and original is DEFAULT:
>           raise AttributeError(
                "%s does not have the attribute %r" % (target, name)
            )
E           AttributeError: <module 'workbench_agent.cli' from '/opt/hostedtoolcache/Python/3.11.12/x64/lib/python3.11/site-packages/workbench_agent/cli.py'> does not have the attribute 'handle_evaluate_gates'

/opt/hostedtoolcache/Python/3.11.12/x64/lib/python3.11/unittest/mock.py:1419: AttributeError
_____________ test_format_duration[7322.5-122 minutes, 3 seconds] ______________

seconds = 7322.5, expected = '122 minutes, 3 seconds'

    @pytest.mark.parametrize("seconds, expected", [
        (0, "0 seconds"),
        (1, "1 second"),
        (59, "59 seconds"),
        (60, "1 minutes"),
        (61, "1 minutes, 1 seconds"),
        (119, "1 minutes, 59 seconds"),
        (120, "2 minutes"),
        (121, "2 minutes, 1 seconds"),
        (3600, "60 minutes"),
        (3661, "61 minutes, 1 seconds"),
        (7322.5, "122 minutes, 3 seconds"), # Test rounding
        (None, "N/A"),
        ("abc", "Invalid Duration"),
    ])
    def test_format_duration(seconds, expected):
>       assert format_duration(seconds) == expected
E       AssertionError: assert '122 minutes, 2 seconds' == '122 minutes, 3 seconds'
E         
E         - 122 minutes, 3 seconds
E         ?              ^
E         + 122 minutes, 2 seconds
E         ?              ^

tests/test_utils.py:480: AssertionError
______________________ test_save_results_to_file_success _______________________

mock_makedirs = <MagicMock name='makedirs' id='140634654219472'>
mock_open_file = <MagicMock name='open' id='140634652770448'>

    @patch("builtins.open", new_callable=mock_open)
    @patch("os.makedirs")
    def test_save_results_to_file_success(mock_makedirs, mock_open_file):
        results_data = {"scan_metrics": {"total": 100}, "kb_licenses": [{"id": "MIT"}]}
        filepath = "/output/dir/results.json"
        scan_code = "SCAN123"
    
        _save_results_to_file(filepath, results_data, scan_code)
    
        mock_makedirs.assert_called_once_with("/output/dir", exist_ok=True)
        mock_open_file.assert_called_once_with(filepath, 'w', encoding='utf-8')
        handle = mock_open_file()
        # Check that json.dump was called with the correct data and indent
        written_content = handle.write.call_args[0][0]
>       assert written_content == json.dumps(results_data, indent=2, ensure_ascii=False)
E       assert '}' == '{\n  "scan_m...    }\n  ]\n}'
E         
E         - {
E         -   "scan_metrics": {
E         -     "total": 100
E         -   },
E         -   "kb_licenses": [
E         -     {
E         -       "id": "MIT"
E         -     }
E         -   ]
E           }

tests/test_utils.py:497: AssertionError
----------------------------- Captured stdout call -----------------------------
Saved results to: /output/dir/results.json
_______________________ test_upload_files_path_not_found _______________________

workbench_inst = <MagicMock name='exists' id='140634652517840'>

    @patch('os.path.exists', return_value=False)
    def test_upload_files_path_not_found(workbench_inst):
>       with pytest.raises(FileSystemError, match="Path does not exist"):
E       Failed: DID NOT RAISE <class 'workbench_agent.exceptions.FileSystemError'>

tests/test_workbench.py:331: Failed
=========================== short test summary info ============================
FAILED tests/test_cli.py::test_parse_scan_command - AssertionError: assert 'X' == 'X/api.php'
  
  - X/api.php
  + X
FAILED tests/test_cli.py::test_parse_evaluate_gates - SystemExit: 2
FAILED tests/test_cli.py::test_parse_flags_and_log_level - SystemExit: 2
FAILED tests/test_cli.py::test_parse_validation_id_reuse_missing_source - SystemExit: 2
FAILED tests/test_cli.py::test_parse_validation_download_missing_project - Failed: DID NOT RAISE <class 'workbench_agent.exceptions.ValidationError'>
FAILED tests/test_cli.py::test_parse_validation_download_missing_scan - Failed: DID NOT RAISE <class 'workbench_agent.exceptions.ValidationError'>
FAILED tests/test_cli.py::test_parse_validation_show_results_missing_show_flag - SystemExit: 2
FAILED tests/test_cli.py::test_parse_validation_scan_git_branch_and_tag - SystemExit: 2
FAILED tests/test_cli.py::test_parse_validation_scan_git_missing_ref - SystemExit: 2
FAILED tests/test_cli.py::test_parse_validation_scan_non_existent_path - Failed: DID NOT RAISE <class 'workbench_agent.exceptions.ValidationError'>
FAILED tests/test_cli.py::test_parse_validation_missing_credentials - SystemExit: 2
FAILED tests/test_cli.py::test_parse_credentials_from_env_vars - AssertionError: assert 'http://env.com' == 'http://env.com/api.php'
  
  - http://env.com/api.php
  ?               --------
  + http://env.com
FAILED tests/test_cli.py::test_parse_args_no_command - SystemExit: 2
FAILED tests/test_cli.py::test_parse_args_scan_no_path - SystemExit: 2
FAILED tests/test_cli.py::test_parse_args_scan_git_no_url - SystemExit: 2
FAILED tests/test_cli.py::test_parse_args_import_da_no_path - SystemExit: 2
FAILED tests/test_cli.py::test_main_success - AttributeError: <module 'workbench_agent.cli' from '/opt/hostedtoolcache/Python/3.11.12/x64/lib/python3.11/site-packages/workbench_agent/cli.py'> does not have the attribute 'handle_scan'
FAILED tests/test_cli.py::test_main_validation_error - SystemExit: 2
FAILED tests/test_cli.py::test_main_configuration_error - AttributeError: <module 'workbench_agent.cli' from '/opt/hostedtoolcache/Python/3.11.12/x64/lib/python3.11/site-packages/workbench_agent/cli.py'> does not have the attribute 'handle_download_reports'
FAILED tests/test_cli.py::test_main_authentication_error - AttributeError: <module 'workbench_agent.cli' from '/opt/hostedtoolcache/Python/3.11.12/x64/lib/python3.11/site-packages/workbench_agent/cli.py'> does not have the attribute 'handle_download_reports'
FAILED tests/test_cli.py::test_main_project_not_found - AttributeError: <module 'workbench_agent.cli' from '/opt/hostedtoolcache/Python/3.11.12/x64/lib/python3.11/site-packages/workbench_agent/cli.py'> does not have the attribute 'handle_download_reports'
FAILED tests/test_cli.py::test_main_scan_not_found - AttributeError: <module 'workbench_agent.cli' from '/opt/hostedtoolcache/Python/3.11.12/x64/lib/python3.11/site-packages/workbench_agent/cli.py'> does not have the attribute 'handle_download_reports'
FAILED tests/test_cli.py::test_main_api_error - AttributeError: <module 'workbench_agent.cli' from '/opt/hostedtoolcache/Python/3.11.12/x64/lib/python3.11/site-packages/workbench_agent/cli.py'> does not have the attribute 'handle_download_reports'
FAILED tests/test_cli.py::test_main_network_error - AttributeError: <module 'workbench_agent.cli' from '/opt/hostedtoolcache/Python/3.11.12/x64/lib/python3.11/site-packages/workbench_agent/cli.py'> does not have the attribute 'handle_download_reports'
FAILED tests/test_cli.py::test_main_process_error - AttributeError: <module 'workbench_agent.cli' from '/opt/hostedtoolcache/Python/3.11.12/x64/lib/python3.11/site-packages/workbench_agent/cli.py'> does not have the attribute 'handle_download_reports'
FAILED tests/test_cli.py::test_main_process_timeout - AttributeError: <module 'workbench_agent.cli' from '/opt/hostedtoolcache/Python/3.11.12/x64/lib/python3.11/site-packages/workbench_agent/cli.py'> does not have the attribute 'handle_download_reports'
FAILED tests/test_cli.py::test_main_file_system_error - AttributeError: <module 'workbench_agent.cli' from '/opt/hostedtoolcache/Python/3.11.12/x64/lib/python3.11/site-packages/workbench_agent/cli.py'> does not have the attribute 'handle_download_reports'
FAILED tests/test_cli.py::test_main_compatibility_error - AttributeError: <module 'workbench_agent.cli' from '/opt/hostedtoolcache/Python/3.11.12/x64/lib/python3.11/site-packages/workbench_agent/cli.py'> does not have the attribute 'handle_download_reports'
FAILED tests/test_cli.py::test_main_unexpected_error - AttributeError: <module 'workbench_agent.cli' from '/opt/hostedtoolcache/Python/3.11.12/x64/lib/python3.11/site-packages/workbench_agent/cli.py'> does not have the attribute 'handle_download_reports'
FAILED tests/test_cli.py::test_main_evaluate_gates_fail_returns_1 - AttributeError: <module 'workbench_agent.cli' from '/opt/hostedtoolcache/Python/3.11.12/x64/lib/python3.11/site-packages/workbench_agent/cli.py'> does not have the attribute 'handle_evaluate_gates'
FAILED tests/test_utils.py::test_format_duration[7322.5-122 minutes, 3 seconds] - AssertionError: assert '122 minutes, 2 seconds' == '122 minutes, 3 seconds'
  
  - 122 minutes, 3 seconds
  ?              ^
  + 122 minutes, 2 seconds
  ?              ^
FAILED tests/test_utils.py::test_save_results_to_file_success - assert '}' == '{\n  "scan_m...    }\n  ]\n}'
  
  - {
  -   "scan_metrics": {
  -     "total": 100
  -   },
  -   "kb_licenses": [
  -     {
  -       "id": "MIT"
  -     }
  -   ]
    }
FAILED tests/test_workbench.py::test_upload_files_path_not_found - Failed: DID NOT RAISE <class 'workbench_agent.exceptions.FileSystemError'>
ERROR tests/handlers/test_download_reports_handler.py::test_handle_download_reports_scan_sync
ERROR tests/handlers/test_download_reports_handler.py::test_handle_download_reports_project_async
ERROR tests/handlers/test_download_reports_handler.py::test_handle_download_reports_multiple_one_fails
ERROR tests/handlers/test_download_reports_handler.py::test_handle_download_reports_scan_global_resolve
ERROR tests/handlers/test_download_reports_handler.py::test_handle_download_reports_scan_global_resolve_project_fail
ERROR tests/handlers/test_download_reports_handler.py::test_handle_download_reports_invalid_scope
ERROR tests/handlers/test_download_reports_handler.py::test_handle_download_reports_invalid_type
ERROR tests/handlers/test_download_reports_handler.py::test_handle_download_reports_project_resolve_fails
ERROR tests/handlers/test_download_reports_handler.py::test_handle_download_reports_scan_resolve_fails
ERROR tests/handlers/test_evaluate_gates_handler.py::test_handle_evaluate_gates_pass
ERROR tests/handlers/test_evaluate_gates_handler.py::test_handle_evaluate_gates_pass_needs_wait
ERROR tests/handlers/test_evaluate_gates_handler.py::test_handle_evaluate_gates_fail_pending
ERROR tests/handlers/test_evaluate_gates_handler.py::test_handle_evaluate_gates_fail_policy
ERROR tests/handlers/test_evaluate_gates_handler.py::test_handle_evaluate_gates_pass_with_pending_fail_on_policy
ERROR tests/handlers/test_evaluate_gates_handler.py::test_handle_evaluate_gates_pass_with_policy_fail_on_pending
ERROR tests/handlers/test_evaluate_gates_handler.py::test_handle_evaluate_gates_fail_scan_wait
ERROR tests/handlers/test_evaluate_gates_handler.py::test_handle_evaluate_gates_fail_scan_failed_status
ERROR tests/handlers/test_evaluate_gates_handler.py::test_handle_evaluate_gates_fail_api_error_pending
ERROR tests/handlers/test_evaluate_gates_handler.py::test_handle_evaluate_gates_pass_api_error_pending_fail_on_none
ERROR tests/handlers/test_evaluate_gates_handler.py::test_handle_evaluate_gates_project_resolve_fails
ERROR tests/handlers/test_evaluate_gates_handler.py::test_handle_evaluate_gates_scan_resolve_fails
ERROR tests/handlers/test_import_da_handler.py::test_handle_import_da_success
ERROR tests/handlers/test_import_da_handler.py::test_handle_import_da_start_da_fails
ERROR tests/handlers/test_import_da_handler.py::test_handle_import_da_upload_fails_filesystem
ERROR tests/handlers/test_import_da_handler.py::test_handle_import_da_upload_fails_network
ERROR tests/handlers/test_import_da_handler.py::test_handle_import_da_project_not_found
ERROR tests/handlers/test_import_da_handler.py::test_handle_import_da_scan_not_found
ERROR tests/handlers/test_import_da_handler.py::test_handle_import_da_compatibility_error
ERROR tests/handlers/test_import_da_handler.py::test_handle_import_da_wait_process_error
ERROR tests/handlers/test_import_da_handler.py::test_handle_import_da_wait_timeout_error
ERROR tests/handlers/test_import_da_handler.py::test_handle_import_da_fetch_api_error
ERROR tests/handlers/test_import_da_handler.py::test_handle_import_da_unexpected_error
ERROR tests/handlers/test_scan_git_handler.py::test_handle_scan_git_success_branch
ERROR tests/handlers/test_scan_git_handler.py::test_handle_scan_git_success_tag
ERROR tests/handlers/test_scan_git_handler.py::test_handle_scan_git_download_start_fails
ERROR tests/handlers/test_scan_git_handler.py::test_handle_scan_git_download_wait_fails
ERROR tests/handlers/test_scan_git_handler.py::test_handle_scan_git_project_not_found
ERROR tests/handlers/test_scan_git_handler.py::test_handle_scan_git_scan_not_found
ERROR tests/handlers/test_scan_git_handler.py::test_handle_scan_git_compatibility_error
ERROR tests/handlers/test_scan_git_handler.py::test_handle_scan_git_api_error_in_exec
ERROR tests/handlers/test_scan_git_handler.py::test_handle_scan_git_network_error
ERROR tests/handlers/test_scan_git_handler.py::test_handle_scan_git_process_error
ERROR tests/handlers/test_scan_git_handler.py::test_handle_scan_git_process_timeout_error
ERROR tests/handlers/test_scan_git_handler.py::test_handle_scan_git_unexpected_error
ERROR tests/handlers/test_scan_handler.py::test_handle_scan_success
ERROR tests/handlers/test_scan_handler.py::test_handle_scan_success_no_extract_wait
ERROR tests/handlers/test_scan_handler.py::test_handle_scan_upload_fails
ERROR tests/handlers/test_scan_handler.py::test_handle_scan_project_not_found
ERROR tests/handlers/test_scan_handler.py::test_handle_scan_scan_not_found
ERROR tests/handlers/test_scan_handler.py::test_handle_scan_api_error
ERROR tests/handlers/test_scan_handler.py::test_handle_scan_network_error
ERROR tests/handlers/test_scan_handler.py::test_handle_scan_process_error
ERROR tests/handlers/test_scan_handler.py::test_handle_scan_process_timeout
ERROR tests/handlers/test_scan_handler.py::test_handle_scan_unexpected_error
ERROR tests/handlers/test_show_results_handler.py::test_handle_show_results_success
ERROR tests/handlers/test_show_results_handler.py::test_handle_show_results_project_resolve_fails
ERROR tests/handlers/test_show_results_handler.py::test_handle_show_results_scan_resolve_fails
ERROR tests/integration/test_integration.py::test_scan_success_flow
ERROR tests/integration/test_integration.py::test_scan_fail_during_scan
ERROR tests/integration/test_integration.py::test_evaluate_gates_pass_flow
ERROR tests/integration/test_integration.py::test_evaluate_gates_fail_pending_flow
ERROR tests/integration/test_integration.py::test_download_report_sync_flow
ERROR tests/test_utils.py::test_resolve_project_success
ERROR tests/test_utils.py::test_resolve_project_not_found_no_create
ERROR tests/test_utils.py::test_resolve_project_found_create_no_error
ERROR tests/test_utils.py::test_resolve_project_create_success
ERROR tests/test_utils.py::test_resolve_project_create_race_condition
ERROR tests/test_utils.py::test_resolve_project_api_error_list
ERROR tests/test_utils.py::test_resolve_project_network_error_list
ERROR tests/test_utils.py::test_resolve_project_api_error_create
ERROR tests/test_utils.py::test_resolve_scan_success_project_scope
ERROR tests/test_utils.py::test_resolve_scan_success_global_scope
ERROR tests/test_utils.py::test_resolve_scan_not_found_project_scope
ERROR tests/test_utils.py::test_resolve_scan_not_found_global_scope
ERROR tests/test_utils.py::test_resolve_scan_found_create_no_error
ERROR tests/test_utils.py::test_resolve_scan_api_error_project_scope
ERROR tests/test_utils.py::test_resolve_scan_network_error_project_scope
ERROR tests/test_utils.py::test_execute_standard_scan_flow_success
ERROR tests/test_utils.py::test_execute_standard_scan_flow_id_reuse_project
ERROR tests/test_utils.py::test_execute_standard_scan_flow_id_reuse_scan_local
ERROR tests/test_utils.py::test_execute_standard_scan_flow_id_reuse_scan_global
ERROR tests/test_utils.py::test_execute_standard_scan_flow_id_reuse_scan_fails
ERROR tests/test_utils.py::test_execute_standard_scan_flow_with_da
ERROR tests/test_utils.py::test_execute_standard_scan_flow_start_api_error
ERROR tests/test_utils.py::test_execute_standard_scan_flow_wait_network_error
ERROR tests/test_utils.py::test_execute_standard_scan_flow_wait_process_error
ERROR tests/test_utils.py::test_execute_standard_scan_flow_wait_process_timeout
ERROR tests/test_utils.py::test_save_report_content_success
ERROR tests/test_utils.py::test_save_report_content_binary
ERROR tests/test_utils.py::test_save_report_content_dict
ERROR tests/test_utils.py::test_save_report_content_file_system_error
ERROR tests/test_utils.py::test_resolve_scan_project_scope_create_success
ERROR tests/test_utils.py::test_resolve_scan_project_scope_not_found_no_create
ERROR tests/test_utils.py::test_resolve_scan_global_scope_create_error
ERROR tests/test_utils.py::test_resolve_scan_triggers_compatibility_check
ERROR tests/test_utils.py::test_ensure_scan_compatibility_git_branch_mismatch
ERROR tests/test_utils.py::test_ensure_scan_compatibility_git_tag_vs_branch
ERROR tests/test_utils.py::test_ensure_scan_compatibility_git_branch_vs_tag
ERROR tests/test_utils.py::test_ensure_scan_compatibility_git_tag_mismatch
ERROR tests/test_utils.py::test_ensure_scan_compatibility_git_url_mismatch
ERROR tests/test_utils.py::test_ensure_scan_compatibility_scan_vs_git
ERROR tests/test_utils.py::test_ensure_scan_compatibility_git_vs_scan
ERROR tests/test_utils.py::test_ensure_scan_compatibility_no_conflict_scan
ERROR tests/test_utils.py::test_ensure_scan_compatibility_no_conflict_git
ERROR tests/test_utils.py::test_ensure_scan_compatibility_no_conflict_import_da
ERROR tests/test_workbench.py::test_send_request_success
ERROR tests/test_workbench.py::test_send_request_api_error
ERROR tests/test_workbench.py::test_send_request_network_error
ERROR tests/test_workbench.py::test_send_request_timeout
ERROR tests/test_workbench.py::test_send_request_invalid_json_status
ERROR tests/test_workbench.py::test_send_request_sync_response
ERROR tests/test_workbench.py::test_send_request_http_error
ERROR tests/test_workbench.py::test_send_request_json_decode_error
ERROR tests/test_workbench.py::test_is_status_check_supported_yes
ERROR tests/test_workbench.py::test_is_status_check_supported_no_invalid_type
ERROR tests/test_workbench.py::test_is_status_check_supported_api_error
ERROR tests/test_workbench.py::test_is_status_check_supported_network_error
ERROR tests/test_workbench.py::test_wait_for_process_success
ERROR tests/test_workbench.py::test_wait_for_process_timeout
ERROR tests/test_workbench.py::test_wait_for_process_failure
ERROR tests/test_workbench.py::test_wait_for_process_check_fails_retries
ERROR tests/test_workbench.py::test_wait_for_process_accessor_fails
ERROR tests/test_workbench.py::test_upload_files_file_success
ERROR tests/test_workbench.py::test_upload_files_dir_success
ERROR tests/test_workbench.py::test_upload_files_chunked_success
ERROR tests/test_workbench.py::test_upload_files_da_import
ERROR tests/test_workbench.py::test_upload_files_network_error
ERROR tests/test_workbench.py::test_get_pending_files_success
ERROR tests/test_workbench.py::test_get_pending_files_empty
ERROR tests/test_workbench.py::test_get_pending_files_api_error
ERROR tests/test_workbench.py::test_get_scan_identified_components_success
ERROR tests/test_workbench.py::test_get_scan_identified_components_fail
ERROR tests/test_workbench.py::test_get_dependency_analysis_results_success
ERROR tests/test_workbench.py::test_get_dependency_analysis_results_not_run
ERROR tests/test_workbench.py::test_get_dependency_analysis_results_other_error
ERROR tests/test_workbench.py::test_create_project_success
ERROR tests/test_workbench.py::test_create_project_already_exists
ERROR tests/test_workbench.py::test_create_webapp_scan_success
ERROR tests/test_workbench.py::test_create_webapp_scan_already_exists
================== 33 failed, 22 passed, 139 errors in 2.70s ===================